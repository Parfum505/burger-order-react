{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","containers/Authorisation/Authorisation.css","components/Navigation/NavItems/NavItems.css","components/Navigation/SideMenu/SideMenu.css","components/UI/Modal/Modal.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavItems/NavItem/NavItem.css","components/UI/Backdrop/Backdrop.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Order/Order.css","containers/Orders/Orders.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Navigation/Logo/Logo.css","assets/images/login.svg","assets/images/logout.svg","components/Navigation/MobileMenuBtn/MobileMenuBtn.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactInfo/ContactInfo.css","axios-orders.js","store/actions/authorisation.js","store/actions/actionTypes.js","hoc/Auxiliary.js","components/Navigation/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/MobileMenuBtn/MobileMenuBtn.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideMenu/SideMenu.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","hooks/httpErrorHandler.js","store/utility.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactInfo/ContactInfo.js","containers/Checkout/Checkout.js","containers/Authorisation/Authorisation.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Authorisation/Logout/Logout.js","App.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/authorisation.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","authSuccess","idToken","localId","type","userId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","Auxil","props","children","Logo","className","classes","src","burgerLogo","alt","NavItem","to","link","exact","activeClassName","active","connect","state","isAuth","auth","NavItems","LoginIcon","LogoutIcon","MobileMenuBtn","onClick","clicked","React","memo","Toolbar","openMenu","Backdrop","addedClasses","addClass","newClass","push","show","join","closeMenu","SideMenu","Open","onTryAutoSingIn","token","getItem","expDate","Date","getTime","useState","showMobileMenu","setShowMobileMenu","useEffect","Content","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","ingredients","addedIngredient","Object","keys","map","ingKey","Array","_","i","key","reduce","arr","item","concat","length","BuildControl","Label","label","Less","remove","disabled","More","add","BuildControls","controls","ingr","charAt","toUpperCase","slice","totalPrice","toFixed","addIngredients","removeIngredients","OrderButton","purchasable","buy","modalClasses","Modal","Active","modalClosed","prevProps","nextProps","Button","btnType","OrderSummary","ingredientsSummary","entries","style","textTransform","buyCancel","buyContinue","spinner","Loader","withErrorHandler","WrappedComponent","httpClien","error","setError","reqInterceptor","interceptors","request","use","err","respInterceptor","response","resp","eject","useHttpErrorHandler","clearError","message","updateObject","oldObj","updatedProps","countIngredients","ingredientsObj","values","sum","val","checkValidation","value","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","burgerBuilder","addIngredientHandler","ingName","ingredientName","removeIngredientHandler","initIngredientsHandler","get","then","data","catch","onInitPurchase","setRiderectPath","actions","buying","setBuying","buyCancelHandler","orderSummary","burger","textAlign","margin","color","fontWeight","total","curr","history","CheckoutSummary","checkoutCancel","activeContactInfo","checkoutContinue","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","onChange","changed","options","opt","displayVal","htmlFor","loading","order","onOrderBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerError","action","formIsValid","setFormIsValid","placeholder","validation","valid","street","zipCode","city","email","deliveryMethod","orderForm","setOrderForm","formElementsArray","form","onSubmit","event","preventDefault","formData","formElementId","price","element","elementId","updatedFormElement","target","updatedForm","isFormIsValid","inputChangedHandler","ContactInfo","purchased","setActiveContactInfo","summary","purchaseRedirect","goBack","replace","match","component","authRedirectPath","onAuth","passw","isSingUp","password","authData","returnSecureToken","url","burgerExpDate","expiresIn","setItem","authError","setIsSingUp","setControls","Dissabled","errorMessage","ErrorMessage","split","authRedirect","Authorisation","StyledOrder","styled","li","onFetchDeleteOrders","delete","res","status","deleteOrder","deleteOrderError","disableBtn","setDisableBtn","Order","Ingredient","orders","onFetchOrders","queryParams","fetchedOrders","fetchOrdersError","TransitionGroup","List","CSSTransition","classNames","timeout","Orders","logoutHandler","routs","BurgerBuilder","Checkout","Logout","basename","initialState","INGREDIENT_PRICES","salad","bacon","meat","cheese","addIngredient","newPrice","updIngredient","updIngredients","removeIngredient","updatedCount","reducer","newOrders","filter","newOrder","initState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7be258c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authorisation\":\"Authorisation__Authorisation__1Sy71\",\"ErrorMessage\":\"Authorisation__ErrorMessage__JWvVZ\",\"Dissabled\":\"Authorisation__Dissabled__2Iutd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems__NavItems__3fZSa\",\"LoginIcon\":\"NavItems__LoginIcon__dt-As\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu__SideMenu__3UWTy\",\"Open\":\"SideMenu__Open__1SgcR\",\"Logo\":\"SideMenu__Logo__2xnje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"Loading\":\"Modal__Loading__2_sU3\",\"Active\":\"Modal__Active__1AINr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem__NavItem__r-b9L\",\"active\":\"NavItem__active__2ZZNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\",\"hideDesktop\":\"Backdrop__hideDesktop__1llls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\",\"SuccessBlue\":\"Button__SuccessBlue__1OcmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\",\"Ingredient\":\"Order__Ingredient__5aDVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders__Orders__30Bmr\",\"List\":\"Orders__List__3VSNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2k2jA\"};","module.exports = __webpack_public_path__ + \"static/media/login.6ab6cd51.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.d4ad0c4f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MobileMenuBtn\":\"MobileMenuBtn__MobileMenuBtn__2PzFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load6\":\"Spinner__load6__3S2CE\",\"round\":\"Spinner__round__2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactInfo\":\"ContactInfo__ContactInfo__1dgSV\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-order-react.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\nconst authSuccess = (idToken, localId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: idToken,\r\n    userId: localId,\r\n  };\r\n};\r\nconst authError = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"burgerToken\");\r\n  localStorage.removeItem(\"burgerExpDate\");\r\n  localStorage.removeItem(\"burgerUserId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\nconst checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\nexport const authorisation = (email, password, isSingUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDgJZ-Y9stbJo0GasmJfTb6MMqvyI2R630\";\r\n    if (!isSingUp) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDgJZ-Y9stbJo0GasmJfTb6MMqvyI2R630\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const burgerExpDate =\r\n          new Date().getTime() + response.data.expiresIn * 1000;\r\n        localStorage.setItem(\"burgerToken\", response.data.idToken);\r\n        localStorage.setItem(\"burgerUserId\", response.data.localId);\r\n        localStorage.setItem(\"burgerExpDate\", burgerExpDate);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authError(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"burgerToken\");\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const expDate = new Date(+localStorage.getItem(\"burgerExpDate\"));\r\n    if (expDate <= new Date()) {\r\n      dispatch(logout());\r\n      return;\r\n    }\r\n    const userId = localStorage.getItem(\"burgerUserId\");\r\n    dispatch(\r\n      checkAuthTimeout((expDate.getTime() - new Date().getTime()) / 1000)\r\n    );\r\n    dispatch(authSuccess(token, userId));\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_ERROR = \"FETCH_INGREDIENTS_ERROR\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_ERROR = \"PURCHASE_BURGER_ERROR\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_ERROR = \"FETCH_ORDERS_ERROR\";\r\n\r\nexport const DELETE_ORDER = \"DELETE_ORDER\";\r\nexport const DELETE_ORDER_ERROR = \"DELETE_ORDER_ERROR\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n","const Auxil = (props) => props.children;\r\n\r\nexport default Auxil;","import React from \"react\";\r\nimport burgerLogo from \"../../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.css\";\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={burgerLogo} alt=\"logo\" />\r\n  </div>\r\n);\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport classes from \"./NavItem.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavItem = (props) => (\r\n  <li className={classes.NavItem}>\r\n    <NavLink to={props.link} exact activeClassName={classes.active}>\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nNavItem.propTypes = {\r\n  link: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./NavItems.css\";\r\nimport NavItem from \"./NavItem/NavItem\";\r\nimport LoginIcon from \"../../../assets/images/login.svg\";\r\nimport LogoutIcon from \"../../../assets/images/logout.svg\";\r\n\r\nexport const NavItems = (props) => (\r\n  <ul className={classes.NavItems}>\r\n    <NavItem link=\"/\">Burger Builder</NavItem>\r\n    {props.isAuth ? <NavItem link=\"/orders\">Orders</NavItem> : null}\r\n    {props.isAuth ? (\r\n      <NavItem link=\"/logout\">\r\n        <img className={classes.LoginIcon} src={LogoutIcon} alt=\"icon\" />\r\n      </NavItem>\r\n    ) : (\r\n      <NavItem link=\"/authorisation\">\r\n        <img className={classes.LoginIcon} src={LoginIcon} alt=\"icon\" />\r\n      </NavItem>\r\n    )}\r\n  </ul>\r\n);\r\nNavItems.propTypes = {\r\n  isAuth: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.userId !== null,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(NavItems);\r\n","import React from \"react\";\r\nimport classes from \"./MobileMenuBtn.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MobileMenuBtn = (props) => (\r\n  <div className={classes.MobileMenuBtn} onClick={props.clicked}>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n  </div>\r\n);\r\n\r\nMobileMenuBtn.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\nexport default MobileMenuBtn;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.css\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport MobileMenuBtn from \"../MobileMenuBtn/MobileMenuBtn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <MobileMenuBtn clicked={props.openMenu} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav>\r\n      <NavItems />\r\n    </nav>\r\n  </header>\r\n);\r\nToolbar.propTypes = {\r\n  openMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(Toolbar);\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Backdrop = (props) => {\r\n  let addedClasses = [classes.Backdrop];\r\n  if (props.addClass) {\r\n    for (let newClass of props.addClass) {\r\n      addedClasses.push(classes[newClass]);\r\n    }\r\n  }\r\n  return props.show ? (\r\n    <div className={addedClasses.join(\" \")} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nBackdrop.propTypes = {\r\n  addClass: PropTypes.array,\r\n  show: PropTypes.any,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport classes from \"./SideMenu.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SideMenu = (props) => {\r\n  return (\r\n    <Auxil>\r\n      <Backdrop\r\n        addClass={[\"hideDesktop\"]}\r\n        show={props.show}\r\n        clicked={props.closeMenu}\r\n      />\r\n      <div\r\n        className={[classes.SideMenu, props.show ? classes.Open : null].join(\r\n          \" \"\r\n        )}\r\n        onClick={props.closeMenu}\r\n      >\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavItems />\r\n        </nav>\r\n      </div>\r\n    </Auxil>\r\n  );\r\n};\r\nSideMenu.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\nexport default React.memo(SideMenu);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Auxil from \"../Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideMenu from \"../../components/Navigation/SideMenu/SideMenu\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Layout = (props) => {\r\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.onTryAutoSingIn();\r\n  }, []);\r\n\r\n  const closeMobileMenuHandler = () => {\r\n    setShowMobileMenu(false);\r\n  };\r\n  const openMobileMenuHandler = () => {\r\n    setShowMobileMenu(true);\r\n  };\r\n\r\n    return (\r\n      <Auxil>\r\n        <Toolbar openMenu={openMobileMenuHandler} />\r\n        <SideMenu\r\n          show={showMobileMenu}\r\n          closeMenu={closeMobileMenuHandler}\r\n        />\r\n        <main className={classes.Content}>{props.children}</main>\r\n      </Auxil>\r\n    );\r\n}\r\nLayout.propTypes = {\r\n  children: PropTypes.any,\r\n  onTryAutoSingIn: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSingIn: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Layout);\r\n","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case \"bread-bottom\":\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n        case \"bread-top\":\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>);\r\n            break;\r\n        case \"meat\":\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case \"cheese\":\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case \"bacon\":\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case \"salad\":\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport classes from \"./Burger.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Burger = ({ ingredients }) => {\r\n  let addedIngredient = Object.keys(ingredients)\r\n    .map((ingKey) => {\r\n      return [...Array(ingredients[ingKey])].map((_, i) => {\r\n        return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, item) => {\r\n      return arr.concat(item);\r\n    }, []);\r\n  if (!addedIngredient.length) {\r\n    addedIngredient = <p>Please add some ingredients!</p>;\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {addedIngredient}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\nBurger.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}\r\n                onClick={props.remove}\r\n                disabled={props.disabled}>Less</button>\r\n        <button className={classes.More}\r\n                onClick={props.add}>More</button>\r\n    </div>\r\n);\r\nBuildControl.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    remove: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n    add: PropTypes.func.isRequired,\r\n  };\r\nexport default BuildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControls = (props) => {\r\n  const controls = Object.keys(props.ingredients).map((ingr) => {\r\n    return {\r\n      label: ingr.charAt(0).toUpperCase() + ingr.slice(1),\r\n      type: ingr,\r\n    };\r\n  });\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Current price: <strong>{props.totalPrice.toFixed(2)}</strong>&nbsp;$\r\n      </p>\r\n      {controls.map((item) => (\r\n        <BuildControl\r\n          key={`ctrl-${item.label}`}\r\n          label={item.label}\r\n          add={() => props.addIngredients(item.type)}\r\n          remove={() => props.removeIngredients(item.type)}\r\n          disabled={props.ingredients[item.type] <= 0}\r\n        />\r\n      ))}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.buy}\r\n      >\r\n        {props.isAuth ? \"ORDER NOW\" : \"SING IN TO ORDER\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nBuildControls.propTypes = {\r\n  totalPrice: PropTypes.number,\r\n  addIngredients: PropTypes.func.isRequired,\r\n  removeIngredients: PropTypes.func.isRequired,\r\n  buy: PropTypes.func.isRequired,\r\n  purchasable: PropTypes.bool,\r\n  isAuth: PropTypes.bool.isRequired,\r\n  ingredients: PropTypes.object,\r\n};\r\nexport default BuildControls;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = (props) => {\r\n  let modalClasses = [classes.Modal];\r\n  if (props.show) {\r\n    modalClasses.push(classes.Active);\r\n  }\r\n  if (props.addedClasses) {\r\n    for (let addClass of props.addedClasses) {\r\n      modalClasses.push(classes[addClass]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Auxil>\r\n      <Backdrop show={props.show} clicked={props.modalClosed} />\r\n      <div className={modalClasses.join(\" \")}>{props.children}</div>\r\n    </Auxil>\r\n  );\r\n};\r\nModal.propTypes = {\r\n  addedClasses: PropTypes.array,\r\n  show: PropTypes.any,\r\n  modalClosed: PropTypes.func,\r\n  children: PropTypes.any,\r\n};\r\nexport default React.memo(\r\n  Modal,\r\n  (prevProps, nextProps) =>\r\n    nextProps.show === prevProps.show &&\r\n    nextProps.children === prevProps.children\r\n);\r\n","import React from \"react\";\r\nimport classes from \"./Button.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  btnType: PropTypes.string,\r\n  clicked: PropTypes.func,\r\n  children: PropTypes.any,\r\n  disabled: PropTypes.bool,\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientsSummary = Object.entries(props.ingredients).map(\r\n    (item, i) => {\r\n      return (\r\n        <li key={i}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{item[0]}</span>:&nbsp;\r\n          {item[1]}\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Auxil>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientsSummary}</ul>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.buyCancel}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.buyContinue}>\r\n        CONTINUE\r\n      </Button>\r\n    </Auxil>\r\n  );\r\n};\r\nOrderSummary.propTypes = {\r\n  btnType: PropTypes.string,\r\n  totalPrice: PropTypes.number,\r\n  buyCancel: PropTypes.func.isRequired,\r\n  buyContinue: PropTypes.func.isRequired,\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default OrderSummary;\r\n","import React from \"react\";\r\nimport classes from \"./Spinner.css\"\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxil from \"../Auxiliary\";\r\nimport useHttpErrorHandler from \"../../hooks/httpErrorHandler\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return function newErrorHandler(props) {\r\n    const [error, clearError] = useHttpErrorHandler(axios);\r\n    return (\r\n      <Auxil>\r\n        <Modal show={error} modalClosed={clearError}>\r\n          {error ? error.message : null}\r\n        </Modal>\r\n        <WrappedComponent {...props} />\r\n      </Auxil>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default (httpClien) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const reqInterceptor = httpClien.interceptors.request.use(\r\n    (request) => {\r\n      setError(null);\r\n      return request;\r\n    },\r\n    (err) => {\r\n      setError(err);\r\n    }\r\n  );\r\n  const respInterceptor = httpClien.interceptors.response.use(\r\n    (resp) => {\r\n      setError(null);\r\n      return resp;\r\n    },\r\n    (err) => {\r\n      setError(err);\r\n    }\r\n  );\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      httpClien.interceptors.request.eject(reqInterceptor);\r\n      httpClien.interceptors.response.eject(respInterceptor);\r\n    };\r\n  }, [reqInterceptor, respInterceptor]);\r\n\r\n  const errorCleanHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return [error, errorCleanHandler];\r\n};\r\n","export const updateObject = (oldObj, updatedProps) => {\r\n  return {\r\n    ...oldObj,\r\n    ...updatedProps,\r\n  };\r\n};\r\n\r\nexport const countIngredients = (ingredientsObj) => {\r\n  if (!ingredientsObj) {\r\n    return 0;\r\n  }\r\n  return Object.values(ingredientsObj).reduce((sum, val) => sum + val, 0);\r\n};\r\n\r\nexport const checkValidation = (value, rules) => {\r\n  let isValid = true;\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxil from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport {countIngredients} from \"../../store/utility\";\r\n\r\nexport const BurgerBuilder = (props) => {\r\n  const [buying, setBuying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.initIngredientsHandler();\r\n  }, []);\r\n\r\n  const buyCancelHandler = () => {\r\n    setBuying(false);\r\n  };\r\n  const buyContinueHandler = () => {\r\n    props.onInitPurchase();\r\n    props.history.push(\"/checkout\");\r\n  };\r\n  const buyHandler = () => {\r\n    if (props.isAuth) {\r\n      setBuying(true);\r\n    } else {\r\n      if (countIngredients(props.ingredients) > 0) {\r\n        props.setRiderectPath(\"/checkout\");\r\n      }\r\n      props.history.push(\"/authorisation\");\r\n    }\r\n  };\r\n  const updatePurchaseState = (ingredients) => {\r\n    const sum = Object.values(ingredients).reduce(\r\n      (total, curr) => total + curr,\r\n      0\r\n    );\r\n    return sum > 0;\r\n  };\r\n\r\n  const errorStyle = {\r\n    textAlign: \"center\",\r\n    margin: \"90px auto 20px\",\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n  };\r\n  let addClasses = [],\r\n    orderSummary = null;\r\n  let burger = props.error ? (\r\n    <p style={errorStyle}>Ingredients can&apos;t be loaded.</p>\r\n  ) : (\r\n    <Spinner />\r\n  );\r\n  if (props.ingredients) {\r\n    burger = (\r\n      <Auxil>\r\n        <Burger ingredients={props.ingredients} />\r\n        <BuildControls\r\n          addIngredients={props.addIngredientHandler}\r\n          removeIngredients={props.removeIngredientHandler}\r\n          ingredients={props.ingredients}\r\n          totalPrice={props.totalPrice}\r\n          purchasable={updatePurchaseState(props.ingredients)}\r\n          buy={buyHandler}\r\n          isAuth={props.isAuth}\r\n        />\r\n      </Auxil>\r\n    );\r\n    orderSummary = (\r\n      <OrderSummary\r\n        ingredients={props.ingredients}\r\n        buyCancel={buyCancelHandler}\r\n        buyContinue={buyContinueHandler}\r\n        totalPrice={props.totalPrice}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Auxil>\r\n      <Modal\r\n        addedClasses={addClasses}\r\n        show={buying}\r\n        modalClosed={buyCancelHandler}\r\n      >\r\n        {orderSummary}\r\n      </Modal>\r\n      {burger}\r\n    </Auxil>\r\n  );\r\n};\r\nBurgerBuilder.propTypes = {\r\n  history: PropTypes.any,\r\n  ingredients: PropTypes.object,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  addIngredientHandler: PropTypes.func.isRequired,\r\n  removeIngredientHandler: PropTypes.func.isRequired,\r\n  initIngredientsHandler: PropTypes.func.isRequired,\r\n  onInitPurchase: PropTypes.func.isRequired,\r\n  setRiderectPath: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuth: state.auth.token !== null,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIngredientHandler: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    removeIngredientHandler: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    initIngredientsHandler: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    setRiderectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const removeIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\nexport const fetchIngredientsError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_ERROR,\r\n  };\r\n};\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://burger-order-react.firebaseio.com/ingredients.json\")\r\n      .then((resp) => {\r\n        dispatch(setIngredients(resp.data));\r\n      })\r\n      .catch(() => dispatch(fetchIngredientsError()));\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\nexport const purchaseBurgerError = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerError(error));\r\n      });\r\n  };\r\n};\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\nexport const fetchOrdersError = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const fetchOrders = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams =\r\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n    axios\r\n      .get(\"/orders.json\" + queryParams)\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        for (const [id, value] of Object.entries(res.data)) {\r\n          fetchedOrders.push({ ...value, id: id });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersError(error));\r\n      });\r\n  };\r\n};\r\nexport const deleteOrderError = (error) => {\r\n  return {\r\n    type: actionTypes.DELETE_ORDER_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const deleteOrder = (id) => {\r\n  return {\r\n    type: actionTypes.DELETE_ORDER,\r\n    orderId: id,\r\n  };\r\n};\r\nexport const fetchDeleteOrder = (id, token) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(\"/orders/\" + id + \".json?auth=\" + token)\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          dispatch(deleteOrder(id));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(deleteOrderError(error));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancel}>\r\n        CANCEL\r\n      </Button>\r\n      {props.activeContactInfo ? null : (\r\n        <Button btnType=\"Success\" clicked={props.checkoutContinue}>\r\n          CONTINUE\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckoutSummary.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  checkoutCancel: PropTypes.func.isRequired,\r\n  checkoutContinue: PropTypes.func.isRequired,\r\n  activeContactInfo: PropTypes.bool,\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  props.touched && props.invalid ? inputClasses.push(classes.Invalid) : null;\r\n  switch (props.elementType) { \r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((opt) => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayVal}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label} htmlFor=\"\">\r\n        {props.label}\r\n      </label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\nInput.propTypes = {\r\n  label: PropTypes.string,\r\n  elementType: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  changed: PropTypes.func.isRequired,\r\n  invalid: PropTypes.bool,\r\n  touched: PropTypes.bool,\r\n};\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./ContactInfo.css\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport axios from \"../../../axios-orders\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport * as action from \"../../../store/actions/index\";\r\nimport { updateObject, checkValidation } from \"../../../store/utility\";\r\n\r\nconst ContactInfo = (props) => {\r\n  const initOrderForm = {\r\n    name: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        name: \"name\",\r\n        type: \"text\",\r\n        placeholder: \"Your name\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 2,\r\n        valid: false,\r\n      },\r\n      touched: false,\r\n    },\r\n    street: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        name: \"street\",\r\n        type: \"text\",\r\n        placeholder: \"Your street/app\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      touched: false,\r\n    },\r\n    zipCode: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        name: \"zipCode\",\r\n        type: \"text\",\r\n        placeholder: \"Your zip code\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 5,\r\n        isNumeric: true,\r\n        valid: false,\r\n      },\r\n      touched: false,\r\n    },\r\n    city: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        name: \"city\",\r\n        type: \"text\",\r\n        placeholder: \"Your city\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        valid: false,\r\n      },\r\n      touched: false,\r\n    },\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        name: \"email\",\r\n        type: \"email\",\r\n        placeholder: \"Your email\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n        valid: false,\r\n      },\r\n      touched: false,\r\n    },\r\n    deliveryMethod: {\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        options: [\r\n          { value: \"fastest\", displayVal: \"Fastest\" },\r\n          { value: \"cheapest\", displayVal: \"Cheapest\" },\r\n        ],\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        valid: true,\r\n      },\r\n    },\r\n  };\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  const [orderForm, setOrderForm] = useState(initOrderForm);\r\n  const orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (const formElementId in orderForm) {\r\n      formData[formElementId] = orderForm[formElementId].value;\r\n    }\r\n    const order = {\r\n      ingredients: props.ingredients,\r\n      price: props.totalPrice,\r\n      userId: props.userId,\r\n      orderData: formData,\r\n    };\r\n    props.onOrderBurger(order, props.token);\r\n  };\r\n  const inputChangedHandler = (event, elementId) => {\r\n    const updatedFormElement = updateObject(orderForm[elementId], {\r\n      value: event.target.value,\r\n      touched: true,\r\n      validation: updateObject(orderForm[elementId].validation, {\r\n        valid: checkValidation(\r\n          event.target.value,\r\n          orderForm[elementId].validation\r\n        ),\r\n      }),\r\n    });\r\n    const updatedForm = updateObject(orderForm, {\r\n      [elementId]: updatedFormElement,\r\n    });\r\n    let isFormIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        isFormIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    setOrderForm(updatedForm);\r\n    setFormIsValid(isFormIsValid);\r\n  };\r\n\r\n  const formElementsArray = Object.entries(orderForm);\r\n  let form = (\r\n    <form action=\"\" onSubmit={orderHandler}>\r\n      {formElementsArray.map((element) => (\r\n        <Input\r\n          key={element[0]}\r\n          elementType={element[1].elementType}\r\n          elementConfig={element[1].elementConfig}\r\n          value={element[1].value}\r\n          changed={(event) => inputChangedHandler(event, element[0])}\r\n          invalid={!element[1].validation.valid}\r\n          touched={element[1].touched}\r\n        />\r\n      ))}\r\n      <Button btnType=\"Success\" disabled={!formIsValid}>\r\n        ORDER\r\n      </Button>\r\n    </form>\r\n  );\r\n  if (props.loading) {\r\n    form = <Spinner />;\r\n  }\r\n  return (\r\n    <div className={classes.ContactInfo}>\r\n      <h4>Enter your Contact Info</h4>\r\n      {form}\r\n    </div>\r\n  );\r\n};\r\nContactInfo.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  history: PropTypes.any,\r\n  onOrderBurger: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  token: PropTypes.any,\r\n  userId: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (order, token) =>\r\n      dispatch(action.purchaseBurger(order, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactInfo, axios));\r\n","import React, { useState } from \"react\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactInfo from \"./ContactInfo/ContactInfo\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Checkout = (props) => {\r\n  const [activeContactInfo, setActiveContactInfo] = useState(false);\r\n\r\n  const checkoutCancelHandler = () => {\r\n    setActiveContactInfo(false);\r\n    props.history.goBack();\r\n  };\r\n  const checkoutContinueHandler = () => {\r\n    setActiveContactInfo(true);\r\n    props.history.replace(\"/checkout/contact-info\");\r\n  };\r\n\r\n  let summary = <Redirect to=\"/\" />;\r\n  if (props.ingredients) {\r\n    const purchaseRedirect = props.purchased ? <Redirect to=\"/\" /> : null;\r\n    summary = (\r\n      <>\r\n        {purchaseRedirect}\r\n        <CheckoutSummary\r\n          ingredients={props.ingredients}\r\n          checkoutCancel={checkoutCancelHandler}\r\n          checkoutContinue={checkoutContinueHandler}\r\n          totalPrice={props.totalPrice}\r\n          activeContactInfo={activeContactInfo}\r\n        />\r\n        <Route\r\n          path={props.match.path + \"/contact-info\"}\r\n          component={ContactInfo}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  return summary;\r\n};\r\nCheckout.propTypes = {\r\n  match: PropTypes.any,\r\n  history: PropTypes.any,\r\n  totalPrice: PropTypes.number,\r\n  ingredients: PropTypes.object,\r\n  onInitPurchase: PropTypes.func,\r\n  purchased: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Authorisation.css\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  countIngredients,\r\n  updateObject,\r\n  checkValidation,\r\n} from \"../../store/utility\";\r\n\r\nconst Authorisation = (props) => {\r\n  const initControls = {\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        name: \"email\",\r\n        type: \"email\",\r\n        placeholder: \"Your email\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n        valid: false,\r\n      },\r\n      touched: false,\r\n    },\r\n    password: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        name: \"password\",\r\n        type: \"password\",\r\n        placeholder: \"Your password\",\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 6,\r\n        valid: false,\r\n      },\r\n      touched: false,\r\n    },\r\n  };\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  const [isSingUp, setIsSingUp] = useState(false);\r\n  const [controls, setControls] = useState(initControls);\r\n\r\n  useEffect(() => {\r\n    if (countIngredients(props.ingredients) === 0) {\r\n      props.setRiderectPath(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const inputChangedHandler = (event, elementId) => {\r\n    const updatedFormElement = updateObject(controls[elementId], {\r\n      value: event.target.value,\r\n      touched: true,\r\n      validation: updateObject(controls[elementId].validation, {\r\n        valid: checkValidation(\r\n          event.target.value,\r\n          controls[elementId].validation\r\n        ),\r\n      }),\r\n    });\r\n    const updatedForm = updateObject(controls, {\r\n      [elementId]: updatedFormElement,\r\n    });\r\n    let formIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        formIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    setFormIsValid(formIsValid);\r\n    setControls(updatedForm);\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onAuth(controls.email.value, controls.password.value, isSingUp);\r\n  };\r\n  const switchModeHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsSingUp(!isSingUp);\r\n  };\r\n  const formElementsArray = Object.entries(controls);\r\n  let form = (\r\n    <form action=\"\" onSubmit={submitHandler}>\r\n      <Button btnType=\"SuccessBlue\" clicked={switchModeHandler}>\r\n        {isSingUp ? (\r\n          <div>\r\n            <span className={classes.Dissabled}>SING&nbsp;IN</span>\r\n            &nbsp;/&nbsp;SING&nbsp;UP\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            SING&nbsp;IN&nbsp;/&nbsp;\r\n            <span className={classes.Dissabled}>SING&nbsp;UP</span>\r\n          </div>\r\n        )}\r\n      </Button>\r\n      {formElementsArray.map((element) => (\r\n        <Input\r\n          key={element[0]}\r\n          elementType={element[1].elementType}\r\n          elementConfig={element[1].elementConfig}\r\n          value={element[1].value}\r\n          changed={(event) => inputChangedHandler(event, element[0])}\r\n          invalid={!element[1].validation.valid}\r\n          touched={element[1].touched}\r\n        />\r\n      ))}\r\n      <Button btnType=\"Success\" disabled={!formIsValid}>\r\n        SUBMIT\r\n      </Button>\r\n    </form>\r\n  );\r\n  if (props.loading) {\r\n    form = <Spinner />;\r\n  }\r\n  let errorMessage = null;\r\n  if (props.error) {\r\n    errorMessage = (\r\n      <p className={classes.ErrorMessage}>\r\n        {props.error.message.split(\"_\").join(\" \")}\r\n      </p>\r\n    );\r\n  }\r\n  let authRedirect = null;\r\n  if (props.isAuth) {\r\n    authRedirect = <Redirect to={props.authRedirectPath} />;\r\n  }\r\n  return (\r\n    <div className={classes.Authorisation}>\r\n      {authRedirect}\r\n      {form}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nAuthorisation.propTypes = {\r\n  onAuth: PropTypes.func.isRequired,\r\n  setRiderectPath: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n  error: PropTypes.object,\r\n  authRedirectPath: PropTypes.string.isRequired,\r\n  ingredients: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuth: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n    ingredients: state.burgerBuilder.ingredients,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, passw, isSingUp) =>\r\n      dispatch(actions.authorisation(email, passw, isSingUp)),\r\n    setRiderectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorisation);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./Order.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledOrder = styled.li`\r\n  &.fade-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(1000px);\r\n  }\r\n`;\r\n\r\nconst Order = (props) => {\r\n  const [disableBtn, setDisableBtn] = useState(false);\r\n  const onClicked = () => {\r\n    setDisableBtn(true);\r\n    props.onFetchDeleteOrders(props.order.id, props.token);\r\n  };\r\n  return (\r\n    <StyledOrder className={classes.Order} key={props.order.id}>\r\n      <div>\r\n        Ingredients:&nbsp;\r\n        {Object.entries(props.order.ingredients).map((ingredient, i) => (\r\n          <div\r\n            className={classes.Ingredient}\r\n            key={i}\r\n          >{`${ingredient[0]} (${ingredient[1]})`}</div>\r\n        ))}\r\n      </div>\r\n      <p>\r\n        <span>\r\n          Price: <strong>{props.order.price.toFixed(2)}&nbsp;$</strong>\r\n        </span>\r\n        <Button btnType=\"Danger\" clicked={onClicked} disabled={disableBtn}>\r\n          Delete\r\n        </Button>\r\n      </p>\r\n    </StyledOrder>\r\n  );\r\n};\r\nOrder.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n  onFetchDeleteOrders: PropTypes.func.isRequired,\r\n  token: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchDeleteOrders: (id,token) => dispatch(actions.fetchDeleteOrder(id,token)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\r\n","import React, { useEffect } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport classes from \"./Orders.css\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nconst Orders = (props) => {\r\n  useEffect(() => {\r\n    props.onFetchOrders(props.token, props.userId);\r\n  }, []);\r\n\r\n  let orders = null;\r\n  if (props.loading) {\r\n    orders = <Spinner />;\r\n  }\r\n  if (props.orders) {\r\n    orders = props.orders.length ? (\r\n      <TransitionGroup component=\"ul\" className={classes.List}>\r\n        {props.orders.map((order) => (\r\n          <CSSTransition key={order.id} classNames=\"fade\" timeout={300}>\r\n            <Order order={order} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    ) : (\r\n      <p>You don&apos;t have any orders yet.</p>\r\n    );\r\n  }\r\n  return <div className={classes.Orders}>{orders}</div>;\r\n};\r\nOrders.propTypes = {\r\n  onFetchOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  token: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nconst Logout = (props) => {\r\n  useEffect(() => {\r\n    props.logoutHandler();\r\n  }, []);\r\n  return <Redirect to=\"/\" />;\r\n};\r\nLogout.propTypes = {\r\n  logoutHandler: PropTypes.func.isRequired,\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutHandler: () => dispatch(actions.logout()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport Authorisation from \"./containers/Authorisation/Authorisation\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\nimport Logout from \"./containers/Authorisation/Logout/Logout\";\r\n\r\nfunction App(props) {\r\n  let routs = (\r\n    <Switch>\r\n      <Route path=\"/authorisation\" component={Authorisation} />\r\n      <Route path=\"/\" component={BurgerBuilder} />\r\n    </Switch>\r\n  );\r\n  if (props.isAuth) {\r\n    routs = (\r\n      <Switch>\r\n        <Route path=\"/checkout\" component={Checkout} />\r\n        <Route path=\"/orders\" component={Orders} />\r\n        <Route path=\"/authorisation\" component={Authorisation} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Route path=\"/\" component={BurgerBuilder} />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <BrowserRouter basename=\"/burger-order-react\">\r\n      <Layout>{routs}</Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nApp.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.token !== null,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(App);\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4.0,\r\n  error: false,\r\n};\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  meat: 1.3,\r\n  cheese: 0.4,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const newPrice =\r\n    (state.totalPrice + INGREDIENT_PRICES[action.ingredientName]).toFixed(2) *\r\n    1;\r\n  const updIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n  };\r\n  const updIngredients = updateObject(state.ingredients, updIngredient);\r\n  const updState = { ingredients: updIngredients, totalPrice: newPrice };\r\n  return updateObject(state, updState);\r\n};\r\nconst removeIngredient = (state, action) => {\r\n  let updatedCount = state.ingredients[action.ingredientName] - 1;\r\n  const newPrice =\r\n    (state.totalPrice - INGREDIENT_PRICES[action.ingredientName]).toFixed(2) *\r\n    1;\r\n  const updIngredient = {\r\n    [action.ingredientName]: updatedCount,\r\n  };\r\n  const updIngredients = updateObject(state.ingredients, updIngredient);\r\n  const updState = { ingredients: updIngredients, totalPrice: newPrice };\r\n  return updateObject(state, updState);\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT: {\r\n      return addIngredient(state, action);\r\n    }\r\n    case actionTypes.REMOVE_INGREDIENT: {\r\n      return removeIngredient(state, action);\r\n    }\r\n    case actionTypes.SET_INGREDIENTS: {\r\n      return updateObject(state, {\r\n        ingredients: {\r\n          salad: action.ingredients.salad,\r\n          bacon: action.ingredients.bacon,\r\n          cheese: action.ingredients.cheese,\r\n          meat: action.ingredients.meat,\r\n        },\r\n        totalPrice: 4.0,\r\n        error: false,\r\n      });\r\n    }\r\n    case actionTypes.FETCH_INGREDIENTS_ERROR: {\r\n      return updateObject(state, {\r\n        error: true,\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst deleteOrder = (state, action) => {\r\n  const newOrders = state.orders.filter((order) => order.id !== action.orderId);\r\n  return updateObject(state, {\r\n    orders: newOrders,\r\n  });\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT: {\r\n      return updateObject(state, {\r\n        purchased: false,\r\n      });\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS: {\r\n      const newOrder = updateObject(action.orderData, {\r\n        id: action.orderId,\r\n      });\r\n      return updateObject(state, {\r\n        orders: state.orders.concat(newOrder),\r\n        loading: false,\r\n        purchased: true,\r\n      });\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n    case actionTypes.FETCH_ORDERS_START: {\r\n      return updateObject(state, {\r\n        loading: true,\r\n      });\r\n    }\r\n    case actionTypes.FETCH_ORDERS_SUCCESS: {\r\n      return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false,\r\n      });\r\n    }\r\n    case actionTypes.DELETE_ORDER_ERROR:\r\n    case actionTypes.PURCHASE_BURGER_ERROR:\r\n    case actionTypes.FETCH_ORDERS_ERROR: {\r\n      return updateObject(state, {\r\n        loading: false,\r\n      });\r\n    }\r\n    case actionTypes.DELETE_ORDER: {\r\n      return deleteOrder(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/\",\r\n};\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return updateObject(state, {\r\n        loading: true,\r\n        error: null,\r\n      });\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        loading: false,\r\n        error: null,\r\n      });\r\n    case actionTypes.AUTH_ERROR:\r\n      return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n      });\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return updateObject(state, {\r\n        token: null,\r\n        userId: null,\r\n      });\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return updateObject(state, {\r\n        authRedirectPath: action.path,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport orderReducer from \"./store/reducers/order\";\r\nimport authReducer from \"./store/reducers/authorisation\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}