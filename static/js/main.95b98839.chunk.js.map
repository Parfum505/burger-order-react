{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/SideMenu/SideMenu.css","components/UI/Modal/Modal.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavItems/NavItem/NavItem.css","components/UI/Backdrop/Backdrop.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Navigation/Logo/Logo.css","components/Navigation/NavItems/NavItems.css","components/Navigation/MobileMenuBtn/MobileMenuBtn.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactInfo/ContactInfo.css","components/Order/Order.css","hoc/Auxiliary.js","components/Navigation/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/MobileMenuBtn/MobileMenuBtn.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideMenu/SideMenu.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactInfo/ContactInfo.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","store/reducers/burgerBuilder.js","store/reducers/order.js","App.js","index.js"],"names":["module","exports","Auxil","props","children","Logo","className","classes","src","burgerLogo","alt","NavItem","to","link","exact","activeClassName","active","NavItems","MobileMenuBtn","onClick","clicked","React","memo","Toolbar","openMenu","Backdrop","addedClasses","addClass","newClass","push","show","join","closeMenu","SideMenu","Open","Layout","state","showMobileMenu","closeMobileMenuHandler","setState","openMobileMenuHandler","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","ingredients","addedIngredient","Object","keys","map","ingKey","Array","_","i","key","reduce","arr","item","concat","length","BuildControl","Label","label","Less","remove","disabled","More","add","BuildControls","controls","ingr","charAt","toUpperCase","slice","totalPrice","toFixed","addIngredients","removeIngredients","OrderButton","purchasable","buy","Modal","nextProps","modalClasses","Active","modalClosed","Button","btnType","OrderSummary","ingredientsSummary","entries","style","textTransform","buyCancel","buyContinue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","modalClose","reqInterceptor","interceptors","request","use","respInterceptor","response","resp","eject","message","BurgerBuilder","buying","buyCancelHandler","buyContinueHandler","onInitPurchase","history","buyHandler","updatePurchaseState","values","total","curr","initIngredientsHandler","orderSummary","burger","textAlign","marginTop","color","fontWeight","addIngredientHandler","removeIngredientHandler","connect","burgerBuilder","dispatch","ingName","ingredientName","get","then","data","catch","CheckoutSummary","checkoutCancel","activeContactInfo","checkoutContinue","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","value","onChange","changed","options","opt","displayVal","htmlFor","ContactInfo","orderForm","name","placeholder","validation","required","minLength","valid","street","zipCode","maxLength","city","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","price","orderData","onOrderBurger","inputChangedHandler","elementId","updatedForm","updatedFormElement","target","checkValidation","rules","isValid","trim","test","formElementsArray","form","action","onSubmit","element","loading","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerError","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","purchaseRedirect","purchased","path","match","component","Order","display","margin","border","padding","Orders","onFetchOrders","orders","res","fetchedOrders","fetchOrdersError","initialState","INGREDIENT_PRICES","salad","bacon","meat","cheese","reducer","newPrice","updatedCount","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95b98839.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu__SideMenu__3UWTy\",\"Open\":\"SideMenu__Open__1SgcR\",\"Logo\":\"SideMenu__Logo__2xnje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"Loading\":\"Modal__Loading__2_sU3\",\"Active\":\"Modal__Active__1AINr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem__NavItem__r-b9L\",\"active\":\"NavItem__active__2ZZNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\",\"hideDesktop\":\"Backdrop__hideDesktop__1llls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2k2jA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems__NavItems__3fZSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MobileMenuBtn\":\"MobileMenuBtn__MobileMenuBtn__2PzFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load6\":\"Spinner__load6__3S2CE\",\"round\":\"Spinner__round__2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactInfo\":\"ContactInfo__ContactInfo__1dgSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","const Auxil = (props) => props.children;\r\n\r\nexport default Auxil;","import React from \"react\";\r\nimport burgerLogo from \"../../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.css\";\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={burgerLogo} alt=\"logo\" />\r\n  </div>\r\n);\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport classes from \"./NavItem.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavItem = (props) => (\r\n  <li className={classes.NavItem}>\r\n    <NavLink to={props.link} exact activeClassName={classes.active}>\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nNavItem.propTypes = {\r\n  link: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavItems.css\";\r\nimport NavItem from \"./NavItem/NavItem\";\r\n\r\nconst NavItems = () => (\r\n  <ul className={classes.NavItems}>\r\n    <NavItem link=\"/\">Burger Builder</NavItem>\r\n    <NavItem link=\"/orders\">Orders</NavItem>\r\n  </ul>\r\n);\r\nexport default NavItems;\r\n","import React from \"react\";\r\nimport classes from \"./MobileMenuBtn.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MobileMenuBtn = (props) => (\r\n  <div className={classes.MobileMenuBtn} onClick={props.clicked}>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n  </div>\r\n);\r\n\r\nMobileMenuBtn.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\nexport default MobileMenuBtn;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.css\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport MobileMenuBtn from \"../MobileMenuBtn/MobileMenuBtn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <MobileMenuBtn clicked={props.openMenu} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav>\r\n      <NavItems />\r\n    </nav>\r\n  </header>\r\n);\r\nToolbar.propTypes = {\r\n  openMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(Toolbar);\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Backdrop = (props) => {\r\n  let addedClasses = [classes.Backdrop];\r\n  if (props.addClass) {\r\n    for (let newClass of props.addClass) {\r\n      addedClasses.push(classes[newClass]);\r\n    }\r\n  }\r\n  return props.show ? (\r\n    <div className={addedClasses.join(\" \")} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nBackdrop.propTypes = {\r\n  addClass: PropTypes.array,\r\n  show: PropTypes.any,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport classes from \"./SideMenu.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SideMenu = (props) => {\r\n  return (\r\n    <Auxil>\r\n      <Backdrop\r\n        addClass={[\"hideDesktop\"]}\r\n        show={props.show}\r\n        clicked={props.closeMenu}\r\n      />\r\n      <div\r\n        className={[classes.SideMenu, props.show ? classes.Open : null].join(\r\n          \" \"\r\n        )}\r\n      >\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavItems />\r\n        </nav>\r\n      </div>\r\n    </Auxil>\r\n  );\r\n};\r\nSideMenu.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\nexport default React.memo(SideMenu);\r\n","import React, { Component } from \"react\";\r\nimport Auxil from \"../Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideMenu from \"../../components/Navigation/SideMenu/SideMenu\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showMobileMenu: false,\r\n  };\r\n  closeMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: false });\r\n  };\r\n  openMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <Auxil>\r\n        <Toolbar openMenu={this.openMobileMenuHandler} />\r\n        <SideMenu\r\n          show={this.state.showMobileMenu}\r\n          closeMenu={this.closeMobileMenuHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nLayout.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case \"bread-bottom\":\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n        case \"bread-top\":\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>);\r\n            break;\r\n        case \"meat\":\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case \"cheese\":\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case \"bacon\":\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case \"salad\":\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport classes from \"./Burger.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Burger = ({ ingredients }) => {\r\n  let addedIngredient = Object.keys(ingredients)\r\n    .map((ingKey) => {\r\n      return [...Array(ingredients[ingKey])].map((_, i) => {\r\n        return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, item) => {\r\n      return arr.concat(item);\r\n    }, []);\r\n  if (!addedIngredient.length) {\r\n    addedIngredient = <p>Please add some ingredients!</p>;\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {addedIngredient}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\nBurger.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}\r\n                onClick={props.remove}\r\n                disabled={props.disabled}>Less</button>\r\n        <button className={classes.More}\r\n                onClick={props.add}>More</button>\r\n    </div>\r\n);\r\nBuildControl.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    remove: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n    add: PropTypes.func.isRequired,\r\n  };\r\nexport default BuildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControls = (props) => {\r\n  const controls = Object.keys(props.ingredients).map((ingr) => {\r\n    return {\r\n      label: ingr.charAt(0).toUpperCase() + ingr.slice(1),\r\n      type: ingr,\r\n    };\r\n  });\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Current price: <strong>{props.totalPrice.toFixed(2)}</strong>&nbsp;$\r\n      </p>\r\n      {controls.map((item) => (\r\n        <BuildControl\r\n          key={`ctrl-${item.label}`}\r\n          label={item.label}\r\n          add={() => props.addIngredients(item.type)}\r\n          remove={() => props.removeIngredients(item.type)}\r\n          disabled={props.ingredients[item.type] <= 0}\r\n        />\r\n      ))}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.buy}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nBuildControls.propTypes = {\r\n  totalPrice: PropTypes.number,\r\n  addIngredients: PropTypes.func.isRequired,\r\n  removeIngredients: PropTypes.func.isRequired,\r\n  buy: PropTypes.func.isRequired,\r\n  purchasable: PropTypes.bool,\r\n  ingredients: PropTypes.object,\r\n};\r\nexport default BuildControls;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let modalClasses = [classes.Modal];\r\n    if (this.props.show) {\r\n      modalClasses.push(classes.Active);\r\n    }\r\n    if (this.props.addedClasses) {\r\n      for (let addClass of this.props.addedClasses) {\r\n        modalClasses.push(classes[addClass]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Auxil>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div className={modalClasses.join(\" \")}>{this.props.children}</div>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  addedClasses: PropTypes.array,\r\n  show: PropTypes.any,\r\n  modalClosed: PropTypes.func,\r\n  children: PropTypes.any,\r\n};\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./Button.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  btnType: PropTypes.string,\r\n  clicked: PropTypes.func,\r\n  children: PropTypes.any,\r\n  disabled: PropTypes.bool,\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientsSummary = Object.entries(props.ingredients).map(\r\n    (item, i) => {\r\n      return (\r\n        <li key={i}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{item[0]}</span>:&nbsp;\r\n          {item[1]}\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Auxil>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientsSummary}</ul>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.buyCancel}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.buyContinue}>\r\n        CONTINUE\r\n      </Button>\r\n    </Auxil>\r\n  );\r\n};\r\nOrderSummary.propTypes = {\r\n  btnType: PropTypes.string,\r\n  totalPrice: PropTypes.number,\r\n  buyCancel: PropTypes.func.isRequired,\r\n  buyContinue: PropTypes.func.isRequired,\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default OrderSummary;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-order-react.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport classes from \"./Spinner.css\"\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxil from \"../Auxiliary\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class WithError extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(\r\n        (request) => {\r\n          this.setState({ error: null });\r\n          return request;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n      this.respInterceptor = axios.interceptors.response.use(\r\n        (resp) => {\r\n          this.setState({ error: null });\r\n          return resp;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.respInterceptor);\r\n    }\r\n\r\n    modalClose = () => {\r\n      this.setState({ error: null });\r\n    };\r\n    render() {\r\n      return (\r\n        <Auxil>\r\n          <Modal show={this.state.error} modalClosed={this.modalClose}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Auxil>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxil from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    buying: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.initIngredientsHandler();\r\n  }\r\n\r\n  buyCancelHandler = () => {\r\n    this.setState({ buying: false });\r\n  };\r\n  buyContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n  buyHandler = () => {\r\n    this.setState({ buying: true });\r\n  };\r\n  updatePurchaseState = (ingredients) => {\r\n    const sum = Object.values(ingredients).reduce(\r\n      (total, curr) => total + curr,\r\n      0\r\n    );\r\n    return sum > 0;\r\n  };\r\n\r\n  render() {\r\n    const errorStyle = {\r\n      textAlign: \"center\",\r\n      marginTop: 90,\r\n      color: \"red\",\r\n      fontWeight: \"bold\",\r\n    };\r\n    let addClasses = [],\r\n      orderSummary = null;\r\n    let burger = this.props.error ? (\r\n      <p style={errorStyle}>Ingredients can&apos;t be loaded.</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <Auxil>\r\n          <Burger ingredients={this.props.ingredients} />\r\n          <BuildControls\r\n            addIngredients={this.props.addIngredientHandler}\r\n            removeIngredients={this.props.removeIngredientHandler}\r\n            ingredients={this.props.ingredients}\r\n            totalPrice={this.props.totalPrice}\r\n            purchasable={this.updatePurchaseState(this.props.ingredients)}\r\n            buy={this.buyHandler}\r\n          />\r\n        </Auxil>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ingredients}\r\n          buyCancel={this.buyCancelHandler}\r\n          buyContinue={this.buyContinueHandler}\r\n          totalPrice={this.props.totalPrice}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Auxil>\r\n        <Modal\r\n          addedClasses={addClasses}\r\n          show={this.state.buying}\r\n          modalClosed={this.buyCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nBurgerBuilder.propTypes = {\r\n  history: PropTypes.any,\r\n  ingredients: PropTypes.object,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  addIngredientHandler: PropTypes.func.isRequired,\r\n  removeIngredientHandler: PropTypes.func.isRequired,\r\n  initIngredientsHandler: PropTypes.func.isRequired,\r\n  onInitPurchase: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIngredientHandler: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    removeIngredientHandler: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    initIngredientsHandler: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const removeIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\nexport const fetchIngredientsError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_ERROR,\r\n  };\r\n};\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://burger-order-react.firebaseio.com/ingredients.json\")\r\n      .then((resp) => {\r\n        dispatch(setIngredients(resp.data));\r\n      })\r\n      .catch(() => dispatch(fetchIngredientsError()));\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_ERROR = \"FETCH_INGREDIENTS_ERROR\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_ERROR = \"PURCHASE_BURGER_ERROR\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_ERROR = \"FETCH_ORDERS_ERROR\";\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\nexport const purchaseBurgerError = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\nexport const purchaseBurger = (orderData) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json\", orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerError(error));\r\n      });\r\n  };\r\n};\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\nexport const fetchOrdersError = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const fetchOrders = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    axios\r\n      .get(\"/orders.json\")\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        for (const [id, value] of Object.entries(res.data)) {\r\n          fetchedOrders.push({ ...value, id: id });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersError(error));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancel}>\r\n        CANCEL\r\n      </Button>\r\n      {props.activeContactInfo ? null : (\r\n        <Button btnType=\"Success\" clicked={props.checkoutContinue}>\r\n          CONTINUE\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckoutSummary.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  checkoutCancel: PropTypes.func.isRequired,\r\n  checkoutContinue: PropTypes.func.isRequired,\r\n  activeContactInfo: PropTypes.bool,\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  props.touched && props.invalid ? inputClasses.push(classes.Invalid) : null;\r\n  switch (props.elementType) { \r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((opt) => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayVal}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label} htmlFor=\"\">\r\n        {props.label}\r\n      </label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\nInput.propTypes = {\r\n  label: PropTypes.string,\r\n  elementType: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  changed: PropTypes.func.isRequired,\r\n  invalid: PropTypes.bool,\r\n  touched: PropTypes.bool,\r\n};\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./ContactInfo.css\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport axios from \"../../../axios-orders\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport * as action from \"../../../store/actions/index\";\r\n\r\nclass ContactInfo extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"name\",\r\n          type: \"text\",\r\n          placeholder: \"Your name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 2,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"street\",\r\n          type: \"text\",\r\n          placeholder: \"Your street/app\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"zipCode\",\r\n          type: \"text\",\r\n          placeholder: \"Your zip code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      city: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"city\",\r\n          type: \"text\",\r\n          placeholder: \"Your city\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"email\",\r\n          type: \"email\",\r\n          placeholder: \"Your email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayVal: \"Fastest\" },\r\n            { value: \"cheapest\", displayVal: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          valid: true,\r\n        },\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (const formElementId in this.state.orderForm) {\r\n      formData[formElementId] = this.state.orderForm[formElementId].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      orderData: formData,\r\n    };\r\n    this.props.onOrderBurger(order);\r\n  };\r\n  checkValidation(value, rules) {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, elementId) => {\r\n    const updatedForm = { ...this.state.orderForm };\r\n    const updatedFormElement = { ...updatedForm[elementId] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.touched = true;\r\n    updatedFormElement.validation.valid = this.checkValidation(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedForm[elementId] = updatedFormElement;\r\n    let formIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        formIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    this.setState({ orderForm: updatedForm, formIsValid: formIsValid });\r\n  };\r\n  render() {\r\n    const formElementsArray = Object.entries(this.state.orderForm);\r\n    let form = (\r\n      <form action=\"\" onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((element) => (\r\n          <Input\r\n            key={element[0]}\r\n            elementType={element[1].elementType}\r\n            elementConfig={element[1].elementConfig}\r\n            value={element[1].value}\r\n            changed={(event) => this.inputChangedHandler(event, element[0])}\r\n            invalid={!element[1].validation.valid}\r\n            touched={element[1].touched}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactInfo}>\r\n        <h4>Enter your Contact Info</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactInfo.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  history: PropTypes.any,\r\n  onOrderBurger: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (order) => dispatch(action.purchaseBurger(order)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactInfo, axios));\r\n","import React, { Component } from \"react\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactInfo from \"./ContactInfo/ContactInfo\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    activeContactInfo: false,\r\n  };\r\n\r\n  checkoutCancelHandler = () => {\r\n    this.setState({ activeContactInfo: false });\r\n    this.props.history.goBack();\r\n  };\r\n  checkoutContinueHandler = () => {\r\n    this.setState({ activeContactInfo: true });\r\n    this.props.history.replace(\"/checkout/contact-info\");\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchaseRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <>\r\n          {purchaseRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutCancel={this.checkoutCancelHandler}\r\n            checkoutContinue={this.checkoutContinueHandler}\r\n            totalPrice={this.props.totalPrice}\r\n            activeContactInfo={this.state.activeContactInfo}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + \"/contact-info\"}\r\n            component={ContactInfo}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\nCheckout.propTypes = {\r\n  match: PropTypes.any,\r\n  history: PropTypes.any,\r\n  totalPrice: PropTypes.number,\r\n  ingredients: PropTypes.object,\r\n  onInitPurchase: PropTypes.func,\r\n  purchased: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\nimport classes from \"./Order.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Order = (props) => (\r\n  <div className={classes.Order}>\r\n    <p>\r\n      Ingredients:{\" \"}\r\n      {Object.entries(props.order.ingredients).map((ingredient, i) => (\r\n        <span\r\n          key={i}\r\n          style={{\r\n            textTransform: \"capitalize\",\r\n            display: \"inline-block\",\r\n            margin: \"0 8px\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"5px\",\r\n          }}\r\n        >{`${ingredient[0]} (${ingredient[1]})`}</span>\r\n      ))}\r\n    </p>\r\n    <p>\r\n      Price: <strong>{props.order.price.toFixed(2)}&nbsp;$</strong>\r\n    </p>\r\n  </div>\r\n);\r\nOrder.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n};\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders();\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"auto\" }}>\r\n        {this.props.loading ? (\r\n          <Spinner />\r\n        ) : this.props.orders && this.props.orders.length ? (\r\n          this.props.orders.map((order) => (\r\n            <Order key={order.id} order={order} />\r\n          ))\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nOrders.propTypes = {\r\n  onFetchOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: () => dispatch(actions.fetchOrders()),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4.0,\r\n  error: false,\r\n};\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  meat: 1.3,\r\n  cheese: 0.4,\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT: {\r\n      const newPrice =\r\n        (state.totalPrice + INGREDIENT_PRICES[action.ingredientName]).toFixed(\r\n          2\r\n        ) * 1;\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n        },\r\n        totalPrice: newPrice,\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_INGREDIENT: {\r\n      let updatedCount = state.ingredients[action.ingredientName] - 1;\r\n      updatedCount = updatedCount < 0 ? 0 : updatedCount;\r\n      const newPrice =\r\n        updatedCount > 0\r\n          ? (\r\n              state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            ).toFixed(2) * 1\r\n          : state.totalPrice;\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: updatedCount,\r\n        },\r\n        totalPrice: newPrice,\r\n      };\r\n    }\r\n    case actionTypes.SET_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          salad: action.ingredients.salad,\r\n          bacon: action.ingredients.bacon,\r\n          cheese: action.ingredients.cheese,\r\n          meat: action.ingredients.meat,\r\n        },\r\n        totalPrice: 4.0,\r\n        error: false,\r\n      };\r\n    }\r\n    case actionTypes.FETCH_INGREDIENTS_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT: {\r\n      return {\r\n        ...state,\r\n        purchased: false,\r\n      };\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orders: state.orders.concat({\r\n          ...action.orderData,\r\n          id: action.orderId,\r\n        }),\r\n        loading: false,\r\n        purchased: true,\r\n      };\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_START: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.FETCH_ORDERS_START: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case actionTypes.FETCH_ORDERS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orders: action.orders,\r\n        loading: false,\r\n      };\r\n    }\r\n    case actionTypes.FETCH_ORDERS_ERROR: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport orderReducer from \"./store/reducers/order\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename=\"/burger-order-react\">\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/orders\" component={Orders} />\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n          </Switch>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}