{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","containers/Authorisation/Authorisation.css","components/Navigation/NavItems/NavItems.css","components/Navigation/SideMenu/SideMenu.css","components/UI/Modal/Modal.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavItems/NavItem/NavItem.css","components/UI/Backdrop/Backdrop.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Order/Order.css","containers/Orders/Orders.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Navigation/Logo/Logo.css","assets/images/login.svg","assets/images/logout.svg","components/Navigation/MobileMenuBtn/MobileMenuBtn.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactInfo/ContactInfo.css","axios-orders.js","store/actions/authorisation.js","store/actions/actionTypes.js","hoc/Auxiliary.js","components/Navigation/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/MobileMenuBtn/MobileMenuBtn.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideMenu/SideMenu.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/utility.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactInfo/ContactInfo.js","containers/Checkout/Checkout.js","containers/Authorisation/Authorisation.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Authorisation/Logout/Logout.js","App.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/authorisation.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","authSuccess","idToken","localId","type","userId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","Auxil","props","children","Logo","className","classes","src","burgerLogo","alt","NavItem","to","link","exact","activeClassName","active","connect","state","isAuth","auth","NavItems","LoginIcon","LogoutIcon","MobileMenuBtn","onClick","clicked","React","memo","Toolbar","openMenu","Backdrop","addedClasses","addClass","newClass","push","show","join","closeMenu","SideMenu","Open","Layout","showMobileMenu","closeMobileMenuHandler","setState","openMobileMenuHandler","this","onTryAutoSingIn","Content","Component","token","getItem","expDate","Date","getTime","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","ingredients","addedIngredient","Object","keys","map","ingKey","Array","_","i","key","reduce","arr","item","concat","length","BuildControl","Label","label","Less","remove","disabled","More","add","BuildControls","controls","ingr","charAt","toUpperCase","slice","totalPrice","toFixed","addIngredients","removeIngredients","OrderButton","purchasable","buy","Modal","nextProps","modalClasses","Active","modalClosed","Button","btnType","OrderSummary","ingredientsSummary","entries","style","textTransform","buyCancel","buyContinue","spinner","Loader","withErrorHandler","WrappedComponent","error","modalClose","reqInterceptor","interceptors","request","use","respInterceptor","response","resp","eject","message","updateObject","oldObj","updatedProps","countIngredients","ingredientsObj","values","sum","val","checkValidation","value","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","burgerBuilder","addIngredientHandler","ingName","ingredientName","removeIngredientHandler","initIngredientsHandler","get","then","data","catch","onInitPurchase","setRiderectPath","actions","useState","buying","setBuying","useEffect","buyCancelHandler","orderSummary","burger","textAlign","marginTop","color","fontWeight","total","curr","history","CheckoutSummary","checkoutCancel","activeContactInfo","checkoutContinue","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","onChange","changed","options","opt","displayVal","htmlFor","ContactInfo","orderForm","name","placeholder","validation","valid","street","zipCode","city","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","price","orderData","onOrderBurger","inputChangedHandler","elementId","updatedFormElement","target","updatedForm","formElementsArray","form","action","onSubmit","element","loading","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerError","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","purchaseRedirect","purchased","match","component","Authorisation","password","isSingUp","submitHandler","onAuth","switchModeHandler","prevState","Dissabled","errorMessage","ErrorMessage","split","authRedirect","authRedirectPath","passw","authData","returnSecureToken","url","burgerExpDate","expiresIn","setItem","authError","StyledOrder","styled","li","onFetchDeleteOrders","delete","res","status","deleteOrder","deleteOrderError","disableBtn","setDisableBtn","Order","Ingredient","Orders","onFetchOrders","orders","TransitionGroup","List","CSSTransition","classNames","timeout","queryParams","fetchedOrders","fetchOrdersError","logoutHandler","routs","BurgerBuilder","Logout","basename","initialState","INGREDIENT_PRICES","salad","bacon","meat","cheese","addIngredient","newPrice","updIngredient","updIngredients","removeIngredient","updatedCount","reducer","newOrders","filter","newOrder","initState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,SAAW,oCAAoC,OAAS,kCAAkC,OAAS,kCAAkC,KAAO,gCAAgC,OAAS,kCAAkC,MAAQ,iCAAiC,MAAQ,mC,0BCA/UD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,6BAA6B,KAAO,4BAA4B,KAAO,8B,gBCApJD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,aAAe,6BAA6B,QAAU,0B,gBCApID,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,aAAe,qCAAqC,UAAY,oC,mBCAxID,EAAOC,QAAU,CAAC,SAAW,4BAA4B,UAAY,+B,gBCArED,EAAOC,QAAU,CAAC,SAAW,4BAA4B,KAAO,wBAAwB,KAAO,0B,gBCA/FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,QAAU,wBAAwB,OAAS,yB,kBCA3FD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,yB,gBCA7DD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,2B,kBCA/DD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,YAAc,iC,gBCAvED,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,YAAc,oCAAoC,OAAS,iC,gBCAnID,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,+B,gBCArID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,WAAa,6B,gBCA7DD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,wB,6BCA1DD,EAAOC,QAAU,CAAC,QAAU,2B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,sB,iBCDzBD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCC3CD,EAAOC,QAAU,CAAC,cAAgB,wC,gBCAlCD,EAAOC,QAAU,CAAC,OAAS,0B,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,MAAQ,wBAAwB,MAAQ,0B,gBCA5FD,EAAOC,QAAU,CAAC,gBAAkB,4C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,oC,4NCKjBC,EAJEC,IAAMC,OAAO,CAC1BC,QAAS,+C,gBCKPC,EAAc,SAACC,EAASC,GAC5B,MAAO,CACLC,KCQwB,eDPxBF,QAASA,EACTG,OAAQF,IASCG,EAAS,WAIpB,OAHAC,aAAaC,WAAW,eACxBD,aAAaC,WAAW,iBACxBD,aAAaC,WAAW,gBACjB,CACLJ,KCNuB,gBDSrBK,EAAmB,SAACC,GACxB,OAAO,SAACC,GACNC,YAAW,WACTD,EAASL,OACS,IAAjBI,KAkCMG,EAAsB,SAACC,GAClC,MAAO,CACLV,KC/CkC,yBDgDlCU,KAAMA,IEpEKC,EAFD,SAACC,GAAD,OAAWA,EAAMC,U,oECShBC,EALF,kBACX,yBAAKC,UAAWC,IAAQF,MACtB,yBAAKG,IAAKC,IAAYC,IAAI,W,0CCYfC,EAbC,SAACR,GAAD,OACd,wBAAIG,UAAWC,IAAQI,SACrB,kBAAC,IAAD,CAASC,GAAIT,EAAMU,KAAMC,OAAK,EAACC,gBAAiBR,IAAQS,QACrDb,EAAMC,Y,kCCuBEa,eALS,SAACC,GACvB,MAAO,CACLC,OAA8B,OAAtBD,EAAME,KAAK5B,UAGRyB,EAvBS,SAACd,GAAD,OACtB,wBAAIG,UAAWC,IAAQc,UACrB,kBAAC,EAAD,CAASR,KAAK,KAAd,kBACCV,EAAMgB,OAAS,kBAAC,EAAD,CAASN,KAAK,WAAd,UAA2C,KAC1DV,EAAMgB,OACL,kBAAC,EAAD,CAASN,KAAK,WACZ,yBAAKP,UAAWC,IAAQe,UAAWd,IAAKe,IAAYb,IAAI,UAG1D,kBAAC,EAAD,CAASG,KAAK,kBACZ,yBAAKP,UAAWC,IAAQe,UAAWd,IAAKc,IAAWZ,IAAI,c,iBCHhDc,EAXO,SAACrB,GAAD,OACpB,yBAAKG,UAAWC,IAAQiB,cAAeC,QAAStB,EAAMuB,SACpD,qCACA,qCACA,uCCcWC,MAAMC,MAfL,SAACzB,GAAD,OACd,4BAAQG,UAAWC,IAAQsB,SACzB,kBAAC,EAAD,CAAeH,QAASvB,EAAM2B,WAC9B,yBAAKxB,UAAWC,IAAQF,MACtB,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,W,0CCQS0B,EAlBE,SAAC5B,GAChB,IAAI6B,EAAe,CAACzB,IAAQwB,UAC5B,GAAI5B,EAAM8B,SAAU,CAAC,IAAD,gBACG9B,EAAM8B,UADT,IAClB,2BAAqC,CAAC,IAA7BC,EAA4B,QACnCF,EAAaG,KAAK5B,IAAQ2B,KAFV,+BAKpB,OAAO/B,EAAMiC,KACX,yBAAK9B,UAAW0B,EAAaK,KAAK,KAAMZ,QAAStB,EAAMuB,UACrD,MCuBSC,MAAMC,MA5BJ,SAACzB,GAChB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE8B,SAAU,CAAC,eACXG,KAAMjC,EAAMiC,KACZV,QAASvB,EAAMmC,YAEjB,yBACEhC,UAAW,CAACC,IAAQgC,SAAUpC,EAAMiC,KAAO7B,IAAQiC,KAAO,MAAMH,KAC9D,KAEFZ,QAAStB,EAAMmC,WAEf,yBAAKhC,UAAWC,IAAQF,MACtB,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,YCjBJoC,E,4MACJvB,MAAQ,CACNwB,gBAAgB,G,EAKlBC,uBAAyB,WACvB,EAAKC,SAAS,CAAEF,gBAAgB,K,EAElCG,sBAAwB,WACtB,EAAKD,SAAS,CAAEF,gBAAgB,K,kEANhCI,KAAK3C,MAAM4C,oB,+BASX,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASjB,SAAUgB,KAAKD,wBACxB,kBAAC,EAAD,CACET,KAAMU,KAAK5B,MAAMwB,eACjBJ,UAAWQ,KAAKH,yBAElB,0BAAMrC,UAAWC,IAAQyC,SAAUF,KAAK3C,MAAMC,e,GArBjC6C,aAoCNhC,eAAQ,MALI,SAACnB,GAC1B,MAAO,CACLiD,gBAAiB,kBAAMjD,GViClB,SAACA,GACN,IAAMoD,EAAQxD,aAAayD,QAAQ,eACnC,GAAKD,EAAL,CAGA,IAAME,EAAU,IAAIC,MAAM3D,aAAayD,QAAQ,kBAC/C,GAAIC,GAAW,IAAIC,KACjBvD,EAASL,SADX,CAIA,IAAMD,EAASE,aAAayD,QAAQ,gBACpCrD,EACEF,GAAkBwD,EAAQE,WAAY,IAAID,MAAOC,WAAa,MAEhExD,EAASV,EAAY8D,EAAO1D,aU5CjByB,CAAkCwB,G,6BCLlCc,GApCU,SAACpD,GACtB,IAAIqD,EAAa,KAEjB,OAAQrD,EAAMZ,MACV,IAAK,eACDiE,EAAa,yBAAKlD,UAAWC,KAAQkD,cACzC,MACA,IAAK,YACDD,EACI,yBAAKlD,UAAWC,KAAQmD,UACpB,yBAAKpD,UAAWC,KAAQoD,SACxB,yBAAKrD,UAAWC,KAAQqD,UAEhC,MACJ,IAAK,OACDJ,EAAa,yBAAKlD,UAAWC,KAAQsD,OACrC,MACJ,IAAK,SACDL,EAAa,yBAAKlD,UAAWC,KAAQuD,SACrC,MACJ,IAAK,QACDN,EAAa,yBAAKlD,UAAWC,KAAQwD,QACrC,MACJ,IAAK,QACDP,EAAa,yBAAKlD,UAAWC,KAAQyD,QACrC,MACJ,QACIR,EAAa,KAErB,OAAOA,G,oBCJIS,GAxBA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACZC,EAAkBC,OAAOC,KAAKH,GAC/BI,KAAI,SAACC,GACJ,OAAO,aAAIC,MAAMN,EAAYK,KAAUD,KAAI,SAACG,EAAGC,GAC7C,OAAO,kBAAC,GAAD,CAAkBC,IAAKJ,EAASG,EAAGnF,KAAMgF,UAGnDK,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,KACjB,IAIL,OAHKX,EAAgBa,SACnBb,EAAkB,4DAGlB,yBAAK7D,UAAWC,KAAQ0D,QACtB,kBAAC,GAAD,CAAkB1E,KAAK,cACtB4E,EACD,kBAAC,GAAD,CAAkB5E,KAAK,mB,wCCFd0F,GAhBM,SAAC9E,GAAD,OACjB,yBAAKG,UAAWC,KAAQ0E,cACpB,yBAAK3E,UAAWC,KAAQ2E,OAAQ/E,EAAMgF,OACtC,4BAAQ7E,UAAWC,KAAQ6E,KACnB3D,QAAStB,EAAMkF,OACfC,SAAUnF,EAAMmF,UAFxB,QAGA,4BAAQhF,UAAWC,KAAQgF,KACnB9D,QAAStB,EAAMqF,KADvB,UCoCOC,GAzCO,SAACtF,GACrB,IAAMuF,EAAWtB,OAAOC,KAAKlE,EAAM+D,aAAaI,KAAI,SAACqB,GACnD,MAAO,CACLR,MAAOQ,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GACjDvG,KAAMoG,MAGV,OACE,yBAAKrF,UAAWC,KAAQkF,eACtB,6CACiB,gCAAStF,EAAM4F,WAAWC,QAAQ,IADnD,SAGCN,EAASpB,KAAI,SAACQ,GAAD,OACZ,kBAAC,GAAD,CACEH,IAAG,eAAUG,EAAKK,OAClBA,MAAOL,EAAKK,MACZK,IAAK,kBAAMrF,EAAM8F,eAAenB,EAAKvF,OACrC8F,OAAQ,kBAAMlF,EAAM+F,kBAAkBpB,EAAKvF,OAC3C+F,SAAUnF,EAAM+D,YAAYY,EAAKvF,OAAS,OAG9C,4BACEe,UAAWC,KAAQ4F,YACnBb,UAAWnF,EAAMiG,YACjB3E,QAAStB,EAAMkG,KAEdlG,EAAMgB,OAAS,YAAc,sB,oBCQvBmF,G,oLAhCSC,GACpB,OACEA,EAAUnE,OAASU,KAAK3C,MAAMiC,MAC9BmE,EAAUnG,WAAa0C,KAAK3C,MAAMC,W,+BAKpC,IAAIoG,EAAe,CAACjG,KAAQ+F,OAI5B,GAHIxD,KAAK3C,MAAMiC,MACboE,EAAarE,KAAK5B,KAAQkG,QAExB3D,KAAK3C,MAAM6B,aAAc,CAAC,IAAD,gBACNc,KAAK3C,MAAM6B,cADL,IAC3B,2BAA8C,CAAC,IAAtCC,EAAqC,QAC5CuE,EAAarE,KAAK5B,KAAQ0B,KAFD,+BAM7B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUG,KAAMU,KAAK3C,MAAMiC,KAAMV,QAASoB,KAAK3C,MAAMuG,cACrD,yBAAKpG,UAAWkG,EAAanE,KAAK,MAAOS,KAAK3C,MAAMC,e,GAtBxC6C,a,oBCaL0D,GAfA,SAACxG,GAAD,OACb,4BACEmF,SAAUnF,EAAMmF,SAChBhF,UAAW,CAACC,KAAQoG,OAAQpG,KAAQJ,EAAMyG,UAAUvE,KAAK,KACzDZ,QAAStB,EAAMuB,SAEdvB,EAAMC,WCgCIyG,GArCM,SAAC1G,GACpB,IAAM2G,EAAqB1C,OAAO2C,QAAQ5G,EAAM+D,aAAaI,KAC3D,SAACQ,EAAMJ,GACL,OACE,wBAAIC,IAAKD,GACP,0BAAMsC,MAAO,CAAEC,cAAe,eAAiBnC,EAAK,IADtD,QAEGA,EAAK,OAMd,OACE,kBAAC,EAAD,KACE,0CACA,iFACA,4BAAKgC,GACL,2BACE,gDAAsB3G,EAAM4F,WAAWC,QAAQ,GAA/C,UAEF,oDACA,kBAAC,GAAD,CAAQY,QAAQ,SAASlF,QAASvB,EAAM+G,WAAxC,UAGA,kBAAC,GAAD,CAAQN,QAAQ,UAAUlF,QAASvB,EAAMgH,aAAzC,c,oBCtBSC,GAJC,kBACZ,yBAAK9G,UAAWC,KAAQ8G,QAAxB,eC+CWC,GA/CU,SAACC,EAAkBtI,GAC1C,mNACEiC,MAAQ,CACNsG,MAAO,MAFX,EA8BEC,WAAa,WACX,EAAK7E,SAAS,CAAE4E,MAAO,QA/B3B,0EAK+B,IAAD,OAC1B1E,KAAK4E,eAAiBzI,EAAM0I,aAAaC,QAAQC,KAC/C,SAACD,GAEC,OADA,EAAKhF,SAAS,CAAE4E,MAAO,OAChBI,KAET,SAACJ,GACC,EAAK5E,SAAS,CAAE4E,MAAOA,OAG3B1E,KAAKgF,gBAAkB7I,EAAM0I,aAAaI,SAASF,KACjD,SAACG,GAEC,OADA,EAAKpF,SAAS,CAAE4E,MAAO,OAChBQ,KAET,SAACR,GACC,EAAK5E,SAAS,CAAE4E,MAAOA,SArB/B,6CA0BIvI,EAAM0I,aAAaC,QAAQK,MAAMnF,KAAK4E,gBACtCzI,EAAM0I,aAAaI,SAASE,MAAMnF,KAAKgF,mBA3B3C,+BAkCI,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAO1F,KAAMU,KAAK5B,MAAMsG,MAAOd,YAAa5D,KAAK2E,YAC9C3E,KAAK5B,MAAMsG,MAAQ1E,KAAK5B,MAAMsG,MAAMU,QAAU,MAEjD,kBAACX,EAAqBzE,KAAK3C,YAvCnC,GAA+B8C,cCLpBkF,GAAe,SAACC,EAAQC,GACnC,OAAO,eACFD,EADL,GAEKC,IAIMC,GAAmB,SAACC,GAC/B,OAAKA,EAGEnE,OAAOoE,OAAOD,GAAgB3D,QAAO,SAAC6D,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GAF5D,GAKEC,GAAkB,SAACC,EAAOC,GACrC,IAAIC,GAAU,EAUd,GATID,EAAME,WACRD,EAA2B,KAAjBF,EAAMI,QAAiBF,GAE/BD,EAAMI,YACRH,EAAUF,EAAM5D,QAAU6D,EAAMI,WAAaH,GAE3CD,EAAMK,YACRJ,EAAUF,EAAM5D,QAAU6D,EAAMK,WAAaJ,GAE3CD,EAAMM,QAAS,CAEjBL,EADgB,wIACEM,KAAKR,IAAUE,EAEnC,GAAID,EAAMQ,UAAW,CAEnBP,EADgB,QACEM,KAAKR,IAAUE,EAEnC,OAAOA,GC+FM7H,gBAlBS,SAACC,GACvB,MAAO,CACLgD,YAAahD,EAAMoI,cAAcpF,YACjC6B,WAAY7E,EAAMoI,cAAcvD,WAChCyB,MAAOtG,EAAMoI,cAAc9B,MAC3BrG,OAA6B,OAArBD,EAAME,KAAK8B,UAGI,SAACpD,GAC1B,MAAO,CACLyJ,qBAAsB,SAACC,GAAD,OAAa1J,ECpH9B,CACLP,KrBL0B,iBqBM1BkK,eDkHkED,KAClEE,wBAAyB,SAACF,GAAD,OACvB1J,EChHG,CACLP,KrBV6B,oBqBW7BkK,eD8GoCD,KACpCG,uBAAwB,kBAAM7J,GChGzB,SAACA,GACNb,EACG2K,IAAI,8DACJC,MAAK,SAAC7B,GACLlI,EAfC,CACLP,KrBf2B,kBqBgB3B2E,YAa4B8D,EAAK8B,UAE9BC,OAAM,kBAAMjK,EAXV,CACLP,KrBpBmC,mCoByHnCyK,eAAgB,kBAAMlK,EEzFjB,CACLP,KtB5ByB,mBoBqHzB0K,gBAAiB,SAAChK,GAAD,OAAUH,EAASoK,EAA4BjK,QAGrDgB,CAGbqG,IArH2B,SAACnH,GAAW,IAAD,EACVgK,oBAAS,GADC,mBAC/BC,EAD+B,KACvBC,EADuB,KAGtCC,qBAAU,WACRnK,EAAMwJ,2BACL,IAEH,IAiB6BzF,EAjBvBqG,EAAmB,WACvBF,GAAU,IA+BVG,EAAe,KACbC,EAAStK,EAAMqH,MACjB,uBAAGR,MATc,CACjB0D,UAAW,SACXC,UAAW,GACXC,MAAO,MACPC,WAAY,SAKZ,gCAEA,kBAAC,GAAD,MA2BF,OAzBI1K,EAAM+D,cACRuG,EACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAQvG,YAAa/D,EAAM+D,cAC3B,kBAAC,GAAD,CACE+B,eAAgB9F,EAAMoJ,qBACtBrD,kBAAmB/F,EAAMuJ,wBACzBxF,YAAa/D,EAAM+D,YACnB6B,WAAY5F,EAAM4F,WAClBK,aA9BqBlC,EA8BY/D,EAAM+D,YA7BjCE,OAAOoE,OAAOtE,GAAaU,QACrC,SAACkG,EAAOC,GAAR,OAAiBD,EAAQC,IACzB,GAEW,GA0BP1E,IAzCW,WACblG,EAAMgB,OACRkJ,GAAU,IAEN/B,GAAiBnI,EAAM+D,aAAe,GACxC/D,EAAM8J,gBAAgB,aAExB9J,EAAM6K,QAAQ7I,KAAK,oBAmCfhB,OAAQhB,EAAMgB,UAIpBqJ,EACE,kBAAC,GAAD,CACEtG,YAAa/D,EAAM+D,YACnBgD,UAAWqD,EACXpD,YAtDqB,WACzBhH,EAAM6J,iBACN7J,EAAM6K,QAAQ7I,KAAK,cAqDf4D,WAAY5F,EAAM4F,cAMtB,kBAAC,EAAD,KACE,kBAAC,GAAD,CACE/D,aAnCW,GAoCXI,KAAMgI,EACN1D,YAAa6D,GAEZC,GAEFC,KAsC2BxL,I,oBG/FnBgM,GA9BS,SAAC9K,GACvB,OACE,yBAAKG,UAAWC,KAAQ0K,iBACtB,uDACA,6BACE,kBAAC,GAAD,CAAQ/G,YAAa/D,EAAM+D,eAE7B,2BACE,gDAAsB/D,EAAM4F,WAAWC,QAAQ,GAA/C,UAEF,kBAAC,GAAD,CAAQY,QAAQ,SAASlF,QAASvB,EAAM+K,gBAAxC,UAGC/K,EAAMgL,kBAAoB,KACzB,kBAAC,GAAD,CAAQvE,QAAQ,UAAUlF,QAASvB,EAAMiL,kBAAzC,c,0DCqDOC,GArED,SAAClL,GACb,IAAImL,EAAe,KACbC,EAAe,CAAChL,KAAQiL,cAE9B,OADArL,EAAMsL,SAAWtL,EAAMuL,SAAUH,EAAapJ,KAAK5B,KAAQoL,SACnDxL,EAAMyL,aACZ,IAAK,QACHN,EACE,yCACEhL,UAAWiL,EAAalJ,KAAK,MACzBlC,EAAM0L,cAFZ,CAGEjD,MAAOzI,EAAMyI,MACbkD,SAAU3L,EAAM4L,WAGpB,MACF,IAAK,WACHT,EACE,4CACEhL,UAAWiL,EAAalJ,KAAK,MACzBlC,EAAM0L,cAFZ,CAGEjD,MAAOzI,EAAMyI,MACbkD,SAAU3L,EAAM4L,WAGpB,MACF,IAAK,SACHT,EACE,4BACEhL,UAAWiL,EAAalJ,KAAK,KAC7BuG,MAAOzI,EAAMyI,MACbkD,SAAU3L,EAAM4L,SAEf5L,EAAM0L,cAAcG,QAAQ1H,KAAI,SAAC2H,GAAD,OAC/B,4BAAQtH,IAAKsH,EAAIrD,MAAOA,MAAOqD,EAAIrD,OAChCqD,EAAIC,gBAKb,MACF,QACEZ,EACE,yCACEhL,UAAWiL,EAAalJ,KAAK,MACzBlC,EAAM0L,cAFZ,CAGEjD,MAAOzI,EAAMyI,MACbkD,SAAU3L,EAAM4L,WAKxB,OACE,yBAAKzL,UAAWC,KAAQ8K,OACtB,2BAAO/K,UAAWC,KAAQ2E,MAAOiH,QAAQ,IACtChM,EAAMgF,OAERmG,IChDDc,G,4MACJlL,MAAQ,CACNmL,UAAW,CACTC,KAAM,CACJV,YAAa,QACbC,cAAe,CACbS,KAAM,OACN/M,KAAM,OACNgN,YAAa,aAEf3D,MAAO,GACP4D,WAAY,CACVzD,UAAU,EACVE,UAAW,EACXwD,OAAO,GAEThB,SAAS,GAEXiB,OAAQ,CACNd,YAAa,QACbC,cAAe,CACbS,KAAM,SACN/M,KAAM,OACNgN,YAAa,mBAEf3D,MAAO,GACP4D,WAAY,CACVzD,UAAU,EACV0D,OAAO,GAEThB,SAAS,GAEXkB,QAAS,CACPf,YAAa,QACbC,cAAe,CACbS,KAAM,UACN/M,KAAM,OACNgN,YAAa,iBAEf3D,MAAO,GACP4D,WAAY,CACVzD,UAAU,EACVE,UAAW,EACXC,UAAW,EACXG,WAAW,EACXoD,OAAO,GAEThB,SAAS,GAEXmB,KAAM,CACJhB,YAAa,QACbC,cAAe,CACbS,KAAM,OACN/M,KAAM,OACNgN,YAAa,aAEf3D,MAAO,GACP4D,WAAY,CACVzD,UAAU,EACV0D,OAAO,GAEThB,SAAS,GAEXoB,MAAO,CACLjB,YAAa,QACbC,cAAe,CACbS,KAAM,QACN/M,KAAM,QACNgN,YAAa,cAEf3D,MAAO,GACP4D,WAAY,CACVzD,UAAU,EACVI,SAAS,EACTsD,OAAO,GAEThB,SAAS,GAEXqB,eAAgB,CACdlB,YAAa,SACbC,cAAe,CACbG,QAAS,CACP,CAAEpD,MAAO,UAAWsD,WAAY,WAChC,CAAEtD,MAAO,WAAYsD,WAAY,cAGrCtD,MAAO,GACP4D,WAAY,CACVC,OAAO,KAIbM,aAAa,G,EAEfC,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAMC,KAAiB,EAAKlM,MAAMmL,UACrCc,EAASC,GAAiB,EAAKlM,MAAMmL,UAAUe,GAAexE,MAEhE,IAAMyE,EAAQ,CACZnJ,YAAa,EAAK/D,MAAM+D,YACxBoJ,MAAO,EAAKnN,MAAM4F,WAClBvG,OAAQ,EAAKW,MAAMX,OACnB+N,UAAWJ,GAEb,EAAKhN,MAAMqN,cAAcH,EAAO,EAAKlN,MAAM+C,Q,EAE7CuK,oBAAsB,SAACR,EAAOS,GAC5B,IAAMC,EAAqBxF,GAAa,EAAKjH,MAAMmL,UAAUqB,GAAY,CACvE9E,MAAOqE,EAAMW,OAAOhF,MACpB6C,SAAS,EACTe,WAAYrE,GAAa,EAAKjH,MAAMmL,UAAUqB,GAAWlB,WAAY,CACnEC,MAAO9D,GACLsE,EAAMW,OAAOhF,MACb,EAAK1H,MAAMmL,UAAUqB,GAAWlB,gBAIhCqB,EAAc1F,GAAa,EAAKjH,MAAMmL,UAAZ,gBAC7BqB,EAAYC,IAEXZ,GAAc,EAClB,IAAK,IAAMW,KAAaG,EAClBA,EAAYH,GAAWlB,aACzBO,EAAcc,EAAYH,GAAWlB,WAAWC,OAASM,GAG7D,EAAKnK,SAAS,CAAEyJ,UAAWwB,EAAad,YAAaA,K,uDAE7C,IAAD,OACDe,EAAoB1J,OAAO2C,QAAQjE,KAAK5B,MAAMmL,WAChD0B,EACF,0BAAMC,OAAO,GAAGC,SAAUnL,KAAKkK,cAC5Bc,EAAkBxJ,KAAI,SAAC4J,GAAD,OACrB,kBAAC,GAAD,CACEvJ,IAAKuJ,EAAQ,GACbtC,YAAasC,EAAQ,GAAGtC,YACxBC,cAAeqC,EAAQ,GAAGrC,cAC1BjD,MAAOsF,EAAQ,GAAGtF,MAClBmD,QAAS,SAACkB,GAAD,OAAW,EAAKQ,oBAAoBR,EAAOiB,EAAQ,KAC5DxC,SAAUwC,EAAQ,GAAG1B,WAAWC,MAChChB,QAASyC,EAAQ,GAAGzC,aAGxB,kBAAC,GAAD,CAAQ7E,QAAQ,UAAUtB,UAAWxC,KAAK5B,MAAM6L,aAAhD,UAQJ,OAHIjK,KAAK3C,MAAMgO,UACbJ,EAAO,kBAAC,GAAD,OAGP,yBAAKzN,UAAWC,KAAQ6L,aACtB,uDACC2B,O,GA5JiB9K,aA0LXhC,gBAfS,SAACC,GACvB,MAAO,CACLgD,YAAahD,EAAMoI,cAAcpF,YACjC6B,WAAY7E,EAAMoI,cAAcvD,WAChCoI,QAASjN,EAAMmM,MAAMc,QACrBjL,MAAOhC,EAAME,KAAK8B,MAClB1D,OAAQ0B,EAAME,KAAK5B,WAGI,SAACM,GAC1B,MAAO,CACL0N,cAAe,SAACH,EAAOnK,GAAR,OACbpD,EH9KwB,SAACyN,EAAWrK,GACxC,OAAO,SAACpD,GACNA,EANK,CACLP,KtBbiC,0BsBmBjCN,EACGmP,KAAK,qBAAuBlL,EAAOqK,GACnC1D,MAAK,SAAC9B,GACLjI,EAxB6B,SAACuO,EAAId,GACxC,MAAO,CACLhO,KtBEmC,0BsBDnC+O,QAASD,EACTd,UAAWA,GAoBEgB,CAAsBxG,EAAS+B,KAAKwC,KAAMiB,OAEpDxD,OAAM,SAACvC,GACN1H,EApB2B,SAAC0H,GAClC,MAAO,CACLjI,KtBNiC,wBsBOjCiI,MAAOA,GAiBMgH,CAAoBhH,QGqKtBwG,CAAsBX,EAAOnK,QAG7BjC,CAGbqG,GAAiB8E,GAAanN,IClM1BwP,G,4MACJvN,MAAQ,CACNiK,mBAAmB,G,EAGrBuD,sBAAwB,WACtB,EAAK9L,SAAS,CAAEuI,mBAAmB,IACnC,EAAKhL,MAAM6K,QAAQ2D,U,EAErBC,wBAA0B,WACxB,EAAKhM,SAAS,CAAEuI,mBAAmB,IACnC,EAAKhL,MAAM6K,QAAQ6D,QAAQ,2B,uDAI3B,IAAIC,EAAU,kBAAC,KAAD,CAAUlO,GAAG,MAC3B,GAAIkC,KAAK3C,MAAM+D,YAAa,CAC1B,IAAM6K,EAAmBjM,KAAK3C,MAAM6O,UAClC,kBAAC,KAAD,CAAUpO,GAAG,MACX,KACJkO,EACE,oCACGC,EACD,kBAAC,GAAD,CACE7K,YAAapB,KAAK3C,MAAM+D,YACxBgH,eAAgBpI,KAAK4L,sBACrBtD,iBAAkBtI,KAAK8L,wBACvB7I,WAAYjD,KAAK3C,MAAM4F,WACvBoF,kBAAmBrI,KAAK5B,MAAMiK,oBAEhC,kBAAC,KAAD,CACElL,KAAM6C,KAAK3C,MAAM8O,MAAMhP,KAAO,gBAC9BiP,UAAW9C,MAKnB,OAAO0C,M,GArCY7L,aAyDRhC,gBARS,SAACC,GACvB,MAAO,CACLgD,YAAahD,EAAMoI,cAAcpF,YACjC6B,WAAY7E,EAAMoI,cAAcvD,WAChCiJ,UAAW9N,EAAMmM,MAAM2B,aAIZ/N,CAAyBwN,I,oBCrDlCU,G,4MACJjO,MAAQ,CACNwE,SAAU,CACRmH,MAAO,CACLjB,YAAa,QACbC,cAAe,CACbS,KAAM,QACN/M,KAAM,QACNgN,YAAa,cAEf3D,MAAO,GACP4D,WAAY,CACVzD,UAAU,EACVI,SAAS,EACTsD,OAAO,GAEThB,SAAS,GAEX2D,SAAU,CACRxD,YAAa,QACbC,cAAe,CACbS,KAAM,WACN/M,KAAM,WACNgN,YAAa,iBAEf3D,MAAO,GACP4D,WAAY,CACVzD,UAAU,EACVE,UAAW,EACXwD,OAAO,GAEThB,SAAS,IAGbsB,aAAa,EACbsC,UAAU,G,EAQZ5B,oBAAsB,SAACR,EAAOS,GAC5B,IAAMC,EAAqBxF,GAAa,EAAKjH,MAAMwE,SAASgI,GAAY,CACtE9E,MAAOqE,EAAMW,OAAOhF,MACpB6C,SAAS,EACTe,WAAYrE,GAAa,EAAKjH,MAAMwE,SAASgI,GAAWlB,WAAY,CAClEC,MAAO9D,GACLsE,EAAMW,OAAOhF,MACb,EAAK1H,MAAMwE,SAASgI,GAAWlB,gBAI/BqB,EAAc1F,GAAa,EAAKjH,MAAMwE,SAAZ,gBAC7BgI,EAAYC,IAEXZ,GAAc,EAClB,IAAK,IAAMW,KAAaG,EAClBA,EAAYH,GAAWlB,aACzBO,EAAcc,EAAYH,GAAWlB,WAAWC,OAASM,GAG7D,EAAKnK,SAAS,CAAE8C,SAAUmI,EAAad,YAAaA,K,EAEtDuC,cAAgB,SAACrC,GACfA,EAAMC,iBACN,EAAK/M,MAAMoP,OACT,EAAKrO,MAAMwE,SAASmH,MAAMjE,MAC1B,EAAK1H,MAAMwE,SAAS0J,SAASxG,MAC7B,EAAK1H,MAAMmO,W,EAGfG,kBAAoB,SAACvC,GACnBA,EAAMC,iBACN,EAAKtK,UAAS,SAAC6M,GACb,MAAO,CAAEJ,UAAWI,EAAUJ,c,kEAtCiB,IAA7C/G,GAAiBxF,KAAK3C,MAAM+D,cAC9BpB,KAAK3C,MAAM8J,gBAAgB,O,+BAwCrB,IAAD,OACD6D,EAAoB1J,OAAO2C,QAAQjE,KAAK5B,MAAMwE,UAChDqI,EACF,0BAAMC,OAAO,GAAGC,SAAUnL,KAAKwM,eAC7B,kBAAC,GAAD,CAAQ1I,QAAQ,cAAclF,QAASoB,KAAK0M,mBACzC1M,KAAK5B,MAAMmO,SACV,6BACE,0BAAM/O,UAAWC,KAAQmP,WAAzB,cADF,uBAKA,mDAEE,0BAAMpP,UAAWC,KAAQmP,WAAzB,gBAIL5B,EAAkBxJ,KAAI,SAAC4J,GAAD,OACrB,kBAAC,GAAD,CACEvJ,IAAKuJ,EAAQ,GACbtC,YAAasC,EAAQ,GAAGtC,YACxBC,cAAeqC,EAAQ,GAAGrC,cAC1BjD,MAAOsF,EAAQ,GAAGtF,MAClBmD,QAAS,SAACkB,GAAD,OAAW,EAAKQ,oBAAoBR,EAAOiB,EAAQ,KAC5DxC,SAAUwC,EAAQ,GAAG1B,WAAWC,MAChChB,QAASyC,EAAQ,GAAGzC,aAGxB,kBAAC,GAAD,CAAQ7E,QAAQ,UAAUtB,UAAWxC,KAAK5B,MAAM6L,aAAhD,WAKAjK,KAAK3C,MAAMgO,UACbJ,EAAO,kBAAC,GAAD,OAET,IAAI4B,EAAe,KACf7M,KAAK3C,MAAMqH,QACbmI,EACE,uBAAGrP,UAAWC,KAAQqP,cACnB9M,KAAK3C,MAAMqH,MAAMU,QAAQ2H,MAAM,KAAKxN,KAAK,OAIhD,IAAIyN,EAAe,KAInB,OAHIhN,KAAK3C,MAAMgB,SACb2O,EAAe,kBAAC,KAAD,CAAUlP,GAAIkC,KAAK3C,MAAM4P,oBAGxC,yBAAKzP,UAAWC,KAAQ4O,eACrBW,EACA/B,EACA4B,O,GAnImB1M,aAmKbhC,gBAhBS,SAACC,GACvB,MAAO,CACLiN,QAASjN,EAAME,KAAK+M,QACpB3G,MAAOtG,EAAME,KAAKoG,MAClBrG,OAA6B,OAArBD,EAAME,KAAK8B,MACnB6M,iBAAkB7O,EAAME,KAAK2O,iBAC7B7L,YAAahD,EAAMoI,cAAcpF,gBAGV,SAACpE,GAC1B,MAAO,CACLyP,OAAQ,SAAC1C,EAAOmD,EAAOX,GAAf,OACNvP,E5BtIuB,SAAC+M,EAAOuC,EAAUC,GAC7C,OAAO,SAACvP,GACNA,EAlCK,CACLP,KCYsB,eDsBtB,IAAM0Q,EAAW,CACfpD,MAAOA,EACPuC,SAAUA,EACVc,mBAAmB,GAEjBC,EACF,wGACGd,IACHc,EACE,qHAEJlR,IACGmP,KAAK+B,EAAKF,GACVpG,MAAK,SAAC9B,GACL,IAAMqI,GACJ,IAAI/M,MAAOC,UAAsC,IAA1ByE,EAAS+B,KAAKuG,UACvC3Q,aAAa4Q,QAAQ,cAAevI,EAAS+B,KAAKzK,SAClDK,aAAa4Q,QAAQ,eAAgBvI,EAAS+B,KAAKxK,SACnDI,aAAa4Q,QAAQ,gBAAiBF,GACtCtQ,EAASV,EAAY2I,EAAS+B,KAAKzK,QAAS0I,EAAS+B,KAAKxK,UAC1DQ,EAASF,EAAiBmI,EAAS+B,KAAKuG,eAEzCtG,OAAM,SAACvC,GACN1H,EA/CU,SAAC0H,GACjB,MAAO,CACLjI,KCEsB,aDDtBiI,MAAOA,GA4CM+I,CAAU/I,EAAMO,SAAS+B,KAAKtC,Y4B4GhC0C,CAAsB2C,EAAOmD,EAAOX,KAC/CpF,gBAAiB,SAAChK,GAAD,OAAUH,EAASoK,EAA4BjK,QAGrDgB,CAA6CkO,I,4VCtK5D,IAAMqB,G,MAAcC,EAAOC,GAAV,MA+DFzP,gBAVS,SAACC,GACvB,MAAO,CACLgC,MAAOhC,EAAME,KAAK8B,UAGK,SAACpD,GAC1B,MAAO,CACL6Q,oBAAqB,SAACtC,EAAGnL,GAAJ,OAAcpD,ENmBP,SAACuO,EAAInL,GACnC,OAAO,SAACpD,GACNb,EACG2R,OAAO,WAAavC,EAAK,cAAgBnL,GACzC2G,MAAK,SAACgH,GACa,KAAdA,EAAIC,QACNhR,EAZiB,SAACuO,GAC1B,MAAO,CACL9O,KtBrEwB,esBsExB+O,QAASD,GASM0C,CAAY1C,OAGxBtE,OAAM,SAACvC,GACN1H,EAtBwB,SAAC0H,GAC/B,MAAO,CACLjI,KtB9D8B,qBsB+D9BiI,MAAOA,GAmBMwJ,CAAiBxJ,QM7Bc0C,CAAyBmE,EAAGnL,QAG7DjC,EA3CD,SAACd,GAAW,IAAD,EACagK,oBAAS,GADtB,mBAChB8G,EADgB,KACJC,EADI,KAMvB,OACE,kBAACV,GAAD,CAAalQ,UAAWC,KAAQ4Q,MAAOxM,IAAKxE,EAAMkN,MAAMgB,IACtD,gDAEGjK,OAAO2C,QAAQ5G,EAAMkN,MAAMnJ,aAAaI,KAAI,SAACd,EAAYkB,GAAb,OAC3C,yBACEpE,UAAWC,KAAQ6Q,WACnBzM,IAAKD,GAFP,UAGKlB,EAAW,GAHhB,aAGuBA,EAAW,GAHlC,UAMJ,2BACE,wCACS,gCAASrD,EAAMkN,MAAMC,MAAMtH,QAAQ,GAAnC,UAET,kBAAC,GAAD,CAAQY,QAAQ,SAASlF,QAnBb,WAChBwP,GAAc,GACd/Q,EAAMwQ,oBAAoBxQ,EAAMkN,MAAMgB,GAAIlO,EAAM+C,QAiBCoC,SAAU2L,GAAvD,e,sCCrCFI,G,kLAEFvO,KAAK3C,MAAMmR,cAAcxO,KAAK3C,MAAM+C,MAAOJ,KAAK3C,MAAMX,U,+BAGtD,IAAI+R,EAAS,KAiBb,OAhBIzO,KAAK3C,MAAMgO,UACboD,EAAS,kBAAC,GAAD,OAEPzO,KAAK3C,MAAMoR,SACbA,EAASzO,KAAK3C,MAAMoR,OAAOvM,OACzB,kBAACwM,GAAA,EAAD,CAAiBtC,UAAU,KAAK5O,UAAWC,KAAQkR,MAChD3O,KAAK3C,MAAMoR,OAAOjN,KAAI,SAAC+I,GAAD,OACrB,kBAACqE,GAAA,EAAD,CAAe/M,IAAK0I,EAAMgB,GAAIsD,WAAW,OAAOC,QAAS,KACvD,kBAAC,GAAD,CAAOvE,MAAOA,SAKpB,8DAGG,yBAAK/M,UAAWC,KAAQ8Q,QAASE,O,GAtBvBtO,aA8CNhC,gBAdS,SAACC,GACvB,MAAO,CACLqQ,OAAQrQ,EAAMmM,MAAMkE,OACpBpD,QAASjN,EAAMmM,MAAMc,QACrBjL,MAAOhC,EAAME,KAAK8B,MAClB1D,OAAQ0B,EAAME,KAAK5B,WAGI,SAACM,GAC1B,MAAO,CACLwR,cAAe,SAACpO,EAAO1D,GAAR,OACbM,EPCqB,SAACoD,EAAO1D,GACjC,OAAO,SAACM,GACNA,EAlBK,CACLP,KtB/B8B,uBsBiD9B,IAAMsS,EACJ,SAAW3O,EAAQ,8BAAgC1D,EAAS,IAC9DP,EACG2K,IAAI,eAAiBiI,GACrBhI,MAAK,SAACgH,GAEL,IADA,IAAMiB,EAAgB,GACtB,MAA0B1N,OAAO2C,QAAQ8J,EAAI/G,MAA7C,eAAoD,CAAC,IAAD,sBAAxCuE,EAAwC,KAApCzF,EAAoC,KAClDkJ,EAAc3P,KAAd,eAAwByG,EAAxB,CAA+ByF,GAAIA,KAErCvO,EAvBC,CACLP,KtBnCgC,uBsBoChCgS,OAqBgCO,OAE7B/H,OAAM,SAACvC,GACN1H,EArBwB,SAAC0H,GAC/B,MAAO,CACLjI,KtBxC8B,qBsByC9BiI,MAAOA,GAkBMuK,CAAiBvK,QOhBnB0C,CAAoBhH,EAAO1D,QAG3ByB,CAGbqG,GAAiB+J,GAAQpS,ICzCZgC,eAAQ,MALI,SAACnB,GAC1B,MAAO,CACLkS,cAAe,kBAAMlS,EAASoK,SAGnBjJ,EAdA,SAACd,GAId,OAHAmK,qBAAU,WACRnK,EAAM6R,mBAED,kBAAC,KAAD,CAAUpR,GAAG,SC4BtB,IAKeK,gBALS,SAACC,GACvB,MAAO,CACLC,OAA6B,OAArBD,EAAME,KAAK8B,SAGRjC,EAhCf,SAAad,GACX,IAAI8R,EACF,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOhS,KAAK,iBAAiBiP,UAAWC,KACxC,kBAAC,KAAD,CAAOlP,KAAK,IAAIiP,UAAWgD,MAc/B,OAXI/R,EAAMgB,SACR8Q,EACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOhS,KAAK,YAAYiP,UAAWT,KACnC,kBAAC,KAAD,CAAOxO,KAAK,UAAUiP,UAAWmC,KACjC,kBAAC,KAAD,CAAOpR,KAAK,iBAAiBiP,UAAWC,KACxC,kBAAC,KAAD,CAAOlP,KAAK,UAAUiP,UAAWiD,KACjC,kBAAC,KAAD,CAAOlS,KAAK,IAAIiP,UAAWgD,OAK/B,kBAAC,IAAD,CAAeE,SAAS,uBACtB,kBAAC,GAAD,KAASH,O,SC5BTI,GAAe,CACnBnO,YAAa,KACb6B,WAAY,EACZyB,OAAO,GAEH8K,GAAoB,CACxBC,MAAO,GACPC,MAAO,GACPC,KAAM,IACNC,OAAQ,IAGJC,GAAgB,SAACzR,EAAO8M,GAC5B,IAAM4E,EAEJ,GADC1R,EAAM6E,WAAauM,GAAkBtE,EAAOvE,iBAAiBzD,QAAQ,GAElE6M,EAAa,gBAChB7E,EAAOvE,eAAiBvI,EAAMgD,YAAY8J,EAAOvE,gBAAkB,GAEhEqJ,EAAiB3K,GAAajH,EAAMgD,YAAa2O,GAEvD,OAAO1K,GAAajH,EADH,CAAEgD,YAAa4O,EAAgB/M,WAAY6M,KAGxDG,GAAmB,SAAC7R,EAAO8M,GAC/B,IAAIgF,EAAe9R,EAAMgD,YAAY8J,EAAOvE,gBAAkB,EAExDmJ,GADNI,EAAeA,EAAe,EAAI,EAAIA,GAErB,EAGI,GADb9R,EAAM6E,WAAauM,GAAkBtE,EAAOvE,iBAC5CzD,QAAQ,GACV9E,EAAM6E,WACN8M,EAAa,gBAChB7E,EAAOvE,eAAiBuJ,GAErBF,EAAiB3K,GAAajH,EAAMgD,YAAa2O,GAEvD,OAAO1K,GAAajH,EADH,CAAEgD,YAAa4O,EAAgB/M,WAAY6M,KAiC/CK,GA9BC,WAAmC,IAAlC/R,EAAiC,uDAAzBmR,GAAcrE,EAAW,uCAChD,OAAQA,EAAOzO,MACb,IhC5C0B,iBgC6CxB,OAAOoT,GAAczR,EAAO8M,GAE9B,IhC9C6B,oBgC+C3B,OAAO+E,GAAiB7R,EAAO8M,GAEjC,IhChD2B,kBgCiDzB,OAAO7F,GAAajH,EAAO,CACzBgD,YAAa,CACXqO,MAAOvE,EAAO9J,YAAYqO,MAC1BC,MAAOxE,EAAO9J,YAAYsO,MAC1BE,OAAQ1E,EAAO9J,YAAYwO,OAC3BD,KAAMzE,EAAO9J,YAAYuO,MAE3B1M,WAAY,EACZyB,OAAO,IAGX,IhC3DmC,0BgC4DjC,OAAOW,GAAajH,EAAO,CACzBsG,OAAO,IAGX,QACE,OAAOtG,ICjEPmR,GAAe,CACnBd,OAAQ,GACRpD,SAAS,EACTa,WAAW,GAGP+B,GAAc,SAAC7P,EAAO8M,GAC1B,IAAMkF,EAAYhS,EAAMqQ,OAAO4B,QAAO,SAAC9F,GAAD,OAAWA,EAAMgB,KAAOL,EAAOM,WACrE,OAAOnG,GAAajH,EAAO,CACzBqQ,OAAQ2B,KA+CGD,GA5CC,WAAmC,IAAlC/R,EAAiC,uDAAzBmR,GAAcrE,EAAW,uCAChD,OAAQA,EAAOzO,MACb,IjCTyB,gBiCUvB,OAAO4I,GAAajH,EAAO,CACzB8N,WAAW,IAGf,IjCfmC,0BiCgBjC,IAAMoE,EAAWjL,GAAa6F,EAAOT,UAAW,CAC9Cc,GAAIL,EAAOM,UAEb,OAAOnG,GAAajH,EAAO,CACzBqQ,OAAQrQ,EAAMqQ,OAAOxM,OAAOqO,GAC5BjF,SAAS,EACTa,WAAW,IAGf,IjC3BiC,wBiC4BjC,IjCvB8B,qBiCwB5B,OAAO7G,GAAajH,EAAO,CACzBiN,SAAS,IAGb,IjC3BgC,uBiC4B9B,OAAOhG,GAAajH,EAAO,CACzBqQ,OAAQvD,EAAOuD,OACfpD,SAAS,IAGb,IjC7B8B,qBiC8B9B,IjCvCiC,wBiCwCjC,IjClC8B,qBiCmC5B,OAAOhG,GAAajH,EAAO,CACzBiN,SAAS,IAGb,IjCrCwB,eiCsCtB,OAAO4C,GAAY7P,EAAO8M,GAE5B,QACE,OAAO9M,ICpDPmS,GAAY,CAChBnQ,MAAO,KACP1D,OAAQ,KACRgI,MAAO,KACP2G,SAAS,EACT4B,iBAAkB,KAoCLkD,GAlCC,WAAgC,IAA/B/R,EAA8B,uDAAtBmS,GAAWrF,EAAW,uCAC7C,OAAQA,EAAOzO,MACb,IlCKsB,akCJpB,OAAO4I,GAAajH,EAAO,CACzBiN,SAAS,EACT3G,MAAO,OAEX,IlCCwB,ekCAtB,OAAOW,GAAajH,EAAO,CACzBgC,MAAO8K,EAAO3O,QACdG,OAAQwO,EAAOxO,OACf2O,SAAS,EACT3G,MAAO,OAEX,IlCLsB,akCMpB,OAAOW,GAAajH,EAAO,CACzBsG,MAAOwG,EAAOxG,MACd2G,SAAS,IAEb,IlCTuB,ckCUrB,OAAOhG,GAAajH,EAAO,CACzBgC,MAAO,KACP1D,OAAQ,OAEZ,IlCZkC,yBkCahC,OAAO2I,GAAajH,EAAO,CACzB6O,iBAAkB/B,EAAO/N,OAG7B,QACE,OAAOiB,I,SC7BPoS,GAAmBC,OAAOC,sCAAwCC,KAClEC,GAAcC,aAAgB,CAClCrK,cAAesK,GACfvG,MAAOwG,GACPzS,KAAM0S,KAEFC,GAAQC,aACZN,GACAJ,GAAiBW,aAAgBC,QAGnCC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.a3e756c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authorisation\":\"Authorisation__Authorisation__1Sy71\",\"ErrorMessage\":\"Authorisation__ErrorMessage__JWvVZ\",\"Dissabled\":\"Authorisation__Dissabled__2Iutd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems__NavItems__3fZSa\",\"LoginIcon\":\"NavItems__LoginIcon__dt-As\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu__SideMenu__3UWTy\",\"Open\":\"SideMenu__Open__1SgcR\",\"Logo\":\"SideMenu__Logo__2xnje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"Loading\":\"Modal__Loading__2_sU3\",\"Active\":\"Modal__Active__1AINr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem__NavItem__r-b9L\",\"active\":\"NavItem__active__2ZZNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\",\"hideDesktop\":\"Backdrop__hideDesktop__1llls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\",\"SuccessBlue\":\"Button__SuccessBlue__1OcmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\",\"Ingredient\":\"Order__Ingredient__5aDVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders__Orders__30Bmr\",\"List\":\"Orders__List__3VSNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2k2jA\"};","module.exports = __webpack_public_path__ + \"static/media/login.6ab6cd51.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.d4ad0c4f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MobileMenuBtn\":\"MobileMenuBtn__MobileMenuBtn__2PzFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load6\":\"Spinner__load6__3S2CE\",\"round\":\"Spinner__round__2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactInfo\":\"ContactInfo__ContactInfo__1dgSV\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-order-react.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\nconst authSuccess = (idToken, localId) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: idToken,\r\n    userId: localId,\r\n  };\r\n};\r\nconst authError = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"burgerToken\");\r\n  localStorage.removeItem(\"burgerExpDate\");\r\n  localStorage.removeItem(\"burgerUserId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\nconst checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\nexport const authorisation = (email, password, isSingUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDgJZ-Y9stbJo0GasmJfTb6MMqvyI2R630\";\r\n    if (!isSingUp) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDgJZ-Y9stbJo0GasmJfTb6MMqvyI2R630\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        const burgerExpDate =\r\n          new Date().getTime() + response.data.expiresIn * 1000;\r\n        localStorage.setItem(\"burgerToken\", response.data.idToken);\r\n        localStorage.setItem(\"burgerUserId\", response.data.localId);\r\n        localStorage.setItem(\"burgerExpDate\", burgerExpDate);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authError(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n  return {\r\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n    path: path,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const token = localStorage.getItem(\"burgerToken\");\r\n    if (!token) {\r\n      return;\r\n    }\r\n    const expDate = new Date(+localStorage.getItem(\"burgerExpDate\"));\r\n    if (expDate <= new Date()) {\r\n      dispatch(logout());\r\n      return;\r\n    }\r\n    const userId = localStorage.getItem(\"burgerUserId\");\r\n    dispatch(\r\n      checkAuthTimeout((expDate.getTime() - new Date().getTime()) / 1000)\r\n    );\r\n    dispatch(authSuccess(token, userId));\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_ERROR = \"FETCH_INGREDIENTS_ERROR\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_ERROR = \"PURCHASE_BURGER_ERROR\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_ERROR = \"FETCH_ORDERS_ERROR\";\r\n\r\nexport const DELETE_ORDER = \"DELETE_ORDER\";\r\nexport const DELETE_ORDER_ERROR = \"DELETE_ORDER_ERROR\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\r\n","const Auxil = (props) => props.children;\r\n\r\nexport default Auxil;","import React from \"react\";\r\nimport burgerLogo from \"../../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.css\";\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={burgerLogo} alt=\"logo\" />\r\n  </div>\r\n);\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport classes from \"./NavItem.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavItem = (props) => (\r\n  <li className={classes.NavItem}>\r\n    <NavLink to={props.link} exact activeClassName={classes.active}>\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nNavItem.propTypes = {\r\n  link: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./NavItems.css\";\r\nimport NavItem from \"./NavItem/NavItem\";\r\nimport LoginIcon from \"../../../assets/images/login.svg\";\r\nimport LogoutIcon from \"../../../assets/images/logout.svg\";\r\n\r\nexport const NavItems = (props) => (\r\n  <ul className={classes.NavItems}>\r\n    <NavItem link=\"/\">Burger Builder</NavItem>\r\n    {props.isAuth ? <NavItem link=\"/orders\">Orders</NavItem> : null}\r\n    {props.isAuth ? (\r\n      <NavItem link=\"/logout\">\r\n        <img className={classes.LoginIcon} src={LogoutIcon} alt=\"icon\" />\r\n      </NavItem>\r\n    ) : (\r\n      <NavItem link=\"/authorisation\">\r\n        <img className={classes.LoginIcon} src={LoginIcon} alt=\"icon\" />\r\n      </NavItem>\r\n    )}\r\n  </ul>\r\n);\r\nNavItems.propTypes = {\r\n  isAuth: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.userId !== null,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(NavItems);\r\n","import React from \"react\";\r\nimport classes from \"./MobileMenuBtn.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MobileMenuBtn = (props) => (\r\n  <div className={classes.MobileMenuBtn} onClick={props.clicked}>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n  </div>\r\n);\r\n\r\nMobileMenuBtn.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\nexport default MobileMenuBtn;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.css\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport MobileMenuBtn from \"../MobileMenuBtn/MobileMenuBtn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <MobileMenuBtn clicked={props.openMenu} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav>\r\n      <NavItems />\r\n    </nav>\r\n  </header>\r\n);\r\nToolbar.propTypes = {\r\n  openMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(Toolbar);\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Backdrop = (props) => {\r\n  let addedClasses = [classes.Backdrop];\r\n  if (props.addClass) {\r\n    for (let newClass of props.addClass) {\r\n      addedClasses.push(classes[newClass]);\r\n    }\r\n  }\r\n  return props.show ? (\r\n    <div className={addedClasses.join(\" \")} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nBackdrop.propTypes = {\r\n  addClass: PropTypes.array,\r\n  show: PropTypes.any,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport classes from \"./SideMenu.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SideMenu = (props) => {\r\n  return (\r\n    <Auxil>\r\n      <Backdrop\r\n        addClass={[\"hideDesktop\"]}\r\n        show={props.show}\r\n        clicked={props.closeMenu}\r\n      />\r\n      <div\r\n        className={[classes.SideMenu, props.show ? classes.Open : null].join(\r\n          \" \"\r\n        )}\r\n        onClick={props.closeMenu}\r\n      >\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavItems />\r\n        </nav>\r\n      </div>\r\n    </Auxil>\r\n  );\r\n};\r\nSideMenu.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\nexport default React.memo(SideMenu);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport Auxil from \"../Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideMenu from \"../../components/Navigation/SideMenu/SideMenu\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showMobileMenu: false,\r\n  };\r\n  componentDidMount() {\r\n    this.props.onTryAutoSingIn();\r\n  }\r\n  closeMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: false });\r\n  };\r\n  openMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <Auxil>\r\n        <Toolbar openMenu={this.openMobileMenuHandler} />\r\n        <SideMenu\r\n          show={this.state.showMobileMenu}\r\n          closeMenu={this.closeMobileMenuHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nLayout.propTypes = {\r\n  children: PropTypes.any,\r\n  onTryAutoSingIn: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTryAutoSingIn: () => dispatch(actions.authCheckState()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Layout);\r\n","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case \"bread-bottom\":\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n        case \"bread-top\":\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>);\r\n            break;\r\n        case \"meat\":\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case \"cheese\":\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case \"bacon\":\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case \"salad\":\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport classes from \"./Burger.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Burger = ({ ingredients }) => {\r\n  let addedIngredient = Object.keys(ingredients)\r\n    .map((ingKey) => {\r\n      return [...Array(ingredients[ingKey])].map((_, i) => {\r\n        return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, item) => {\r\n      return arr.concat(item);\r\n    }, []);\r\n  if (!addedIngredient.length) {\r\n    addedIngredient = <p>Please add some ingredients!</p>;\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {addedIngredient}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\nBurger.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}\r\n                onClick={props.remove}\r\n                disabled={props.disabled}>Less</button>\r\n        <button className={classes.More}\r\n                onClick={props.add}>More</button>\r\n    </div>\r\n);\r\nBuildControl.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    remove: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n    add: PropTypes.func.isRequired,\r\n  };\r\nexport default BuildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControls = (props) => {\r\n  const controls = Object.keys(props.ingredients).map((ingr) => {\r\n    return {\r\n      label: ingr.charAt(0).toUpperCase() + ingr.slice(1),\r\n      type: ingr,\r\n    };\r\n  });\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Current price: <strong>{props.totalPrice.toFixed(2)}</strong>&nbsp;$\r\n      </p>\r\n      {controls.map((item) => (\r\n        <BuildControl\r\n          key={`ctrl-${item.label}`}\r\n          label={item.label}\r\n          add={() => props.addIngredients(item.type)}\r\n          remove={() => props.removeIngredients(item.type)}\r\n          disabled={props.ingredients[item.type] <= 0}\r\n        />\r\n      ))}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.buy}\r\n      >\r\n        {props.isAuth ? \"ORDER NOW\" : \"SING IN TO ORDER\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nBuildControls.propTypes = {\r\n  totalPrice: PropTypes.number,\r\n  addIngredients: PropTypes.func.isRequired,\r\n  removeIngredients: PropTypes.func.isRequired,\r\n  buy: PropTypes.func.isRequired,\r\n  purchasable: PropTypes.bool,\r\n  isAuth: PropTypes.bool.isRequired,\r\n  ingredients: PropTypes.object,\r\n};\r\nexport default BuildControls;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let modalClasses = [classes.Modal];\r\n    if (this.props.show) {\r\n      modalClasses.push(classes.Active);\r\n    }\r\n    if (this.props.addedClasses) {\r\n      for (let addClass of this.props.addedClasses) {\r\n        modalClasses.push(classes[addClass]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Auxil>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div className={modalClasses.join(\" \")}>{this.props.children}</div>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  addedClasses: PropTypes.array,\r\n  show: PropTypes.any,\r\n  modalClosed: PropTypes.func,\r\n  children: PropTypes.any,\r\n};\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./Button.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  btnType: PropTypes.string,\r\n  clicked: PropTypes.func,\r\n  children: PropTypes.any,\r\n  disabled: PropTypes.bool,\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientsSummary = Object.entries(props.ingredients).map(\r\n    (item, i) => {\r\n      return (\r\n        <li key={i}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{item[0]}</span>:&nbsp;\r\n          {item[1]}\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Auxil>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientsSummary}</ul>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.buyCancel}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.buyContinue}>\r\n        CONTINUE\r\n      </Button>\r\n    </Auxil>\r\n  );\r\n};\r\nOrderSummary.propTypes = {\r\n  btnType: PropTypes.string,\r\n  totalPrice: PropTypes.number,\r\n  buyCancel: PropTypes.func.isRequired,\r\n  buyContinue: PropTypes.func.isRequired,\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default OrderSummary;\r\n","import React from \"react\";\r\nimport classes from \"./Spinner.css\"\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxil from \"../Auxiliary\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class WithError extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(\r\n        (request) => {\r\n          this.setState({ error: null });\r\n          return request;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n      this.respInterceptor = axios.interceptors.response.use(\r\n        (resp) => {\r\n          this.setState({ error: null });\r\n          return resp;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.respInterceptor);\r\n    }\r\n\r\n    modalClose = () => {\r\n      this.setState({ error: null });\r\n    };\r\n    render() {\r\n      return (\r\n        <Auxil>\r\n          <Modal show={this.state.error} modalClosed={this.modalClose}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Auxil>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","export const updateObject = (oldObj, updatedProps) => {\r\n  return {\r\n    ...oldObj,\r\n    ...updatedProps,\r\n  };\r\n};\r\n\r\nexport const countIngredients = (ingredientsObj) => {\r\n  if (!ingredientsObj) {\r\n    return 0;\r\n  }\r\n  return Object.values(ingredientsObj).reduce((sum, val) => sum + val, 0);\r\n};\r\n\r\nexport const checkValidation = (value, rules) => {\r\n  let isValid = true;\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n  if (rules.isEmail) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  if (rules.isNumeric) {\r\n    const pattern = /^\\d+$/;\r\n    isValid = pattern.test(value) && isValid;\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxil from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport {countIngredients} from \"../../store/utility\";\r\n\r\nexport const BurgerBuilder = (props) => {\r\n  const [buying, setBuying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.initIngredientsHandler();\r\n  }, []);\r\n\r\n  const buyCancelHandler = () => {\r\n    setBuying(false);\r\n  };\r\n  const buyContinueHandler = () => {\r\n    props.onInitPurchase();\r\n    props.history.push(\"/checkout\");\r\n  };\r\n  const buyHandler = () => {\r\n    if (props.isAuth) {\r\n      setBuying(true);\r\n    } else {\r\n      if (countIngredients(props.ingredients) > 0) {\r\n        props.setRiderectPath(\"/checkout\");\r\n      }\r\n      props.history.push(\"/authorisation\");\r\n    }\r\n  };\r\n  const updatePurchaseState = (ingredients) => {\r\n    const sum = Object.values(ingredients).reduce(\r\n      (total, curr) => total + curr,\r\n      0\r\n    );\r\n    return sum > 0;\r\n  };\r\n\r\n  const errorStyle = {\r\n    textAlign: \"center\",\r\n    marginTop: 90,\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n  };\r\n  let addClasses = [],\r\n    orderSummary = null;\r\n  let burger = props.error ? (\r\n    <p style={errorStyle}>Ingredients can&apos;t be loaded.</p>\r\n  ) : (\r\n    <Spinner />\r\n  );\r\n  if (props.ingredients) {\r\n    burger = (\r\n      <Auxil>\r\n        <Burger ingredients={props.ingredients} />\r\n        <BuildControls\r\n          addIngredients={props.addIngredientHandler}\r\n          removeIngredients={props.removeIngredientHandler}\r\n          ingredients={props.ingredients}\r\n          totalPrice={props.totalPrice}\r\n          purchasable={updatePurchaseState(props.ingredients)}\r\n          buy={buyHandler}\r\n          isAuth={props.isAuth}\r\n        />\r\n      </Auxil>\r\n    );\r\n    orderSummary = (\r\n      <OrderSummary\r\n        ingredients={props.ingredients}\r\n        buyCancel={buyCancelHandler}\r\n        buyContinue={buyContinueHandler}\r\n        totalPrice={props.totalPrice}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Auxil>\r\n      <Modal\r\n        addedClasses={addClasses}\r\n        show={buying}\r\n        modalClosed={buyCancelHandler}\r\n      >\r\n        {orderSummary}\r\n      </Modal>\r\n      {burger}\r\n    </Auxil>\r\n  );\r\n};\r\nBurgerBuilder.propTypes = {\r\n  history: PropTypes.any,\r\n  ingredients: PropTypes.object,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  addIngredientHandler: PropTypes.func.isRequired,\r\n  removeIngredientHandler: PropTypes.func.isRequired,\r\n  initIngredientsHandler: PropTypes.func.isRequired,\r\n  onInitPurchase: PropTypes.func.isRequired,\r\n  setRiderectPath: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n    isAuth: state.auth.token !== null,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIngredientHandler: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    removeIngredientHandler: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    initIngredientsHandler: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    setRiderectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const removeIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\nexport const fetchIngredientsError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_ERROR,\r\n  };\r\n};\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://burger-order-react.firebaseio.com/ingredients.json\")\r\n      .then((resp) => {\r\n        dispatch(setIngredients(resp.data));\r\n      })\r\n      .catch(() => dispatch(fetchIngredientsError()));\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\nexport const purchaseBurgerError = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerError(error));\r\n      });\r\n  };\r\n};\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\nexport const fetchOrdersError = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const fetchOrders = (token, userId) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams =\r\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n    axios\r\n      .get(\"/orders.json\" + queryParams)\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        for (const [id, value] of Object.entries(res.data)) {\r\n          fetchedOrders.push({ ...value, id: id });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersError(error));\r\n      });\r\n  };\r\n};\r\nexport const deleteOrderError = (error) => {\r\n  return {\r\n    type: actionTypes.DELETE_ORDER_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const deleteOrder = (id) => {\r\n  return {\r\n    type: actionTypes.DELETE_ORDER,\r\n    orderId: id,\r\n  };\r\n};\r\nexport const fetchDeleteOrder = (id, token) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(\"/orders/\" + id + \".json?auth=\" + token)\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          dispatch(deleteOrder(id));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(deleteOrderError(error));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancel}>\r\n        CANCEL\r\n      </Button>\r\n      {props.activeContactInfo ? null : (\r\n        <Button btnType=\"Success\" clicked={props.checkoutContinue}>\r\n          CONTINUE\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckoutSummary.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  checkoutCancel: PropTypes.func.isRequired,\r\n  checkoutContinue: PropTypes.func.isRequired,\r\n  activeContactInfo: PropTypes.bool,\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  props.touched && props.invalid ? inputClasses.push(classes.Invalid) : null;\r\n  switch (props.elementType) { \r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((opt) => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayVal}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label} htmlFor=\"\">\r\n        {props.label}\r\n      </label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\nInput.propTypes = {\r\n  label: PropTypes.string,\r\n  elementType: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  changed: PropTypes.func.isRequired,\r\n  invalid: PropTypes.bool,\r\n  touched: PropTypes.bool,\r\n};\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./ContactInfo.css\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport axios from \"../../../axios-orders\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport * as action from \"../../../store/actions/index\";\r\nimport { updateObject, checkValidation } from \"../../../store/utility\";\r\n\r\nclass ContactInfo extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"name\",\r\n          type: \"text\",\r\n          placeholder: \"Your name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 2,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"street\",\r\n          type: \"text\",\r\n          placeholder: \"Your street/app\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"zipCode\",\r\n          type: \"text\",\r\n          placeholder: \"Your zip code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          isNumeric: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      city: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"city\",\r\n          type: \"text\",\r\n          placeholder: \"Your city\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"email\",\r\n          type: \"email\",\r\n          placeholder: \"Your email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayVal: \"Fastest\" },\r\n            { value: \"cheapest\", displayVal: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          valid: true,\r\n        },\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (const formElementId in this.state.orderForm) {\r\n      formData[formElementId] = this.state.orderForm[formElementId].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      userId: this.props.userId,\r\n      orderData: formData,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n  inputChangedHandler = (event, elementId) => {\r\n    const updatedFormElement = updateObject(this.state.orderForm[elementId], {\r\n      value: event.target.value,\r\n      touched: true,\r\n      validation: updateObject(this.state.orderForm[elementId].validation, {\r\n        valid: checkValidation(\r\n          event.target.value,\r\n          this.state.orderForm[elementId].validation\r\n        ),\r\n      }),\r\n    });\r\n    const updatedForm = updateObject(this.state.orderForm, {\r\n      [elementId]: updatedFormElement,\r\n    });\r\n    let formIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        formIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    this.setState({ orderForm: updatedForm, formIsValid: formIsValid });\r\n  };\r\n  render() {\r\n    const formElementsArray = Object.entries(this.state.orderForm);\r\n    let form = (\r\n      <form action=\"\" onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((element) => (\r\n          <Input\r\n            key={element[0]}\r\n            elementType={element[1].elementType}\r\n            elementConfig={element[1].elementConfig}\r\n            value={element[1].value}\r\n            changed={(event) => this.inputChangedHandler(event, element[0])}\r\n            invalid={!element[1].validation.valid}\r\n            touched={element[1].touched}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactInfo}>\r\n        <h4>Enter your Contact Info</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactInfo.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  history: PropTypes.any,\r\n  onOrderBurger: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  token: PropTypes.any,\r\n  userId: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (order, token) =>\r\n      dispatch(action.purchaseBurger(order, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactInfo, axios));\r\n","import React, { Component } from \"react\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactInfo from \"./ContactInfo/ContactInfo\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    activeContactInfo: false,\r\n  };\r\n\r\n  checkoutCancelHandler = () => {\r\n    this.setState({ activeContactInfo: false });\r\n    this.props.history.goBack();\r\n  };\r\n  checkoutContinueHandler = () => {\r\n    this.setState({ activeContactInfo: true });\r\n    this.props.history.replace(\"/checkout/contact-info\");\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchaseRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <>\r\n          {purchaseRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutCancel={this.checkoutCancelHandler}\r\n            checkoutContinue={this.checkoutContinueHandler}\r\n            totalPrice={this.props.totalPrice}\r\n            activeContactInfo={this.state.activeContactInfo}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + \"/contact-info\"}\r\n            component={ContactInfo}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\nCheckout.propTypes = {\r\n  match: PropTypes.any,\r\n  history: PropTypes.any,\r\n  totalPrice: PropTypes.number,\r\n  ingredients: PropTypes.object,\r\n  onInitPurchase: PropTypes.func,\r\n  purchased: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Authorisation.css\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport { countIngredients, updateObject, checkValidation } from \"../../store/utility\";\r\n\r\nclass Authorisation extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"email\",\r\n          type: \"email\",\r\n          placeholder: \"Your email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"password\",\r\n          type: \"password\",\r\n          placeholder: \"Your password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n    },\r\n    formIsValid: false,\r\n    isSingUp: false,\r\n  };\r\n  componentDidMount() {\r\n    if (countIngredients(this.props.ingredients) === 0) {\r\n      this.props.setRiderectPath(\"/\");\r\n    }\r\n  }\r\n  \r\n  inputChangedHandler = (event, elementId) => {\r\n    const updatedFormElement = updateObject(this.state.controls[elementId], {\r\n      value: event.target.value,\r\n      touched: true,\r\n      validation: updateObject(this.state.controls[elementId].validation, {\r\n        valid: checkValidation(\r\n          event.target.value,\r\n          this.state.controls[elementId].validation\r\n        )\r\n      })\r\n    });\r\n    const updatedForm = updateObject(this.state.controls, {\r\n      [elementId]: updatedFormElement\r\n    });\r\n    let formIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        formIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    this.setState({ controls: updatedForm, formIsValid: formIsValid });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.isSingUp\r\n    );\r\n  };\r\n  switchModeHandler = (event) => {\r\n    event.preventDefault();\r\n    this.setState((prevState) => {\r\n      return { isSingUp: !prevState.isSingUp };\r\n    });\r\n  };\r\n  render() {\r\n    const formElementsArray = Object.entries(this.state.controls);\r\n    let form = (\r\n      <form action=\"\" onSubmit={this.submitHandler}>\r\n        <Button btnType=\"SuccessBlue\" clicked={this.switchModeHandler}>\r\n          {this.state.isSingUp ? (\r\n            <div>\r\n              <span className={classes.Dissabled}>SING&nbsp;IN</span>\r\n              &nbsp;/&nbsp;SING&nbsp;UP\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              SING&nbsp;IN&nbsp;/&nbsp;\r\n              <span className={classes.Dissabled}>SING&nbsp;UP</span>\r\n            </div>\r\n          )}\r\n        </Button>\r\n        {formElementsArray.map((element) => (\r\n          <Input\r\n            key={element[0]}\r\n            elementType={element[1].elementType}\r\n            elementConfig={element[1].elementConfig}\r\n            value={element[1].value}\r\n            changed={(event) => this.inputChangedHandler(event, element[0])}\r\n            invalid={!element[1].validation.valid}\r\n            touched={element[1].touched}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          SUBMIT\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p className={classes.ErrorMessage}>\r\n          {this.props.error.message.split(\"_\").join(\" \")}\r\n        </p>\r\n      );\r\n    }\r\n    let authRedirect = null;\r\n    if (this.props.isAuth) {\r\n      authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n    }\r\n    return (\r\n      <div className={classes.Authorisation}>\r\n        {authRedirect}\r\n        {form}\r\n        {errorMessage}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAuthorisation.propTypes = {\r\n  onAuth: PropTypes.func.isRequired,\r\n  setRiderectPath: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  isAuth: PropTypes.bool.isRequired,\r\n  error: PropTypes.object,\r\n  authRedirectPath: PropTypes.string.isRequired,\r\n  ingredients: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuth: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath,\r\n    ingredients: state.burgerBuilder.ingredients,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, passw, isSingUp) =>\r\n      dispatch(actions.authorisation(email, passw, isSingUp)),\r\n    setRiderectPath: (path) => dispatch(actions.setAuthRedirectPath(path)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorisation);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./Order.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledOrder = styled.li`\r\n  &.fade-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(1000px);\r\n  }\r\n`;\r\n\r\nconst Order = (props) => {\r\n  const [disableBtn, setDisableBtn] = useState(false);\r\n  const onClicked = () => {\r\n    setDisableBtn(true);\r\n    props.onFetchDeleteOrders(props.order.id, props.token);\r\n  };\r\n  return (\r\n    <StyledOrder className={classes.Order} key={props.order.id}>\r\n      <div>\r\n        Ingredients:&nbsp;\r\n        {Object.entries(props.order.ingredients).map((ingredient, i) => (\r\n          <div\r\n            className={classes.Ingredient}\r\n            key={i}\r\n          >{`${ingredient[0]} (${ingredient[1]})`}</div>\r\n        ))}\r\n      </div>\r\n      <p>\r\n        <span>\r\n          Price: <strong>{props.order.price.toFixed(2)}&nbsp;$</strong>\r\n        </span>\r\n        <Button btnType=\"Danger\" clicked={onClicked} disabled={disableBtn}>\r\n          Delete\r\n        </Button>\r\n      </p>\r\n    </StyledOrder>\r\n  );\r\n};\r\nOrder.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n  onFetchDeleteOrders: PropTypes.func.isRequired,\r\n  token: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchDeleteOrders: (id,token) => dispatch(actions.fetchDeleteOrder(id,token)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport classes from \"./Orders.css\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n  render() {\r\n    let orders = null;\r\n    if (this.props.loading) {\r\n      orders = <Spinner />;\r\n    }\r\n    if (this.props.orders) {\r\n      orders = this.props.orders.length ? (\r\n        <TransitionGroup component=\"ul\" className={classes.List}>\r\n          {this.props.orders.map((order) => (\r\n            <CSSTransition key={order.id} classNames=\"fade\" timeout={300}>\r\n              <Order order={order} />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <p>You don&apos;t have any orders yet.</p>\r\n      );\r\n    }\r\n    return <div className={classes.Orders}>{orders}</div>;\r\n  }\r\n}\r\nOrders.propTypes = {\r\n  onFetchOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  token: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nconst Logout = (props) => {\r\n  useEffect(() => {\r\n    props.logoutHandler();\r\n  });\r\n  return <Redirect to=\"/\" />;\r\n};\r\nLogout.propTypes = {\r\n  logoutHandler: PropTypes.func.isRequired,\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutHandler: () => dispatch(actions.logout()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport Authorisation from \"./containers/Authorisation/Authorisation\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\nimport Logout from \"./containers/Authorisation/Logout/Logout\";\r\n\r\nfunction App(props) {\r\n  let routs = (\r\n    <Switch>\r\n      <Route path=\"/authorisation\" component={Authorisation} />\r\n      <Route path=\"/\" component={BurgerBuilder} />\r\n    </Switch>\r\n  );\r\n  if (props.isAuth) {\r\n    routs = (\r\n      <Switch>\r\n        <Route path=\"/checkout\" component={Checkout} />\r\n        <Route path=\"/orders\" component={Orders} />\r\n        <Route path=\"/authorisation\" component={Authorisation} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Route path=\"/\" component={BurgerBuilder} />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <BrowserRouter basename=\"/burger-order-react\">\r\n      <Layout>{routs}</Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nApp.propTypes = {\r\n  isAuth: PropTypes.bool.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.token !== null,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(App);\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4.0,\r\n  error: false,\r\n};\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  meat: 1.3,\r\n  cheese: 0.4,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const newPrice =\r\n    (state.totalPrice + INGREDIENT_PRICES[action.ingredientName]).toFixed(2) *\r\n    1;\r\n  const updIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n  };\r\n  const updIngredients = updateObject(state.ingredients, updIngredient);\r\n  const updState = { ingredients: updIngredients, totalPrice: newPrice };\r\n  return updateObject(state, updState);\r\n};\r\nconst removeIngredient = (state, action) => {\r\n  let updatedCount = state.ingredients[action.ingredientName] - 1;\r\n  updatedCount = updatedCount < 0 ? 0 : updatedCount;\r\n  const newPrice =\r\n    updatedCount > 0\r\n      ? (\r\n          state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n        ).toFixed(2) * 1\r\n      : state.totalPrice;\r\n  const updIngredient = {\r\n    [action.ingredientName]: updatedCount,\r\n  };\r\n  const updIngredients = updateObject(state.ingredients, updIngredient);\r\n  const updState = { ingredients: updIngredients, totalPrice: newPrice };\r\n  return updateObject(state, updState);\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT: {\r\n      return addIngredient(state, action);\r\n    }\r\n    case actionTypes.REMOVE_INGREDIENT: {\r\n      return removeIngredient(state, action);\r\n    }\r\n    case actionTypes.SET_INGREDIENTS: {\r\n      return updateObject(state, {\r\n        ingredients: {\r\n          salad: action.ingredients.salad,\r\n          bacon: action.ingredients.bacon,\r\n          cheese: action.ingredients.cheese,\r\n          meat: action.ingredients.meat,\r\n        },\r\n        totalPrice: 4.0,\r\n        error: false,\r\n      });\r\n    }\r\n    case actionTypes.FETCH_INGREDIENTS_ERROR: {\r\n      return updateObject(state, {\r\n        error: true,\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst deleteOrder = (state, action) => {\r\n  const newOrders = state.orders.filter((order) => order.id !== action.orderId);\r\n  return updateObject(state, {\r\n    orders: newOrders,\r\n  });\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT: {\r\n      return updateObject(state, {\r\n        purchased: false,\r\n      });\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS: {\r\n      const newOrder = updateObject(action.orderData, {\r\n        id: action.orderId,\r\n      });\r\n      return updateObject(state, {\r\n        orders: state.orders.concat(newOrder),\r\n        loading: false,\r\n        purchased: true,\r\n      });\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n    case actionTypes.FETCH_ORDERS_START: {\r\n      return updateObject(state, {\r\n        loading: true,\r\n      });\r\n    }\r\n    case actionTypes.FETCH_ORDERS_SUCCESS: {\r\n      return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false,\r\n      });\r\n    }\r\n    case actionTypes.DELETE_ORDER_ERROR:\r\n    case actionTypes.PURCHASE_BURGER_ERROR:\r\n    case actionTypes.FETCH_ORDERS_ERROR: {\r\n      return updateObject(state, {\r\n        loading: false,\r\n      });\r\n    }\r\n    case actionTypes.DELETE_ORDER: {\r\n      return deleteOrder(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: \"/\",\r\n};\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return updateObject(state, {\r\n        loading: true,\r\n        error: null,\r\n      });\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        loading: false,\r\n        error: null,\r\n      });\r\n    case actionTypes.AUTH_ERROR:\r\n      return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n      });\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return updateObject(state, {\r\n        token: null,\r\n        userId: null,\r\n      });\r\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n      return updateObject(state, {\r\n        authRedirectPath: action.path,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport orderReducer from \"./store/reducers/order\";\r\nimport authReducer from \"./store/reducers/authorisation\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}