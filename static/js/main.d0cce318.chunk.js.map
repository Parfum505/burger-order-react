{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","containers/Authorisation/Authorisation.css","components/Navigation/NavItems/NavItems.css","components/Navigation/SideMenu/SideMenu.css","components/UI/Modal/Modal.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavItems/NavItem/NavItem.css","components/UI/Backdrop/Backdrop.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","components/Order/Order.css","containers/Orders/Orders.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Navigation/Logo/Logo.css","assets/images/login.svg","assets/images/logout.svg","components/Navigation/MobileMenuBtn/MobileMenuBtn.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactInfo/ContactInfo.css","hoc/Auxiliary.js","components/Navigation/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/MobileMenuBtn/MobileMenuBtn.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideMenu/SideMenu.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/authorisation.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactInfo/ContactInfo.js","containers/Checkout/Checkout.js","containers/Authorisation/Authorisation.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Authorisation/Logout/Logout.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/authorisation.js","App.js","index.js"],"names":["module","exports","Auxil","props","children","Logo","className","classes","src","burgerLogo","alt","NavItem","to","link","exact","activeClassName","active","connect","state","isAuth","auth","userId","NavItems","LoginIcon","LogoutIcon","MobileMenuBtn","onClick","clicked","React","memo","Toolbar","openMenu","Backdrop","addedClasses","addClass","newClass","push","show","join","closeMenu","SideMenu","Open","Layout","showMobileMenu","closeMobileMenuHandler","setState","openMobileMenuHandler","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","ingredients","addedIngredient","Object","keys","map","ingKey","Array","_","i","key","reduce","arr","item","concat","length","BuildControl","Label","label","Less","remove","disabled","More","add","BuildControls","controls","ingr","charAt","toUpperCase","slice","totalPrice","toFixed","addIngredients","removeIngredients","OrderButton","purchasable","buy","Modal","nextProps","modalClasses","Active","modalClosed","Button","btnType","OrderSummary","ingredientsSummary","entries","style","textTransform","buyCancel","buyContinue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","modalClose","reqInterceptor","interceptors","request","use","respInterceptor","response","resp","eject","message","authorisation","email","password","isSingUp","dispatch","authData","returnSecureToken","url","post","then","data","expirationTime","idToken","localId","expiresIn","setTimeout","catch","authError","BurgerBuilder","buying","buyCancelHandler","buyContinueHandler","onInitPurchase","history","buyHandler","updatePurchaseState","values","total","curr","initIngredientsHandler","orderSummary","burger","textAlign","marginTop","color","fontWeight","addIngredientHandler","removeIngredientHandler","burgerBuilder","ingName","ingredientName","get","CheckoutSummary","checkoutCancel","activeContactInfo","checkoutContinue","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","value","onChange","changed","options","opt","displayVal","htmlFor","ContactInfo","orderForm","name","placeholder","validation","required","minLength","valid","street","zipCode","maxLength","isNumeric","city","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","price","orderData","onOrderBurger","token","inputChangedHandler","elementId","updatedForm","updatedFormElement","target","checkValidation","rules","isValid","trim","test","formElementsArray","form","action","onSubmit","element","loading","id","orderId","purchaseBurgerSuccess","purchaseBurgerError","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","summary","purchaseRedirect","purchased","path","match","component","Authorisation","submitHandler","onAuth","switchModeHandler","prevState","Dissabled","errorMessage","ErrorMessage","split","passw","actions","StyledOrder","styled","li","onFetchDeleteOrders","delete","res","console","log","status","deleteOrder","deleteOrderError","useState","disableBtn","setDisableBtn","Order","Ingredient","Orders","onFetchOrders","orders","TransitionGroup","List","CSSTransition","classNames","timeout","fetchedOrders","fetchOrdersError","logoutHandler","useEffect","updateObject","oldObj","updatedProps","initialState","INGREDIENT_PRICES","salad","bacon","meat","cheese","addIngredient","newPrice","updIngredient","updIngredients","removeIngredient","updatedCount","reducer","newOrders","filter","newOrder","initState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","App","basename","Logout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,SAAW,oCAAoC,OAAS,kCAAkC,OAAS,kCAAkC,KAAO,gCAAgC,OAAS,kCAAkC,MAAQ,iCAAiC,MAAQ,mC,0BCA/UD,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,6BAA6B,KAAO,4BAA4B,KAAO,8B,gBCApJD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,aAAe,6BAA6B,QAAU,0B,gBCApID,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,aAAe,qCAAqC,UAAY,oC,mBCAxID,EAAOC,QAAU,CAAC,SAAW,4BAA4B,UAAY,+B,gBCArED,EAAOC,QAAU,CAAC,SAAW,4BAA4B,KAAO,wBAAwB,KAAO,0B,gBCA/FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,QAAU,wBAAwB,OAAS,yB,iBCA3FD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,yB,iBCA7DD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,2B,kBCA/DD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,YAAc,iC,gBCAvED,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,YAAc,oCAAoC,OAAS,iC,gBCAnID,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,+B,gBCArID,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,WAAa,6B,gBCA7DD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,KAAO,wB,4BCA1DD,EAAOC,QAAU,CAAC,QAAU,2B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,sB,kBCDzBD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCC3CD,EAAOC,QAAU,CAAC,cAAgB,wC,gBCAlCD,EAAOC,QAAU,CAAC,OAAS,0B,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,MAAQ,wBAAwB,MAAQ,0B,gBCA5FD,EAAOC,QAAU,CAAC,gBAAkB,4C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,oC,oMCCjBC,EAFD,SAACC,GAAD,OAAWA,EAAMC,U,oECShBC,EALF,kBACX,yBAAKC,UAAWC,IAAQF,MACtB,yBAAKG,IAAKC,IAAYC,IAAI,W,iDCYfC,EAbC,SAACR,GAAD,OACd,wBAAIG,UAAWC,IAAQI,SACrB,kBAAC,IAAD,CAASC,GAAIT,EAAMU,KAAMC,OAAK,EAACC,gBAAiBR,IAAQS,QACrDb,EAAMC,Y,kCCuBEa,eALS,SAACC,GACvB,MAAO,CACLC,OAA8B,OAAtBD,EAAME,KAAKC,UAGRJ,EAvBE,SAACd,GAAD,OACf,wBAAIG,UAAWC,IAAQe,UACrB,kBAAC,EAAD,CAAST,KAAK,KAAd,kBACCV,EAAMgB,OAAS,kBAAC,EAAD,CAASN,KAAK,WAAd,UAA2C,KAC1DV,EAAMgB,OACL,kBAAC,EAAD,CAASN,KAAK,WACZ,yBAAKP,UAAWC,IAAQgB,UAAWf,IAAKgB,IAAYd,IAAI,UAG1D,kBAAC,EAAD,CAASG,KAAK,kBACZ,yBAAKP,UAAWC,IAAQgB,UAAWf,IAAKe,IAAWb,IAAI,c,iBCHhDe,EAXO,SAACtB,GAAD,OACpB,yBAAKG,UAAWC,IAAQkB,cAAeC,QAASvB,EAAMwB,SACpD,qCACA,qCACA,uCCcWC,MAAMC,MAfL,SAAC1B,GAAD,OACd,4BAAQG,UAAWC,IAAQuB,SACzB,kBAAC,EAAD,CAAeH,QAASxB,EAAM4B,WAC9B,yBAAKzB,UAAWC,IAAQF,MACtB,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,W,0CCQS2B,EAlBE,SAAC7B,GAChB,IAAI8B,EAAe,CAAC1B,IAAQyB,UAC5B,GAAI7B,EAAM+B,SAAU,CAAC,IAAD,gBACG/B,EAAM+B,UADT,IAClB,2BAAqC,CAAC,IAA7BC,EAA4B,QACnCF,EAAaG,KAAK7B,IAAQ4B,KAFV,+BAKpB,OAAOhC,EAAMkC,KACX,yBAAK/B,UAAW2B,EAAaK,KAAK,KAAMZ,QAASvB,EAAMwB,UACrD,MCuBSC,MAAMC,MA5BJ,SAAC1B,GAChB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE+B,SAAU,CAAC,eACXG,KAAMlC,EAAMkC,KACZV,QAASxB,EAAMoC,YAEjB,yBACEjC,UAAW,CAACC,IAAQiC,SAAUrC,EAAMkC,KAAO9B,IAAQkC,KAAO,MAAMH,KAC9D,KAEFZ,QAASvB,EAAMoC,WAEf,yBAAKjC,UAAWC,IAAQF,MACtB,kBAAC,EAAD,OAEF,6BACE,kBAAC,EAAD,YCOKqC,E,4MAzBbxB,MAAQ,CACNyB,gBAAgB,G,EAElBC,uBAAyB,WACvB,EAAKC,SAAS,CAAEF,gBAAgB,K,EAElCG,sBAAwB,WACtB,EAAKD,SAAS,CAAEF,gBAAgB,K,uDAGhC,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASZ,SAAUgB,KAAKD,wBACxB,kBAAC,EAAD,CACET,KAAMU,KAAK7B,MAAMyB,eACjBJ,UAAWQ,KAAKH,yBAElB,0BAAMtC,UAAWC,IAAQyC,SAAUD,KAAK5C,MAAMC,e,GAlBjC6C,a,yBCiCNC,EApCU,SAAC/C,GACtB,IAAIgD,EAAa,KAEjB,OAAQhD,EAAMiD,MACV,IAAK,eACDD,EAAa,yBAAK7C,UAAWC,IAAQ8C,cACzC,MACA,IAAK,YACDF,EACI,yBAAK7C,UAAWC,IAAQ+C,UACpB,yBAAKhD,UAAWC,IAAQgD,SACxB,yBAAKjD,UAAWC,IAAQiD,UAEhC,MACJ,IAAK,OACDL,EAAa,yBAAK7C,UAAWC,IAAQkD,OACrC,MACJ,IAAK,SACDN,EAAa,yBAAK7C,UAAWC,IAAQmD,SACrC,MACJ,IAAK,QACDP,EAAa,yBAAK7C,UAAWC,IAAQoD,QACrC,MACJ,IAAK,QACDR,EAAa,yBAAK7C,UAAWC,IAAQqD,QACrC,MACJ,QACIT,EAAa,KAErB,OAAOA,G,iBCJIU,EAxBA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACZC,EAAkBC,OAAOC,KAAKH,GAC/BI,KAAI,SAACC,GACJ,OAAO,YAAIC,MAAMN,EAAYK,KAAUD,KAAI,SAACG,EAAGC,GAC7C,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAASG,EAAGlB,KAAMe,UAGnDK,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,KACjB,IAIL,OAHKX,EAAgBa,SACnBb,EAAkB,4DAGlB,yBAAKzD,UAAWC,IAAQsD,QACtB,kBAAC,EAAD,CAAkBT,KAAK,cACtBW,EACD,kBAAC,EAAD,CAAkBX,KAAK,mB,qCCFdyB,GAhBM,SAAC1E,GAAD,OACjB,yBAAKG,UAAWC,KAAQsE,cACpB,yBAAKvE,UAAWC,KAAQuE,OAAQ3E,EAAM4E,OACtC,4BAAQzE,UAAWC,KAAQyE,KACnBtD,QAASvB,EAAM8E,OACfC,SAAU/E,EAAM+E,UAFxB,QAGA,4BAAQ5E,UAAWC,KAAQ4E,KACnBzD,QAASvB,EAAMiF,KADvB,UCmCOC,GAxCO,SAAClF,GACrB,IAAMmF,EAAWtB,OAAOC,KAAK9D,EAAM2D,aAAaI,KAAI,SAACqB,GACnD,MAAO,CACLR,MAAOQ,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GACjDtC,KAAMmC,MAGV,OACE,yBAAKjF,UAAWC,IAAQ8E,eACtB,6CACiB,gCAASlF,EAAMwF,WAAWC,QAAQ,IADnD,SAGCN,EAASpB,KAAI,SAACQ,GAAD,OACZ,kBAAC,GAAD,CACEH,IAAG,eAAUG,EAAKK,OAClBA,MAAOL,EAAKK,MACZK,IAAK,kBAAMjF,EAAM0F,eAAenB,EAAKtB,OACrC6B,OAAQ,kBAAM9E,EAAM2F,kBAAkBpB,EAAKtB,OAC3C8B,SAAU/E,EAAM2D,YAAYY,EAAKtB,OAAS,OAG9C,4BACE9C,UAAWC,IAAQwF,YACnBb,UAAW/E,EAAM6F,YACjBtE,QAASvB,EAAM8F,KAHjB,e,oBCaSC,G,oLAhCSC,GACpB,OACEA,EAAU9D,OAASU,KAAK5C,MAAMkC,MAC9B8D,EAAU/F,WAAa2C,KAAK5C,MAAMC,W,+BAKpC,IAAIgG,EAAe,CAAC7F,KAAQ2F,OAI5B,GAHInD,KAAK5C,MAAMkC,MACb+D,EAAahE,KAAK7B,KAAQ8F,QAExBtD,KAAK5C,MAAM8B,aAAc,CAAC,IAAD,gBACNc,KAAK5C,MAAM8B,cADL,IAC3B,2BAA8C,CAAC,IAAtCC,EAAqC,QAC5CkE,EAAahE,KAAK7B,KAAQ2B,KAFD,+BAM7B,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUG,KAAMU,KAAK5C,MAAMkC,KAAMV,QAASoB,KAAK5C,MAAMmG,cACrD,yBAAKhG,UAAW8F,EAAa9D,KAAK,MAAOS,KAAK5C,MAAMC,e,GAtBxC6C,a,oBCaLsD,GAfA,SAACpG,GAAD,OACb,4BACE+E,SAAU/E,EAAM+E,SAChB5E,UAAW,CAACC,KAAQgG,OAAQhG,KAAQJ,EAAMqG,UAAUlE,KAAK,KACzDZ,QAASvB,EAAMwB,SAEdxB,EAAMC,WCgCIqG,GArCM,SAACtG,GACpB,IAAMuG,EAAqB1C,OAAO2C,QAAQxG,EAAM2D,aAAaI,KAC3D,SAACQ,EAAMJ,GACL,OACE,wBAAIC,IAAKD,GACP,0BAAMsC,MAAO,CAAEC,cAAe,eAAiBnC,EAAK,IADtD,QAEGA,EAAK,OAMd,OACE,kBAAC,EAAD,KACE,0CACA,iFACA,4BAAKgC,GACL,2BACE,gDAAsBvG,EAAMwF,WAAWC,QAAQ,GAA/C,UAEF,oDACA,kBAAC,GAAD,CAAQY,QAAQ,SAAS7E,QAASxB,EAAM2G,WAAxC,UAGA,kBAAC,GAAD,CAAQN,QAAQ,UAAU7E,QAASxB,EAAM4G,aAAzC,c,oBCvBSC,GAJEC,KAAMC,OAAO,CAC1BC,QAAS,+C,oBCIEC,GAJC,kBACZ,yBAAK9G,UAAWC,KAAQ8G,QAAxB,eC+CWC,GA/CU,SAACC,EAAkBN,GAC1C,mNACE/F,MAAQ,CACNsG,MAAO,MAFX,EA8BEC,WAAa,WACX,EAAK5E,SAAS,CAAE2E,MAAO,QA/B3B,0EAK+B,IAAD,OAC1BzE,KAAK2E,eAAiBT,EAAMU,aAAaC,QAAQC,KAC/C,SAACD,GAEC,OADA,EAAK/E,SAAS,CAAE2E,MAAO,OAChBI,KAET,SAACJ,GACC,EAAK3E,SAAS,CAAE2E,MAAOA,OAG3BzE,KAAK+E,gBAAkBb,EAAMU,aAAaI,SAASF,KACjD,SAACG,GAEC,OADA,EAAKnF,SAAS,CAAE2E,MAAO,OAChBQ,KAET,SAACR,GACC,EAAK3E,SAAS,CAAE2E,MAAOA,SArB/B,6CA0BIP,EAAMU,aAAaC,QAAQK,MAAMlF,KAAK2E,gBACtCT,EAAMU,aAAaI,SAASE,MAAMlF,KAAK+E,mBA3B3C,+BAkCI,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAOzF,KAAMU,KAAK7B,MAAMsG,MAAOlB,YAAavD,KAAK0E,YAC9C1E,KAAK7B,MAAMsG,MAAQzE,KAAK7B,MAAMsG,MAAMU,QAAU,MAEjD,kBAACX,EAAqBxE,KAAK5C,YAvCnC,GAA+B8C,c,kBC4BpBkF,GAAgB,SAACC,EAAOC,EAAUC,GAC7C,OAAO,SAACC,GACNA,EA/BK,CACLnF,KCYsB,eDmBtB,IAAMoF,EAAW,CACfJ,MAAOA,EACPC,SAAUA,EACVI,mBAAmB,GAEjBC,EACF,wGACGJ,IACHI,EACE,qHAEJzB,KACG0B,KAAKD,EAAKF,GACVI,MAAK,SAACb,GAzCO,IAACc,EAkBKC,EAwBlBP,EAzCC,CACLnF,KCQwB,eDPxB2F,SAHiBF,EA0CQd,EAASc,MAvCpBE,QACd1H,OAAQwH,EAAKG,UAuCTT,GAzBkBO,EAyBQf,EAASc,KAAKI,UAxBvC,SAACV,GACNW,YAAW,WACTX,EAPG,CACLnF,KCHuB,kBDUH,IAAjB0F,SAuBAK,OAAM,SAAC3B,GACNe,EAvCU,SAACf,GACjB,MAAO,CACLpE,KCEsB,aDDtBoE,MAAOA,GAoCM4B,CAAU5B,EAAMO,SAASc,KAAKrB,aEzCzC6B,G,4MACJnI,MAAQ,CACNoI,QAAQ,G,EAOVC,iBAAmB,WACjB,EAAK1G,SAAS,CAAEyG,QAAQ,K,EAE1BE,mBAAqB,WACnB,EAAKrJ,MAAMsJ,iBACX,EAAKtJ,MAAMuJ,QAAQtH,KAAK,c,EAE1BuH,WAAa,WACX,EAAK9G,SAAS,CAAEyG,QAAQ,K,EAE1BM,oBAAsB,SAAC9F,GAKrB,OAJYE,OAAO6F,OAAO/F,GAAaU,QACrC,SAACsF,EAAOC,GAAR,OAAiBD,EAAQC,IACzB,GAEW,G,kEAlBbhH,KAAK5C,MAAM6J,2B,+BAsBX,IAOEC,EAAe,KACbC,EAASnH,KAAK5C,MAAMqH,MACtB,uBAAGZ,MATc,CACjBuD,UAAW,SACXC,UAAW,GACXC,MAAO,MACPC,WAAY,SAKZ,gCAEA,kBAAC,GAAD,MA0BF,OAxBIvH,KAAK5C,MAAM2D,cACboG,EACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQpG,YAAaf,KAAK5C,MAAM2D,cAChC,kBAAC,GAAD,CACE+B,eAAgB9C,KAAK5C,MAAMoK,qBAC3BzE,kBAAmB/C,KAAK5C,MAAMqK,wBAC9B1G,YAAaf,KAAK5C,MAAM2D,YACxB6B,WAAY5C,KAAK5C,MAAMwF,WACvBK,YAAajD,KAAK6G,oBAAoB7G,KAAK5C,MAAM2D,aACjDmC,IAAKlD,KAAK4G,cAIhBM,EACE,kBAAC,GAAD,CACEnG,YAAaf,KAAK5C,MAAM2D,YACxBgD,UAAW/D,KAAKwG,iBAChBxC,YAAahE,KAAKyG,mBAClB7D,WAAY5C,KAAK5C,MAAMwF,cAM3B,kBAAC,EAAD,KACE,kBAAC,GAAD,CACE1D,aAlCW,GAmCXI,KAAMU,KAAK7B,MAAMoI,OACjBhD,YAAavD,KAAKwG,kBAEjBU,GAEFC,O,GA1EmBjH,aA0GbhC,gBAhBS,SAACC,GACvB,MAAO,CACL4C,YAAa5C,EAAMuJ,cAAc3G,YACjC6B,WAAYzE,EAAMuJ,cAAc9E,WAChC6B,MAAOtG,EAAMuJ,cAAcjD,UAGJ,SAACe,GAC1B,MAAO,CACLgC,qBAAsB,SAACG,GAAD,OAAanC,EC5G9B,CACLnF,KFL0B,iBEM1BuH,eD0GkED,KAClEF,wBAAyB,SAACE,GAAD,OACvBnC,ECxGG,CACLnF,KFV6B,oBEW7BuH,eDsGoCD,KACpCV,uBAAwB,kBAAMzB,GCxFzB,SAACA,GACNtB,GACG2D,IAAI,8DACJhC,MAAK,SAACZ,GACLO,EAfC,CACLnF,KFf2B,kBEgB3BU,YAa4BkE,EAAKa,UAE9BM,OAAM,kBAAMZ,EAXV,CACLnF,KFpBmC,mCCiHnCqG,eAAgB,kBAAMlB,EEjFjB,CACLnF,KH5ByB,sBC+GdnC,CAGbqG,GAAiB+B,GAAepC,K,oBGtFnB4D,GA9BS,SAAC1K,GACvB,OACE,yBAAKG,UAAWC,KAAQsK,iBACtB,uDACA,6BACE,kBAAC,EAAD,CAAQ/G,YAAa3D,EAAM2D,eAE7B,2BACE,gDAAsB3D,EAAMwF,WAAWC,QAAQ,GAA/C,UAEF,kBAAC,GAAD,CAAQY,QAAQ,SAAS7E,QAASxB,EAAM2K,gBAAxC,UAGC3K,EAAM4K,kBAAoB,KACzB,kBAAC,GAAD,CAAQvE,QAAQ,UAAU7E,QAASxB,EAAM6K,kBAAzC,c,iDCqDOC,GArED,SAAC9K,GACb,IAAI+K,EAAe,KACbC,EAAe,CAAC5K,KAAQ6K,cAE9B,OADAjL,EAAMkL,SAAWlL,EAAMmL,SAAUH,EAAa/I,KAAK7B,KAAQgL,SACnDpL,EAAMqL,aACZ,IAAK,QACHN,EACE,yCACE5K,UAAW6K,EAAa7I,KAAK,MACzBnC,EAAMsL,cAFZ,CAGEC,MAAOvL,EAAMuL,MACbC,SAAUxL,EAAMyL,WAGpB,MACF,IAAK,WACHV,EACE,4CACE5K,UAAW6K,EAAa7I,KAAK,MACzBnC,EAAMsL,cAFZ,CAGEC,MAAOvL,EAAMuL,MACbC,SAAUxL,EAAMyL,WAGpB,MACF,IAAK,SACHV,EACE,4BACE5K,UAAW6K,EAAa7I,KAAK,KAC7BoJ,MAAOvL,EAAMuL,MACbC,SAAUxL,EAAMyL,SAEfzL,EAAMsL,cAAcI,QAAQ3H,KAAI,SAAC4H,GAAD,OAC/B,4BAAQvH,IAAKuH,EAAIJ,MAAOA,MAAOI,EAAIJ,OAChCI,EAAIC,gBAKb,MACF,QACEb,EACE,yCACE5K,UAAW6K,EAAa7I,KAAK,MACzBnC,EAAMsL,cAFZ,CAGEC,MAAOvL,EAAMuL,MACbC,SAAUxL,EAAMyL,WAKxB,OACE,yBAAKtL,UAAWC,KAAQ0K,OACtB,2BAAO3K,UAAWC,KAAQuE,MAAOkH,QAAQ,IACtC7L,EAAM4E,OAERmG,ICjDDe,G,4MACJ/K,MAAQ,CACNgL,UAAW,CACTC,KAAM,CACJX,YAAa,QACbC,cAAe,CACbU,KAAM,OACN/I,KAAM,OACNgJ,YAAa,aAEfV,MAAO,GACPW,WAAY,CACVC,UAAU,EACVC,UAAW,EACXC,OAAO,GAETnB,SAAS,GAEXoB,OAAQ,CACNjB,YAAa,QACbC,cAAe,CACbU,KAAM,SACN/I,KAAM,OACNgJ,YAAa,mBAEfV,MAAO,GACPW,WAAY,CACVC,UAAU,EACVE,OAAO,GAETnB,SAAS,GAEXqB,QAAS,CACPlB,YAAa,QACbC,cAAe,CACbU,KAAM,UACN/I,KAAM,OACNgJ,YAAa,iBAEfV,MAAO,GACPW,WAAY,CACVC,UAAU,EACVC,UAAW,EACXI,UAAW,EACXC,WAAW,EACXJ,OAAO,GAETnB,SAAS,GAEXwB,KAAM,CACJrB,YAAa,QACbC,cAAe,CACbU,KAAM,OACN/I,KAAM,OACNgJ,YAAa,aAEfV,MAAO,GACPW,WAAY,CACVC,UAAU,EACVE,OAAO,GAETnB,SAAS,GAEXjD,MAAO,CACLoD,YAAa,QACbC,cAAe,CACbU,KAAM,QACN/I,KAAM,QACNgJ,YAAa,cAEfV,MAAO,GACPW,WAAY,CACVC,UAAU,EACVQ,SAAS,EACTN,OAAO,GAETnB,SAAS,GAEX0B,eAAgB,CACdvB,YAAa,SACbC,cAAe,CACbI,QAAS,CACP,CAAEH,MAAO,UAAWK,WAAY,WAChC,CAAEL,MAAO,WAAYK,WAAY,cAGrCL,MAAO,GACPW,WAAY,CACVG,OAAO,KAIbQ,aAAa,G,EAEfC,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAMC,KAAiB,EAAKnM,MAAMgL,UACrCkB,EAASC,GAAiB,EAAKnM,MAAMgL,UAAUmB,GAAe3B,MAEhE,IAAM4B,EAAQ,CACZxJ,YAAa,EAAK3D,MAAM2D,YACxByJ,MAAO,EAAKpN,MAAMwF,WAClB6H,UAAWJ,GAEb,EAAKjN,MAAMsN,cAAcH,EAAO,EAAKnN,MAAMuN,Q,EAuB7CC,oBAAsB,SAACT,EAAOU,GAC5B,IAAMC,EAAW,gBAAQ,EAAK3M,MAAMgL,WAC9B4B,EAAkB,gBAAQD,EAAYD,IAC5CE,EAAmBpC,MAAQwB,EAAMa,OAAOrC,MACxCoC,EAAmBzC,SAAU,EAC7ByC,EAAmBzB,WAAWG,MAAQ,EAAKwB,gBACzCF,EAAmBpC,MACnBoC,EAAmBzB,YAErBwB,EAAYD,GAAaE,EACzB,IAAId,GAAc,EAClB,IAAK,IAAMY,KAAaC,EAClBA,EAAYD,GAAWvB,aACzBW,EAAca,EAAYD,GAAWvB,WAAWG,OAASQ,GAG7D,EAAKnK,SAAS,CAAEqJ,UAAW2B,EAAab,YAAaA,K,8DArCvCtB,EAAOuC,GACrB,IAAIC,GAAU,EAUd,GATID,EAAM3B,WACR4B,EAA2B,KAAjBxC,EAAMyC,QAAiBD,GAE/BD,EAAM1B,YACR2B,EAAUxC,EAAM9G,QAAUqJ,EAAM1B,WAAa2B,GAE3CD,EAAMtB,YACRuB,EAAUxC,EAAM9G,QAAUqJ,EAAMtB,WAAauB,GAE3CD,EAAMnB,QAAS,CAEjBoB,EADgB,wIACEE,KAAK1C,IAAUwC,EAEnC,GAAID,EAAMrB,UAAW,CAEnBsB,EADgB,QACEE,KAAK1C,IAAUwC,EAEnC,OAAOA,I,+BAoBC,IAAD,OACDG,EAAoBrK,OAAO2C,QAAQ5D,KAAK7B,MAAMgL,WAChDoC,EACF,0BAAMC,OAAO,GAAGC,SAAUzL,KAAKkK,cAC5BoB,EAAkBnK,KAAI,SAACuK,GAAD,OACrB,kBAAC,GAAD,CACElK,IAAKkK,EAAQ,GACbjD,YAAaiD,EAAQ,GAAGjD,YACxBC,cAAegD,EAAQ,GAAGhD,cAC1BC,MAAO+C,EAAQ,GAAG/C,MAClBE,QAAS,SAACsB,GAAD,OAAW,EAAKS,oBAAoBT,EAAOuB,EAAQ,KAC5DnD,SAAUmD,EAAQ,GAAGpC,WAAWG,MAChCnB,QAASoD,EAAQ,GAAGpD,aAGxB,kBAAC,GAAD,CAAQ7E,QAAQ,UAAUtB,UAAWnC,KAAK7B,MAAM8L,aAAhD,UAQJ,OAHIjK,KAAK5C,MAAMuO,UACbJ,EAAO,kBAAC,GAAD,OAGP,yBAAKhO,UAAWC,KAAQ0L,aACtB,uDACCqC,O,GA5KiBrL,aAuMXhC,gBAbS,SAACC,GACvB,MAAO,CACL4C,YAAa5C,EAAMuJ,cAAc3G,YACjC6B,WAAYzE,EAAMuJ,cAAc9E,WAChC+I,QAASxN,EAAMoM,MAAMoB,QACrBhB,MAAOxM,EAAME,KAAKsM,UAGK,SAACnF,GAC1B,MAAO,CACLkF,cAAe,SAACH,EAAOI,GAAR,OAAkBnF,EH1LP,SAACiF,EAAWE,GACxC,OAAO,SAACnF,GACNA,EANK,CACLnF,KHbiC,0BGmBjC6D,GACG0B,KAAK,qBAAuB+E,EAAOF,GACnC5E,MAAK,SAACb,GACLQ,EAxB6B,SAACoG,EAAInB,GACxC,MAAO,CACLpK,KHEmC,0BGDnCwL,QAASD,EACTnB,UAAWA,GAoBEqB,CAAsB9G,EAASc,KAAKsD,KAAMqB,OAEpDrE,OAAM,SAAC3B,GACNe,EApB2B,SAACf,GAClC,MAAO,CACLpE,KHNiC,wBGOjCoE,MAAOA,GAiBMsH,CAAoBtH,QGiLS+G,CAAsBjB,EAAOI,QAG5DzM,CAGbqG,GAAiB2E,GAAahF,KC9M1B8H,G,4MACJ7N,MAAQ,CACN6J,mBAAmB,G,EAGrBiE,sBAAwB,WACtB,EAAKnM,SAAS,CAAEkI,mBAAmB,IACnC,EAAK5K,MAAMuJ,QAAQuF,U,EAErBC,wBAA0B,WACxB,EAAKrM,SAAS,CAAEkI,mBAAmB,IACnC,EAAK5K,MAAMuJ,QAAQyF,QAAQ,2B,uDAI3B,IAAIC,EAAU,kBAAC,KAAD,CAAUxO,GAAG,MAC3B,GAAImC,KAAK5C,MAAM2D,YAAa,CAC1B,IAAMuL,EAAmBtM,KAAK5C,MAAMmP,UAClC,kBAAC,KAAD,CAAU1O,GAAG,MACX,KACJwO,EACE,oCACGC,EACD,kBAAC,GAAD,CACEvL,YAAaf,KAAK5C,MAAM2D,YACxBgH,eAAgB/H,KAAKiM,sBACrBhE,iBAAkBjI,KAAKmM,wBACvBvJ,WAAY5C,KAAK5C,MAAMwF,WACvBoF,kBAAmBhI,KAAK7B,MAAM6J,oBAEhC,kBAAC,KAAD,CACEwE,KAAMxM,KAAK5C,MAAMqP,MAAMD,KAAO,gBAC9BE,UAAWxD,MAKnB,OAAOmD,M,GArCYnM,aAyDRhC,gBARS,SAACC,GACvB,MAAO,CACL4C,YAAa5C,EAAMuJ,cAAc3G,YACjC6B,WAAYzE,EAAMuJ,cAAc9E,WAChC2J,UAAWpO,EAAMoM,MAAMgC,aAIZrO,CAAyB8N,I,oBCvDlCW,G,4MACJxO,MAAQ,CACNoE,SAAU,CACR8C,MAAO,CACLoD,YAAa,QACbC,cAAe,CACbU,KAAM,QACN/I,KAAM,QACNgJ,YAAa,cAEfV,MAAO,GACPW,WAAY,CACVC,UAAU,EACVQ,SAAS,EACTN,OAAO,GAETnB,SAAS,GAEXhD,SAAU,CACRmD,YAAa,QACbC,cAAe,CACbU,KAAM,WACN/I,KAAM,WACNgJ,YAAa,iBAEfV,MAAO,GACPW,WAAY,CACVC,UAAU,EACVC,UAAW,EACXC,OAAO,GAETnB,SAAS,IAGb2B,aAAa,EACb1E,UAAU,G,EAuBZqF,oBAAsB,SAACT,EAAOU,GAC5B,IAAMC,EAAW,gBAAQ,EAAK3M,MAAMoE,UAC9BwI,EAAkB,gBAAQD,EAAYD,IAC5CE,EAAmBpC,MAAQwB,EAAMa,OAAOrC,MACxCoC,EAAmBzC,SAAU,EAC7ByC,EAAmBzB,WAAWG,MAAQ,EAAKwB,gBACzCF,EAAmBpC,MACnBoC,EAAmBzB,YAErBwB,EAAYD,GAAaE,EACzB,IAAId,GAAc,EAClB,IAAK,IAAMY,KAAaC,EAClBA,EAAYD,GAAWvB,aACzBW,EAAca,EAAYD,GAAWvB,WAAWG,OAASQ,GAG7D,EAAKnK,SAAS,CAAEyC,SAAUuI,EAAab,YAAaA,K,EAEtD2C,cAAgB,SAACzC,GACfA,EAAMC,iBACN,EAAKhN,MAAMyP,OACT,EAAK1O,MAAMoE,SAAS8C,MAAMsD,MAC1B,EAAKxK,MAAMoE,SAAS+C,SAASqD,MAC7B,EAAKxK,MAAMoH,W,EAGfuH,kBAAoB,SAAC3C,GACnBA,EAAMC,iBACN,EAAKtK,UAAS,SAACiN,GACb,MAAO,CAAExH,UAAWwH,EAAUxH,c,8DAlDlBoD,EAAOuC,GACrB,IAAIC,GAAU,EAUd,GATID,EAAM3B,WACR4B,EAA2B,KAAjBxC,EAAMyC,QAAiBD,GAE/BD,EAAM1B,YACR2B,EAAUxC,EAAM9G,QAAUqJ,EAAM1B,WAAa2B,GAE3CD,EAAMtB,YACRuB,EAAUxC,EAAM9G,QAAUqJ,EAAMtB,WAAauB,GAE3CD,EAAMnB,QAAS,CAEjBoB,EADgB,wIACEE,KAAK1C,IAAUwC,EAEnC,GAAID,EAAMrB,UAAW,CAEnBsB,EADgB,QACEE,KAAK1C,IAAUwC,EAEnC,OAAOA,I,+BAkCC,IAAD,OACDG,EAAoBrK,OAAO2C,QAAQ5D,KAAK7B,MAAMoE,UAChDgJ,EACF,0BAAMC,OAAO,GAAGC,SAAUzL,KAAK4M,eAC7B,kBAAC,GAAD,CAAQnJ,QAAQ,cAAc7E,QAASoB,KAAK8M,mBACzC9M,KAAK7B,MAAMoH,SACV,6BACE,0BAAMhI,UAAWC,KAAQwP,WAAzB,UADF,mBAKA,+CAEE,0BAAMzP,UAAWC,KAAQwP,WAAzB,YAIL1B,EAAkBnK,KAAI,SAACuK,GAAD,OACrB,kBAAC,GAAD,CACElK,IAAKkK,EAAQ,GACbjD,YAAaiD,EAAQ,GAAGjD,YACxBC,cAAegD,EAAQ,GAAGhD,cAC1BC,MAAO+C,EAAQ,GAAG/C,MAClBE,QAAS,SAACsB,GAAD,OAAW,EAAKS,oBAAoBT,EAAOuB,EAAQ,KAC5DnD,SAAUmD,EAAQ,GAAGpC,WAAWG,MAChCnB,QAASoD,EAAQ,GAAGpD,aAGxB,kBAAC,GAAD,CAAQ7E,QAAQ,UAAUtB,UAAWnC,KAAK7B,MAAM8L,aAAhD,WAKAjK,KAAK5C,MAAMuO,UACbJ,EAAO,kBAAC,GAAD,OAET,IAAI0B,EAAe,KAQnB,OAPIjN,KAAK5C,MAAMqH,QACbwI,EACE,uBAAG1P,UAAWC,KAAQ0P,cACnBlN,KAAK5C,MAAMqH,MAAMU,QAAQgI,MAAM,KAAK5N,KAAK,OAK9C,yBAAKhC,UAAWC,KAAQmP,eACrBpB,EACA0B,O,GAzImB/M,aAiKbhC,gBAZS,SAACC,GACvB,MAAO,CACLwN,QAASxN,EAAME,KAAKsN,QACpBlH,MAAOtG,EAAME,KAAKoG,UAGK,SAACe,GAC1B,MAAO,CACLqH,OAAQ,SAACxH,EAAO+H,EAAO7H,GAAf,OACNC,EAAS6H,GAAsBhI,EAAO+H,EAAO7H,QAGpCrH,CAA6CyO,I,4VClK5D,IAAMW,G,MAAcC,EAAOC,GAAV,MA+DFtP,gBAVS,SAACC,GACvB,MAAO,CACLwM,MAAOxM,EAAME,KAAKsM,UAGK,SAACnF,GAC1B,MAAO,CACLiI,oBAAqB,SAAC7B,EAAGjB,GAAJ,OAAcnF,ENiBP,SAACoG,EAAIjB,GACnC,OAAO,SAACnF,GACNtB,GACGwJ,OAAO,WAAa9B,EAAK,cAAgBjB,GACzC9E,MAAK,SAAC8H,GACLC,QAAQC,IAAIF,GACM,KAAdA,EAAIG,QACNtI,EAbiB,SAACoG,GAC1B,MAAO,CACLvL,KHnEwB,eGoExBwL,QAASD,GAUMmC,CAAYnC,OAGxBxF,OAAM,SAAC3B,GACNe,EAvBwB,SAACf,GAC/B,MAAO,CACLpE,KH5D8B,qBG6D9BoE,MAAOA,GAoBMuJ,CAAiBvJ,QM5Bc4I,CAAyBzB,EAAGjB,QAG7DzM,EA3CD,SAACd,GAAW,IAAD,EACa6Q,oBAAS,GADtB,oBAChBC,EADgB,KACJC,EADI,KAMvB,OACE,kBAACb,GAAD,CAAa/P,UAAWC,KAAQ4Q,MAAO5M,IAAKpE,EAAMmN,MAAMqB,IACtD,gDAEG3K,OAAO2C,QAAQxG,EAAMmN,MAAMxJ,aAAaI,KAAI,SAACf,EAAYmB,GAAb,OAC3C,yBACEhE,UAAWC,KAAQ6Q,WACnB7M,IAAKD,GAFP,UAGKnB,EAAW,GAHhB,aAGuBA,EAAW,GAHlC,UAMJ,2BACE,wCACS,gCAAShD,EAAMmN,MAAMC,MAAM3H,QAAQ,GAAnC,UAET,kBAAC,GAAD,CAAQY,QAAQ,SAAS7E,QAnBb,WAChBuP,GAAc,GACd/Q,EAAMqQ,oBAAoBrQ,EAAMmN,MAAMqB,GAAIxO,EAAMuN,QAiBCxI,SAAU+L,GAAvD,e,sCCrCFI,G,kLAEFtO,KAAK5C,MAAMmR,cAAcvO,KAAK5C,MAAMuN,S,+BAGpC,IAAI6D,EAAS,KAiBb,OAhBIxO,KAAK5C,MAAMuO,UACb6C,EAAS,kBAAC,GAAD,OAEPxO,KAAK5C,MAAMoR,SACbA,EAASxO,KAAK5C,MAAMoR,OAAO3M,OACzB,kBAAC4M,GAAA,EAAD,CAAiB/B,UAAU,KAAKnP,UAAWC,KAAQkR,MAChD1O,KAAK5C,MAAMoR,OAAOrN,KAAI,SAACoJ,GAAD,OACrB,kBAACoE,GAAA,EAAD,CAAenN,IAAK+I,EAAMqB,GAAIgD,WAAW,OAAOC,QAAS,KACvD,kBAAC,GAAD,CAAOtE,MAAOA,SAKpB,8DAGG,yBAAKhN,UAAWC,KAAQ8Q,QAASE,O,GAtBvBtO,aA2CNhC,gBAZS,SAACC,GACvB,MAAO,CACLqQ,OAAQrQ,EAAMoM,MAAMiE,OACpB7C,QAASxN,EAAMoM,MAAMoB,QACrBhB,MAAOxM,EAAME,KAAKsM,UAGK,SAACnF,GAC1B,MAAO,CACL+I,cAAe,SAAC5D,GAAD,OAAWnF,EPIH,SAACmF,GAC1B,OAAO,SAACnF,GACNA,EAlBK,CACLnF,KH/B8B,uBGiD9B6D,GACG2D,IAAI,qBAAuB8C,GAC3B9E,MAAK,SAAC8H,GAEL,IADA,IAAMmB,EAAgB,GACtB,MAA0B7N,OAAO2C,QAAQ+J,EAAI7H,MAA7C,eAAoD,CAAC,IAAD,uBAAxC8F,EAAwC,KAApCjD,EAAoC,KAClDmG,EAAczP,KAAd,gBAAwBsJ,EAAxB,CAA+BiD,GAAIA,KAErCpG,EArBC,CACLnF,KHnCgC,uBGoChCmO,OAmBgCM,OAE7B1I,OAAM,SAAC3B,GACNe,EAnBwB,SAACf,GAC/B,MAAO,CACLpE,KHxC8B,qBGyC9BoE,MAAOA,GAgBMsK,CAAiBtK,QOjBK4I,CAAoB1C,QAG5CzM,CAGbqG,GAAiB+J,GAAQpK,KCtCZhG,eAAQ,MALI,SAACsH,GAC1B,MAAO,CACLwJ,cAAe,kBAAMxJ,EZKhB,CACLnF,KCHuB,oBWAZnC,EAdA,SAACd,GAId,OAHA6R,qBAAU,WACR7R,EAAM4R,mBAED,kBAAC,KAAD,CAAUnR,GAAG,S,kBCVTqR,GAAe,SAACC,EAAQC,GACnC,OAAO,gBACFD,EADL,GAEKC,ICADC,GAAe,CACnBtO,YAAa,KACb6B,WAAY,EACZ6B,OAAO,GAEH6K,GAAoB,CACxBC,MAAO,GACPC,MAAO,GACPC,KAAM,IACNC,OAAQ,IAGJC,GAAgB,SAACxR,EAAOqN,GAC5B,IAAMoE,EAEJ,GADCzR,EAAMyE,WAAa0M,GAAkB9D,EAAO5D,iBAAiB/E,QAAQ,GAElEgN,EAAa,gBAChBrE,EAAO5D,eAAiBzJ,EAAM4C,YAAYyK,EAAO5D,gBAAkB,GAEhEkI,EAAiBZ,GAAa/Q,EAAM4C,YAAa8O,GAEvD,OAAOX,GAAa/Q,EADH,CAAE4C,YAAa+O,EAAgBlN,WAAYgN,KAGxDG,GAAmB,SAAC5R,EAAOqN,GAC/B,IAAIwE,EAAe7R,EAAM4C,YAAYyK,EAAO5D,gBAAkB,EAExDgI,GADNI,EAAeA,EAAe,EAAI,EAAIA,GAErB,EAGI,GADb7R,EAAMyE,WAAa0M,GAAkB9D,EAAO5D,iBAC5C/E,QAAQ,GACV1E,EAAMyE,WACNiN,EAAa,gBAChBrE,EAAO5D,eAAiBoI,GAErBF,EAAiBZ,GAAa/Q,EAAM4C,YAAa8O,GAEvD,OAAOX,GAAa/Q,EADH,CAAE4C,YAAa+O,EAAgBlN,WAAYgN,KAiC/CK,GA9BC,WAAmC,IAAlC9R,EAAiC,uDAAzBkR,GAAc7D,EAAW,uCAChD,OAAQA,EAAOnL,MACb,Ib5C0B,iBa6CxB,OAAOsP,GAAcxR,EAAOqN,GAE9B,Ib9C6B,oBa+C3B,OAAOuE,GAAiB5R,EAAOqN,GAEjC,IbhD2B,kBaiDzB,OAAO0D,GAAa/Q,EAAO,CACzB4C,YAAa,CACXwO,MAAO/D,EAAOzK,YAAYwO,MAC1BC,MAAOhE,EAAOzK,YAAYyO,MAC1BE,OAAQlE,EAAOzK,YAAY2O,OAC3BD,KAAMjE,EAAOzK,YAAY0O,MAE3B7M,WAAY,EACZ6B,OAAO,IAGX,Ib3DmC,0Ba4DjC,OAAOyK,GAAa/Q,EAAO,CACzBsG,OAAO,IAGX,QACE,OAAOtG,ICjEPkR,GAAe,CACnBb,OAAQ,GACR7C,SAAS,EACTY,WAAW,GAGPwB,GAAc,SAAC5P,EAAOqN,GAC1B,IAAM0E,EAAY/R,EAAMqQ,OAAO2B,QAAO,SAAC5F,GAAD,OAAWA,EAAMqB,KAAOJ,EAAOK,WACrE,OAAOqD,GAAa/Q,EAAO,CACzBqQ,OAAQ0B,KA+CGD,GA5CC,WAAmC,IAAlC9R,EAAiC,uDAAzBkR,GAAc7D,EAAW,uCAChD,OAAQA,EAAOnL,MACb,IdTyB,gBcUvB,OAAO6O,GAAa/Q,EAAO,CACzBoO,WAAW,IAGf,IdfmC,0BcgBjC,IAAM6D,EAAWlB,GAAa1D,EAAOf,UAAW,CAC9CmB,GAAIJ,EAAOK,UAEb,OAAOqD,GAAa/Q,EAAO,CACzBqQ,OAAQrQ,EAAMqQ,OAAO5M,OAAOwO,GAC5BzE,SAAS,EACTY,WAAW,IAGf,Id3BiC,wBc4BjC,IdvB8B,qBcwB5B,OAAO2C,GAAa/Q,EAAO,CACzBwN,SAAS,IAGb,Id3BgC,uBc4B9B,OAAOuD,GAAa/Q,EAAO,CACzBqQ,OAAQhD,EAAOgD,OACf7C,SAAS,IAGb,Id7B8B,qBc8B9B,IdvCiC,wBcwCjC,IdlC8B,qBcmC5B,OAAOuD,GAAa/Q,EAAO,CACzBwN,SAAS,IAGb,IdrCwB,ecsCtB,OAAOoC,GAAY5P,EAAOqN,GAE5B,QACE,OAAOrN,ICpDPkS,GAAY,CAChB1F,MAAO,KACPrM,OAAQ,KACRmG,MAAO,KACPkH,SAAS,GAgCIsE,GA9BC,WAAgC,IAA/B9R,EAA8B,uDAAtBkS,GAAW7E,EAAW,uCAC7C,OAAQA,EAAOnL,MACb,IfMsB,aeLpB,OAAO6O,GAAa/Q,EAAO,CACzBwN,SAAS,EACTlH,MAAO,OAEX,IfEwB,eeDtB,OAAOyK,GAAa/Q,EAAO,CACzBwM,MAAOa,EAAOxF,QACd1H,OAAQkN,EAAOlN,OACfqN,SAAS,EACTlH,MAAO,OAEX,IfJsB,aeKpB,OAAOyK,GAAa/Q,EAAO,CACzBsG,MAAO+G,EAAO/G,MACdkH,SAAS,IAEb,IfRuB,ceSrB,OAAOuD,GAAa/Q,EAAO,CACzBwM,MAAO,KACPrM,OAAQ,OAGZ,QACE,OAAOH,I,SCpBPmS,GAAmBC,OAAOC,sCAAwCC,KAClEC,GAAcC,aAAgB,CAClCjJ,cAAekJ,GACfrG,MAAOsG,GACPxS,KAAMyS,KAEFC,GAAQC,aACZN,GACAJ,GAAiBW,aAAgBC,QAqBpBC,OAlBf,WACE,OACE,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,CAAeK,SAAS,uBACtB,kBAAC,EAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO5E,KAAK,YAAYE,UAAWV,KACnC,kBAAC,KAAD,CAAOQ,KAAK,UAAUE,UAAW4B,KACjC,kBAAC,KAAD,CAAO9B,KAAK,iBAAiBE,UAAWC,KACxC,kBAAC,KAAD,CAAOH,KAAK,UAAUE,UAAW2E,KACjC,kBAAC,KAAD,CAAO7E,KAAK,IAAIzO,OAAK,EAAC2O,UAAWpG,UC/B7CgL,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d0cce318.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authorisation\":\"Authorisation__Authorisation__1Sy71\",\"ErrorMessage\":\"Authorisation__ErrorMessage__JWvVZ\",\"Dissabled\":\"Authorisation__Dissabled__2Iutd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems__NavItems__3fZSa\",\"LoginIcon\":\"NavItems__LoginIcon__dt-As\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu__SideMenu__3UWTy\",\"Open\":\"SideMenu__Open__1SgcR\",\"Logo\":\"SideMenu__Logo__2xnje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"Loading\":\"Modal__Loading__2_sU3\",\"Active\":\"Modal__Active__1AINr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem__NavItem__r-b9L\",\"active\":\"NavItem__active__2ZZNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\",\"hideDesktop\":\"Backdrop__hideDesktop__1llls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\",\"SuccessBlue\":\"Button__SuccessBlue__1OcmJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\",\"Ingredient\":\"Order__Ingredient__5aDVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Orders\":\"Orders__Orders__30Bmr\",\"List\":\"Orders__List__3VSNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2k2jA\"};","module.exports = __webpack_public_path__ + \"static/media/login.6ab6cd51.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.d4ad0c4f.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MobileMenuBtn\":\"MobileMenuBtn__MobileMenuBtn__2PzFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load6\":\"Spinner__load6__3S2CE\",\"round\":\"Spinner__round__2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactInfo\":\"ContactInfo__ContactInfo__1dgSV\"};","const Auxil = (props) => props.children;\r\n\r\nexport default Auxil;","import React from \"react\";\r\nimport burgerLogo from \"../../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.css\";\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={burgerLogo} alt=\"logo\" />\r\n  </div>\r\n);\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport classes from \"./NavItem.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavItem = (props) => (\r\n  <li className={classes.NavItem}>\r\n    <NavLink to={props.link} exact activeClassName={classes.active}>\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nNavItem.propTypes = {\r\n  link: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./NavItems.css\";\r\nimport NavItem from \"./NavItem/NavItem\";\r\nimport LoginIcon from \"../../../assets/images/login.svg\";\r\nimport LogoutIcon from \"../../../assets/images/logout.svg\";\r\n\r\nconst NavItems = (props) => (\r\n  <ul className={classes.NavItems}>\r\n    <NavItem link=\"/\">Burger Builder</NavItem>\r\n    {props.isAuth ? <NavItem link=\"/orders\">Orders</NavItem> : null}\r\n    {props.isAuth ? (\r\n      <NavItem link=\"/logout\">\r\n        <img className={classes.LoginIcon} src={LogoutIcon} alt=\"icon\" />\r\n      </NavItem>\r\n    ) : (\r\n      <NavItem link=\"/authorisation\">\r\n        <img className={classes.LoginIcon} src={LoginIcon} alt=\"icon\" />\r\n      </NavItem>\r\n    )}\r\n  </ul>\r\n);\r\nNavItems.propTypes = {\r\n  isAuth: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.userId !== null,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(NavItems);\r\n","import React from \"react\";\r\nimport classes from \"./MobileMenuBtn.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MobileMenuBtn = (props) => (\r\n  <div className={classes.MobileMenuBtn} onClick={props.clicked}>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n  </div>\r\n);\r\n\r\nMobileMenuBtn.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\nexport default MobileMenuBtn;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.css\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport MobileMenuBtn from \"../MobileMenuBtn/MobileMenuBtn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <MobileMenuBtn clicked={props.openMenu} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav>\r\n      <NavItems />\r\n    </nav>\r\n  </header>\r\n);\r\nToolbar.propTypes = {\r\n  openMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(Toolbar);\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Backdrop = (props) => {\r\n  let addedClasses = [classes.Backdrop];\r\n  if (props.addClass) {\r\n    for (let newClass of props.addClass) {\r\n      addedClasses.push(classes[newClass]);\r\n    }\r\n  }\r\n  return props.show ? (\r\n    <div className={addedClasses.join(\" \")} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nBackdrop.propTypes = {\r\n  addClass: PropTypes.array,\r\n  show: PropTypes.any,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport classes from \"./SideMenu.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SideMenu = (props) => {\r\n  return (\r\n    <Auxil>\r\n      <Backdrop\r\n        addClass={[\"hideDesktop\"]}\r\n        show={props.show}\r\n        clicked={props.closeMenu}\r\n      />\r\n      <div\r\n        className={[classes.SideMenu, props.show ? classes.Open : null].join(\r\n          \" \"\r\n        )}\r\n        onClick={props.closeMenu}\r\n      >\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavItems />\r\n        </nav>\r\n      </div>\r\n    </Auxil>\r\n  );\r\n};\r\nSideMenu.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\nexport default React.memo(SideMenu);\r\n","import React, { Component } from \"react\";\r\nimport Auxil from \"../Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideMenu from \"../../components/Navigation/SideMenu/SideMenu\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showMobileMenu: false,\r\n  };\r\n  closeMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: false });\r\n  };\r\n  openMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <Auxil>\r\n        <Toolbar openMenu={this.openMobileMenuHandler} />\r\n        <SideMenu\r\n          show={this.state.showMobileMenu}\r\n          closeMenu={this.closeMobileMenuHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nLayout.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case \"bread-bottom\":\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n        case \"bread-top\":\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>);\r\n            break;\r\n        case \"meat\":\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case \"cheese\":\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case \"bacon\":\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case \"salad\":\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport classes from \"./Burger.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Burger = ({ ingredients }) => {\r\n  let addedIngredient = Object.keys(ingredients)\r\n    .map((ingKey) => {\r\n      return [...Array(ingredients[ingKey])].map((_, i) => {\r\n        return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, item) => {\r\n      return arr.concat(item);\r\n    }, []);\r\n  if (!addedIngredient.length) {\r\n    addedIngredient = <p>Please add some ingredients!</p>;\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {addedIngredient}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\nBurger.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}\r\n                onClick={props.remove}\r\n                disabled={props.disabled}>Less</button>\r\n        <button className={classes.More}\r\n                onClick={props.add}>More</button>\r\n    </div>\r\n);\r\nBuildControl.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    remove: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n    add: PropTypes.func.isRequired,\r\n  };\r\nexport default BuildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControls = (props) => {\r\n  const controls = Object.keys(props.ingredients).map((ingr) => {\r\n    return {\r\n      label: ingr.charAt(0).toUpperCase() + ingr.slice(1),\r\n      type: ingr,\r\n    };\r\n  });\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Current price: <strong>{props.totalPrice.toFixed(2)}</strong>&nbsp;$\r\n      </p>\r\n      {controls.map((item) => (\r\n        <BuildControl\r\n          key={`ctrl-${item.label}`}\r\n          label={item.label}\r\n          add={() => props.addIngredients(item.type)}\r\n          remove={() => props.removeIngredients(item.type)}\r\n          disabled={props.ingredients[item.type] <= 0}\r\n        />\r\n      ))}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.buy}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nBuildControls.propTypes = {\r\n  totalPrice: PropTypes.number,\r\n  addIngredients: PropTypes.func.isRequired,\r\n  removeIngredients: PropTypes.func.isRequired,\r\n  buy: PropTypes.func.isRequired,\r\n  purchasable: PropTypes.bool,\r\n  ingredients: PropTypes.object,\r\n};\r\nexport default BuildControls;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let modalClasses = [classes.Modal];\r\n    if (this.props.show) {\r\n      modalClasses.push(classes.Active);\r\n    }\r\n    if (this.props.addedClasses) {\r\n      for (let addClass of this.props.addedClasses) {\r\n        modalClasses.push(classes[addClass]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Auxil>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div className={modalClasses.join(\" \")}>{this.props.children}</div>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  addedClasses: PropTypes.array,\r\n  show: PropTypes.any,\r\n  modalClosed: PropTypes.func,\r\n  children: PropTypes.any,\r\n};\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./Button.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  btnType: PropTypes.string,\r\n  clicked: PropTypes.func,\r\n  children: PropTypes.any,\r\n  disabled: PropTypes.bool,\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientsSummary = Object.entries(props.ingredients).map(\r\n    (item, i) => {\r\n      return (\r\n        <li key={i}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{item[0]}</span>:&nbsp;\r\n          {item[1]}\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Auxil>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientsSummary}</ul>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.buyCancel}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.buyContinue}>\r\n        CONTINUE\r\n      </Button>\r\n    </Auxil>\r\n  );\r\n};\r\nOrderSummary.propTypes = {\r\n  btnType: PropTypes.string,\r\n  totalPrice: PropTypes.number,\r\n  buyCancel: PropTypes.func.isRequired,\r\n  buyContinue: PropTypes.func.isRequired,\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default OrderSummary;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-order-react.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport classes from \"./Spinner.css\"\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxil from \"../Auxiliary\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class WithError extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(\r\n        (request) => {\r\n          this.setState({ error: null });\r\n          return request;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n      this.respInterceptor = axios.interceptors.response.use(\r\n        (resp) => {\r\n          this.setState({ error: null });\r\n          return resp;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.respInterceptor);\r\n    }\r\n\r\n    modalClose = () => {\r\n      this.setState({ error: null });\r\n    };\r\n    render() {\r\n      return (\r\n        <Auxil>\r\n          <Modal show={this.state.error} modalClosed={this.modalClose}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Auxil>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\nconst authSuccess = (data) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    idToken: data.idToken,\r\n    userId: data.localId,\r\n  };\r\n};\r\nconst authError = (error) => {\r\n  return {\r\n    type: actionTypes.AUTH_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const logout = () => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\nconst checkAuthTimeout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\nexport const authorisation = (email, password, isSingUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDgJZ-Y9stbJo0GasmJfTb6MMqvyI2R630\";\r\n    if (!isSingUp) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDgJZ-Y9stbJo0GasmJfTb6MMqvyI2R630\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        dispatch(authSuccess(response.data));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(authError(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_ERROR = \"FETCH_INGREDIENTS_ERROR\";\r\n\r\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\r\nexport const PURCHASE_BURGER_ERROR = \"PURCHASE_BURGER_ERROR\";\r\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\r\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\r\n\r\nexport const FETCH_ORDERS_START = \"FETCH_ORDERS_START\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_ERROR = \"FETCH_ORDERS_ERROR\";\r\n\r\nexport const DELETE_ORDER = \"DELETE_ORDER\";\r\nexport const DELETE_ORDER_ERROR = \"DELETE_ORDER_ERROR\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxil from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    buying: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.initIngredientsHandler();\r\n  }\r\n\r\n  buyCancelHandler = () => {\r\n    this.setState({ buying: false });\r\n  };\r\n  buyContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n  buyHandler = () => {\r\n    this.setState({ buying: true });\r\n  };\r\n  updatePurchaseState = (ingredients) => {\r\n    const sum = Object.values(ingredients).reduce(\r\n      (total, curr) => total + curr,\r\n      0\r\n    );\r\n    return sum > 0;\r\n  };\r\n\r\n  render() {\r\n    const errorStyle = {\r\n      textAlign: \"center\",\r\n      marginTop: 90,\r\n      color: \"red\",\r\n      fontWeight: \"bold\",\r\n    };\r\n    let addClasses = [],\r\n      orderSummary = null;\r\n    let burger = this.props.error ? (\r\n      <p style={errorStyle}>Ingredients can&apos;t be loaded.</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <Auxil>\r\n          <Burger ingredients={this.props.ingredients} />\r\n          <BuildControls\r\n            addIngredients={this.props.addIngredientHandler}\r\n            removeIngredients={this.props.removeIngredientHandler}\r\n            ingredients={this.props.ingredients}\r\n            totalPrice={this.props.totalPrice}\r\n            purchasable={this.updatePurchaseState(this.props.ingredients)}\r\n            buy={this.buyHandler}\r\n          />\r\n        </Auxil>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ingredients}\r\n          buyCancel={this.buyCancelHandler}\r\n          buyContinue={this.buyContinueHandler}\r\n          totalPrice={this.props.totalPrice}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Auxil>\r\n        <Modal\r\n          addedClasses={addClasses}\r\n          show={this.state.buying}\r\n          modalClosed={this.buyCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nBurgerBuilder.propTypes = {\r\n  history: PropTypes.any,\r\n  ingredients: PropTypes.object,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  addIngredientHandler: PropTypes.func.isRequired,\r\n  removeIngredientHandler: PropTypes.func.isRequired,\r\n  initIngredientsHandler: PropTypes.func.isRequired,\r\n  onInitPurchase: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    error: state.burgerBuilder.error,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIngredientHandler: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    removeIngredientHandler: (ingName) =>\r\n      dispatch(actions.removeIngredient(ingName)),\r\n    initIngredientsHandler: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const removeIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\nexport const fetchIngredientsError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_ERROR,\r\n  };\r\n};\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://burger-order-react.firebaseio.com/ingredients.json\")\r\n      .then((resp) => {\r\n        dispatch(setIngredients(resp.data));\r\n      })\r\n      .catch(() => dispatch(fetchIngredientsError()));\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\nexport const purchaseBurgerError = (error) => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_BURGER_START,\r\n  };\r\n};\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return (dispatch) => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post(\"/orders.json?auth=\" + token, orderData)\r\n      .then((response) => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(purchaseBurgerError(error));\r\n      });\r\n  };\r\n};\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: actionTypes.PURCHASE_INIT,\r\n  };\r\n};\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_START,\r\n  };\r\n};\r\nexport const fetchOrdersSuccess = (orders) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\nexport const fetchOrdersError = (error) => {\r\n  return {\r\n    type: actionTypes.FETCH_ORDERS_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const fetchOrders = (token) => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrdersStart());\r\n    axios\r\n      .get(\"/orders.json?auth=\" + token)\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        for (const [id, value] of Object.entries(res.data)) {\r\n          fetchedOrders.push({ ...value, id: id });\r\n        }\r\n        dispatch(fetchOrdersSuccess(fetchedOrders));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(fetchOrdersError(error));\r\n      });\r\n  };\r\n};\r\nexport const deleteOrderError = (error) => {\r\n  return {\r\n    type: actionTypes.DELETE_ORDER_ERROR,\r\n    error: error,\r\n  };\r\n};\r\nexport const deleteOrder = (id) => {\r\n  return {\r\n    type: actionTypes.DELETE_ORDER,\r\n    orderId: id,\r\n  };\r\n};\r\nexport const fetchDeleteOrder = (id, token) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(\"/orders/\" + id + \".json?auth=\" + token)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status == 200) {\r\n          dispatch(deleteOrder(id));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(deleteOrderError(error));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancel}>\r\n        CANCEL\r\n      </Button>\r\n      {props.activeContactInfo ? null : (\r\n        <Button btnType=\"Success\" clicked={props.checkoutContinue}>\r\n          CONTINUE\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckoutSummary.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  checkoutCancel: PropTypes.func.isRequired,\r\n  checkoutContinue: PropTypes.func.isRequired,\r\n  activeContactInfo: PropTypes.bool,\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  props.touched && props.invalid ? inputClasses.push(classes.Invalid) : null;\r\n  switch (props.elementType) { \r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((opt) => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayVal}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label} htmlFor=\"\">\r\n        {props.label}\r\n      </label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\nInput.propTypes = {\r\n  label: PropTypes.string,\r\n  elementType: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  changed: PropTypes.func.isRequired,\r\n  invalid: PropTypes.bool,\r\n  touched: PropTypes.bool,\r\n};\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./ContactInfo.css\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport axios from \"../../../axios-orders\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport * as action from \"../../../store/actions/index\";\r\n\r\nclass ContactInfo extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"name\",\r\n          type: \"text\",\r\n          placeholder: \"Your name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 2,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"street\",\r\n          type: \"text\",\r\n          placeholder: \"Your street/app\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"zipCode\",\r\n          type: \"text\",\r\n          placeholder: \"Your zip code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          isNumeric: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      city: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"city\",\r\n          type: \"text\",\r\n          placeholder: \"Your city\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"email\",\r\n          type: \"email\",\r\n          placeholder: \"Your email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayVal: \"Fastest\" },\r\n            { value: \"cheapest\", displayVal: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          valid: true,\r\n        },\r\n      },\r\n    },\r\n    formIsValid: false,\r\n  };\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for (const formElementId in this.state.orderForm) {\r\n      formData[formElementId] = this.state.orderForm[formElementId].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      orderData: formData,\r\n    };\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n  checkValidation(value, rules) {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, elementId) => {\r\n    const updatedForm = { ...this.state.orderForm };\r\n    const updatedFormElement = { ...updatedForm[elementId] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.touched = true;\r\n    updatedFormElement.validation.valid = this.checkValidation(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedForm[elementId] = updatedFormElement;\r\n    let formIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        formIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    this.setState({ orderForm: updatedForm, formIsValid: formIsValid });\r\n  };\r\n  render() {\r\n    const formElementsArray = Object.entries(this.state.orderForm);\r\n    let form = (\r\n      <form action=\"\" onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((element) => (\r\n          <Input\r\n            key={element[0]}\r\n            elementType={element[1].elementType}\r\n            elementConfig={element[1].elementConfig}\r\n            value={element[1].value}\r\n            changed={(event) => this.inputChangedHandler(event, element[0])}\r\n            invalid={!element[1].validation.valid}\r\n            touched={element[1].touched}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactInfo}>\r\n        <h4>Enter your Contact Info</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactInfo.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  history: PropTypes.any,\r\n  onOrderBurger: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  token: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onOrderBurger: (order, token) => dispatch(action.purchaseBurger(order, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactInfo, axios));\r\n","import React, { Component } from \"react\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport ContactInfo from \"./ContactInfo/ContactInfo\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    activeContactInfo: false,\r\n  };\r\n\r\n  checkoutCancelHandler = () => {\r\n    this.setState({ activeContactInfo: false });\r\n    this.props.history.goBack();\r\n  };\r\n  checkoutContinueHandler = () => {\r\n    this.setState({ activeContactInfo: true });\r\n    this.props.history.replace(\"/checkout/contact-info\");\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n    if (this.props.ingredients) {\r\n      const purchaseRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <>\r\n          {purchaseRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ingredients}\r\n            checkoutCancel={this.checkoutCancelHandler}\r\n            checkoutContinue={this.checkoutContinueHandler}\r\n            totalPrice={this.props.totalPrice}\r\n            activeContactInfo={this.state.activeContactInfo}\r\n          />\r\n          <Route\r\n            path={this.props.match.path + \"/contact-info\"}\r\n            component={ContactInfo}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\nCheckout.propTypes = {\r\n  match: PropTypes.any,\r\n  history: PropTypes.any,\r\n  totalPrice: PropTypes.number,\r\n  ingredients: PropTypes.object,\r\n  onInitPurchase: PropTypes.func,\r\n  purchased: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    purchased: state.order.purchased,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Authorisation.css\";\r\nimport * as actions from \"../../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Authorisation extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"email\",\r\n          type: \"email\",\r\n          placeholder: \"Your email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"password\",\r\n          type: \"password\",\r\n          placeholder: \"Your password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n    },\r\n    formIsValid: false,\r\n    isSingUp: false,\r\n  };\r\n  checkValidation(value, rules) {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    if (rules.isNumeric) {\r\n      const pattern = /^\\d+$/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, elementId) => {\r\n    const updatedForm = { ...this.state.controls };\r\n    const updatedFormElement = { ...updatedForm[elementId] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.touched = true;\r\n    updatedFormElement.validation.valid = this.checkValidation(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedForm[elementId] = updatedFormElement;\r\n    let formIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        formIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    this.setState({ controls: updatedForm, formIsValid: formIsValid });\r\n  };\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.controls.email.value,\r\n      this.state.controls.password.value,\r\n      this.state.isSingUp\r\n    );\r\n  };\r\n  switchModeHandler = (event) => {\r\n    event.preventDefault();\r\n    this.setState((prevState) => {\r\n      return { isSingUp: !prevState.isSingUp };\r\n    });\r\n  };\r\n  render() {\r\n    const formElementsArray = Object.entries(this.state.controls);\r\n    let form = (\r\n      <form action=\"\" onSubmit={this.submitHandler}>\r\n        <Button btnType=\"SuccessBlue\" clicked={this.switchModeHandler}>\r\n          {this.state.isSingUp ? (\r\n            <div>\r\n              <span className={classes.Dissabled}>SingIN</span>\r\n              &nbsp;/&nbsp;SingUP\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              SingIN&nbsp;/&nbsp;\r\n              <span className={classes.Dissabled}>SingUP</span>\r\n            </div>\r\n          )}\r\n        </Button>\r\n        {formElementsArray.map((element) => (\r\n          <Input\r\n            key={element[0]}\r\n            elementType={element[1].elementType}\r\n            elementConfig={element[1].elementConfig}\r\n            value={element[1].value}\r\n            changed={(event) => this.inputChangedHandler(event, element[0])}\r\n            invalid={!element[1].validation.valid}\r\n            touched={element[1].touched}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          SUBMIT\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p className={classes.ErrorMessage}>\r\n          {this.props.error.message.split(\"_\").join(\" \")}\r\n        </p>\r\n      );\r\n    }\r\n    return (\r\n      <div className={classes.Authorisation}>\r\n        {form}\r\n        {errorMessage}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAuthorisation.propTypes = {\r\n  onAuth: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, passw, isSingUp) =>\r\n      dispatch(actions.authorisation(email, passw, isSingUp)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Authorisation);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./Order.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledOrder = styled.li`\r\n  &.fade-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(1000px);\r\n  }\r\n`;\r\n\r\nconst Order = (props) => {\r\n  const [disableBtn, setDisableBtn] = useState(false);\r\n  const onClicked = () => {\r\n    setDisableBtn(true);\r\n    props.onFetchDeleteOrders(props.order.id, props.token);\r\n  };\r\n  return (\r\n    <StyledOrder className={classes.Order} key={props.order.id}>\r\n      <div>\r\n        Ingredients:&nbsp;\r\n        {Object.entries(props.order.ingredients).map((ingredient, i) => (\r\n          <div\r\n            className={classes.Ingredient}\r\n            key={i}\r\n          >{`${ingredient[0]} (${ingredient[1]})`}</div>\r\n        ))}\r\n      </div>\r\n      <p>\r\n        <span>\r\n          Price: <strong>{props.order.price.toFixed(2)}&nbsp;$</strong>\r\n        </span>\r\n        <Button btnType=\"Danger\" clicked={onClicked} disabled={disableBtn}>\r\n          Delete\r\n        </Button>\r\n      </p>\r\n    </StyledOrder>\r\n  );\r\n};\r\nOrder.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n  onFetchDeleteOrders: PropTypes.func.isRequired,\r\n  token: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchDeleteOrders: (id,token) => dispatch(actions.fetchDeleteOrder(id,token)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport classes from \"./Orders.css\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport TransitionGroup from \"react-transition-group/TransitionGroup\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token);\r\n  }\r\n  render() {\r\n    let orders = null;\r\n    if (this.props.loading) {\r\n      orders = <Spinner />;\r\n    }\r\n    if (this.props.orders) {\r\n      orders = this.props.orders.length ? (\r\n        <TransitionGroup component=\"ul\" className={classes.List}>\r\n          {this.props.orders.map((order) => (\r\n            <CSSTransition key={order.id} classNames=\"fade\" timeout={300}>\r\n              <Order order={order} />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <p>You don&apos;t have any orders yet.</p>\r\n      );\r\n    }\r\n    return <div className={classes.Orders}>{orders}</div>;\r\n  }\r\n}\r\nOrders.propTypes = {\r\n  onFetchOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array,\r\n  loading: PropTypes.bool,\r\n  token: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token) => dispatch(actions.fetchOrders(token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nconst Logout = (props) => {\r\n  useEffect(() => {\r\n    props.logoutHandler();\r\n  });\r\n  return <Redirect to=\"/\" />;\r\n};\r\nLogout.propTypes = {\r\n  logoutHandler: PropTypes.func.isRequired,\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutHandler: () => dispatch(actions.logout()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","export const updateObject = (oldObj, updatedProps) => {\r\n  return {\r\n    ...oldObj,\r\n    ...updatedProps,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4.0,\r\n  error: false,\r\n};\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  meat: 1.3,\r\n  cheese: 0.4,\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  const newPrice =\r\n    (state.totalPrice + INGREDIENT_PRICES[action.ingredientName]).toFixed(2) *\r\n    1;\r\n  const updIngredient = {\r\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n  };\r\n  const updIngredients = updateObject(state.ingredients, updIngredient);\r\n  const updState = { ingredients: updIngredients, totalPrice: newPrice };\r\n  return updateObject(state, updState);\r\n};\r\nconst removeIngredient = (state, action) => {\r\n  let updatedCount = state.ingredients[action.ingredientName] - 1;\r\n  updatedCount = updatedCount < 0 ? 0 : updatedCount;\r\n  const newPrice =\r\n    updatedCount > 0\r\n      ? (\r\n          state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n        ).toFixed(2) * 1\r\n      : state.totalPrice;\r\n  const updIngredient = {\r\n    [action.ingredientName]: updatedCount,\r\n  };\r\n  const updIngredients = updateObject(state.ingredients, updIngredient);\r\n  const updState = { ingredients: updIngredients, totalPrice: newPrice };\r\n  return updateObject(state, updState);\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT: {\r\n      return addIngredient(state, action);\r\n    }\r\n    case actionTypes.REMOVE_INGREDIENT: {\r\n      return removeIngredient(state, action);\r\n    }\r\n    case actionTypes.SET_INGREDIENTS: {\r\n      return updateObject(state, {\r\n        ingredients: {\r\n          salad: action.ingredients.salad,\r\n          bacon: action.ingredients.bacon,\r\n          cheese: action.ingredients.cheese,\r\n          meat: action.ingredients.meat,\r\n        },\r\n        totalPrice: 4.0,\r\n        error: false,\r\n      });\r\n    }\r\n    case actionTypes.FETCH_INGREDIENTS_ERROR: {\r\n      return updateObject(state, {\r\n        error: true,\r\n      });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false,\r\n};\r\n\r\nconst deleteOrder = (state, action) => {\r\n  const newOrders = state.orders.filter((order) => order.id !== action.orderId);\r\n  return updateObject(state, {\r\n    orders: newOrders,\r\n  });\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.PURCHASE_INIT: {\r\n      return updateObject(state, {\r\n        purchased: false,\r\n      });\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_SUCCESS: {\r\n      const newOrder = updateObject(action.orderData, {\r\n        id: action.orderId,\r\n      });\r\n      return updateObject(state, {\r\n        orders: state.orders.concat(newOrder),\r\n        loading: false,\r\n        purchased: true,\r\n      });\r\n    }\r\n    case actionTypes.PURCHASE_BURGER_START:\r\n    case actionTypes.FETCH_ORDERS_START: {\r\n      return updateObject(state, {\r\n        loading: true,\r\n      });\r\n    }\r\n    case actionTypes.FETCH_ORDERS_SUCCESS: {\r\n      return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false,\r\n      });\r\n    }\r\n    case actionTypes.DELETE_ORDER_ERROR:\r\n    case actionTypes.PURCHASE_BURGER_ERROR:\r\n    case actionTypes.FETCH_ORDERS_ERROR: {\r\n      return updateObject(state, {\r\n        loading: false,\r\n      });\r\n    }\r\n    case actionTypes.DELETE_ORDER: {\r\n      return deleteOrder(state, action);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n};\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return updateObject(state, {\r\n        loading: true,\r\n        error: null,\r\n      });\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        loading: false,\r\n        error: null,\r\n      });\r\n    case actionTypes.AUTH_ERROR:\r\n      return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n      });\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return updateObject(state, {\r\n        token: null,\r\n        userId: null,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport Authorisation from \"./containers/Authorisation/Authorisation\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\nimport Logout from \"./containers/Authorisation/Logout/Logout\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport orderReducer from \"./store/reducers/order\";\r\nimport authReducer from \"./store/reducers/authorisation\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename=\"/burger-order-react\">\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/orders\" component={Orders} />\r\n            <Route path=\"/authorisation\" component={Authorisation} />\r\n            <Route path=\"/logout\" component={Logout} />\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n          </Switch>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}