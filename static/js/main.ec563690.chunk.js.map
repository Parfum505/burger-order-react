{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/SideMenu/SideMenu.css","components/UI/Modal/Modal.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavItems/NavItem/NavItem.css","components/UI/Backdrop/Backdrop.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Navigation/Logo/Logo.css","components/Navigation/NavItems/NavItems.css","components/Navigation/MobileMenuBtn/MobileMenuBtn.css","components/Burger/Burger.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactInfo/ContactInfo.css","components/Order/Order.css","hoc/Auxiliary.js","components/Navigation/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/MobileMenuBtn/MobileMenuBtn.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideMenu/SideMenu.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactInfo/ContactInfo.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","store/reducers/burgerBuilder.js","App.js","index.js"],"names":["module","exports","Auxil","props","children","Logo","className","classes","src","burgerLogo","alt","NavItem","to","link","exact","activeClassName","active","NavItems","MobileMenuBtn","onClick","clicked","React","memo","Toolbar","openMenu","Backdrop","addedClasses","addClass","newClass","push","show","join","closeMenu","SideMenu","Open","Layout","state","showMobileMenu","closeMobileMenuHandler","setState","openMobileMenuHandler","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","ingredients","addedIngredient","Object","keys","map","ingKey","Array","_","i","key","reduce","arr","item","concat","length","BuildControl","Label","label","Less","remove","disabled","More","add","controls","BuildControls","totalPrice","toFixed","addIngredients","removeIngredients","OrderButton","purchasable","buy","Modal","nextProps","modalClasses","Active","modalClosed","Button","btnType","OrderSummary","ingredientsSummary","entries","style","textTransform","buyCancel","buyContinue","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","modalClose","reqInterceptor","interceptors","request","use","respInterceptor","response","resp","eject","message","BurgerBuilder","buying","buyCancelHandler","buyContinueHandler","history","buyHandler","updatePurchaseState","values","total","curr","initIngredientsHandler","orderSummary","burger","textAlign","marginTop","color","fontWeight","addIngredientHandler","removeIngredientHandler","connect","dispatch","ingName","ingredientName","get","then","data","catch","CheckoutSummary","checkoutCancel","activeContactInfo","checkoutContinue","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","value","onChange","changed","options","opt","displayVal","htmlFor","ContactInfo","orderForm","name","placeholder","validation","required","minLength","valid","street","zipCode","maxLength","city","email","isEmail","deliveryMethod","loading","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","price","orderData","post","inputChangedHandler","elementId","updatedForm","updatedFormElement","target","checkValidation","rules","isValid","trim","test","formElementsArray","form","action","onSubmit","element","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","path","match","component","Order","display","margin","border","padding","orders","res","fetchedOrders","id","initialState","INGREDIENT_PRICES","salad","bacon","meat","cheese","reducer","newPrice","updatedCount","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","burgerBuilderReducer","applyMiddleware","thunk","App","basename","Orders","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec563690.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideMenu\":\"SideMenu__SideMenu__3UWTy\",\"Open\":\"SideMenu__Open__1SgcR\",\"Logo\":\"SideMenu__Logo__2xnje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\",\"Loading\":\"Modal__Loading__2_sU3\",\"Active\":\"Modal__Active__1AINr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem__NavItem__r-b9L\",\"active\":\"NavItem__active__2ZZNc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\",\"hideDesktop\":\"Backdrop__hideDesktop__1llls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__2k2jA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems__NavItems__3fZSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MobileMenuBtn\":\"MobileMenuBtn__MobileMenuBtn__2PzFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load6\":\"Spinner__load6__3S2CE\",\"round\":\"Spinner__round__2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactInfo\":\"ContactInfo__ContactInfo__1dgSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","const Auxil = (props) => props.children;\r\n\r\nexport default Auxil;","import React from \"react\";\r\nimport burgerLogo from \"../../../assets/images/burger-logo.png\";\r\nimport classes from \"./Logo.css\";\r\n\r\nconst Logo = () => (\r\n  <div className={classes.Logo}>\r\n    <img src={burgerLogo} alt=\"logo\" />\r\n  </div>\r\n);\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport classes from \"./NavItem.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NavItem = (props) => (\r\n  <li className={classes.NavItem}>\r\n    <NavLink to={props.link} exact activeClassName={classes.active}>\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nNavItem.propTypes = {\r\n  link: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default NavItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavItems.css\";\r\nimport NavItem from \"./NavItem/NavItem\";\r\n\r\nconst NavItems = () => (\r\n  <ul className={classes.NavItems}>\r\n    <NavItem link=\"/\">Burger Builder</NavItem>\r\n    <NavItem link=\"/orders\">Orders</NavItem>\r\n  </ul>\r\n);\r\nexport default NavItems;\r\n","import React from \"react\";\r\nimport classes from \"./MobileMenuBtn.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MobileMenuBtn = (props) => (\r\n  <div className={classes.MobileMenuBtn} onClick={props.clicked}>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n    <div>&nbsp;</div>\r\n  </div>\r\n);\r\n\r\nMobileMenuBtn.propTypes = {\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\nexport default MobileMenuBtn;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.css\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport MobileMenuBtn from \"../MobileMenuBtn/MobileMenuBtn\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <MobileMenuBtn clicked={props.openMenu} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav>\r\n      <NavItems />\r\n    </nav>\r\n  </header>\r\n);\r\nToolbar.propTypes = {\r\n  openMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default React.memo(Toolbar);\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Backdrop = (props) => {\r\n  let addedClasses = [classes.Backdrop];\r\n  if (props.addClass) {\r\n    for (let newClass of props.addClass) {\r\n      addedClasses.push(classes[newClass]);\r\n    }\r\n  }\r\n  return props.show ? (\r\n    <div className={addedClasses.join(\" \")} onClick={props.clicked}></div>\r\n  ) : null;\r\n};\r\n\r\nBackdrop.propTypes = {\r\n  addClass: PropTypes.array,\r\n  show: PropTypes.any,\r\n  clicked: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport Logo from \"../Logo/Logo\";\r\nimport NavItems from \"../NavItems/NavItems\";\r\nimport classes from \"./SideMenu.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SideMenu = (props) => {\r\n  return (\r\n    <Auxil>\r\n      <Backdrop\r\n        addClass={[\"hideDesktop\"]}\r\n        show={props.show}\r\n        clicked={props.closeMenu}\r\n      />\r\n      <div\r\n        className={[classes.SideMenu, props.show ? classes.Open : null].join(\r\n          \" \"\r\n        )}\r\n      >\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavItems />\r\n        </nav>\r\n      </div>\r\n    </Auxil>\r\n  );\r\n};\r\nSideMenu.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\nexport default React.memo(SideMenu);\r\n","import React, { Component } from \"react\";\r\nimport Auxil from \"../Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideMenu from \"../../components/Navigation/SideMenu/SideMenu\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showMobileMenu: false,\r\n  };\r\n  closeMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: false });\r\n  };\r\n  openMobileMenuHandler = () => {\r\n    this.setState({ showMobileMenu: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <Auxil>\r\n        <Toolbar openMenu={this.openMobileMenuHandler} />\r\n        <SideMenu\r\n          show={this.state.showMobileMenu}\r\n          closeMenu={this.closeMobileMenuHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nLayout.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case \"bread-bottom\":\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n        case \"bread-top\":\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>);\r\n            break;\r\n        case \"meat\":\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case \"cheese\":\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case \"bacon\":\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case \"salad\":\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport classes from \"./Burger.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Burger = ({ ingredients }) => {\r\n  let addedIngredient = Object.keys(ingredients)\r\n    .map((ingKey) => {\r\n      return [...Array(ingredients[ingKey])].map((_, i) => {\r\n        return <BurgerIngredient key={ingKey + i} type={ingKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, item) => {\r\n      return arr.concat(item);\r\n    }, []);\r\n  if (!addedIngredient.length) {\r\n    addedIngredient = <p>Please add some ingredients!</p>;\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {addedIngredient}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\nBurger.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}\r\n                onClick={props.remove}\r\n                disabled={props.disabled}>Less</button>\r\n        <button className={classes.More}\r\n                onClick={props.add}>More</button>\r\n    </div>\r\n);\r\nBuildControl.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    remove: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n    add: PropTypes.func.isRequired,\r\n  };\r\nexport default BuildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\nconst BuildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>\r\n      Current price: <strong>{props.totalPrice.toFixed(2)}</strong>&nbsp;$\r\n    </p>\r\n    {controls.map((item) => (\r\n      <BuildControl\r\n        key={`ctrl-${item.label}`}\r\n        label={item.label}\r\n        add={() => props.addIngredients(item.type)}\r\n        remove={() => props.removeIngredients(item.type)}\r\n        disabled={props.ingredients[item.type] <= 0}\r\n      />\r\n    ))}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.buy}\r\n    >\r\n      ORDER NOW\r\n    </button>\r\n  </div>\r\n);\r\n\r\nBuildControls.propTypes = {\r\n  totalPrice: PropTypes.number,\r\n  addIngredients: PropTypes.func.isRequired,\r\n  removeIngredients: PropTypes.func.isRequired,\r\n  buy: PropTypes.func.isRequired,\r\n  purchasable: PropTypes.bool,\r\n  ingredients: PropTypes.object,\r\n};\r\nexport default BuildControls;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Modal.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    return (\r\n      nextProps.show !== this.props.show ||\r\n      nextProps.children !== this.props.children\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let modalClasses = [classes.Modal];\r\n    if (this.props.show) {\r\n      modalClasses.push(classes.Active);\r\n    }\r\n    if (this.props.addedClasses) {\r\n      for (let addClass of this.props.addedClasses) {\r\n        modalClasses.push(classes[addClass]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Auxil>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div className={modalClasses.join(\" \")}>{this.props.children}</div>\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  addedClasses: PropTypes.array,\r\n  show: PropTypes.any,\r\n  modalClosed: PropTypes.func,\r\n  children: PropTypes.any,\r\n};\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./Button.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    onClick={props.clicked}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  btnType: PropTypes.string,\r\n  clicked: PropTypes.func,\r\n  children: PropTypes.any,\r\n  disabled: PropTypes.bool,\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Auxil from \"../../../hoc/Auxiliary\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst OrderSummary = (props) => {\r\n  const ingredientsSummary = Object.entries(props.ingredients).map(\r\n    (item, i) => {\r\n      return (\r\n        <li key={i}>\r\n          <span style={{ textTransform: \"capitalize\" }}>{item[0]}</span>:&nbsp;\r\n          {item[1]}\r\n        </li>\r\n      );\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Auxil>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientsSummary}</ul>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <p>Continue to Checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.buyCancel}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.buyContinue}>\r\n        CONTINUE\r\n      </Button>\r\n    </Auxil>\r\n  );\r\n};\r\nOrderSummary.propTypes = {\r\n  btnType: PropTypes.string,\r\n  totalPrice: PropTypes.number,\r\n  buyCancel: PropTypes.func.isRequired,\r\n  buyContinue: PropTypes.func.isRequired,\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\nexport default OrderSummary;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-order-react.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\nimport classes from \"./Spinner.css\"\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Auxil from \"../Auxiliary\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return class WithError extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n\r\n    UNSAFE_componentWillMount() {\r\n      this.reqInterceptor = axios.interceptors.request.use(\r\n        (request) => {\r\n          this.setState({ error: null });\r\n          return request;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n      this.respInterceptor = axios.interceptors.response.use(\r\n        (resp) => {\r\n          this.setState({ error: null });\r\n          return resp;\r\n        },\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqInterceptor);\r\n      axios.interceptors.response.eject(this.respInterceptor);\r\n    }\r\n\r\n    modalClose = () => {\r\n      this.setState({ error: null });\r\n    };\r\n    render() {\r\n      return (\r\n        <Auxil>\r\n          <Modal show={this.state.error} modalClosed={this.modalClose}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Auxil>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Auxil from \"../../hoc/Auxiliary\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport axios from \"../../axios-orders\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as burgerBuilderActions from \"../../store/actions/index\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    buying: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.initIngredientsHandler();\r\n  }\r\n\r\n  buyCancelHandler = () => {\r\n    this.setState({ buying: false });\r\n  };\r\n  buyContinueHandler = () => {\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n  buyHandler = () => {\r\n    this.setState({ buying: true });\r\n  };\r\n  updatePurchaseState = (ingredients) => {\r\n    const sum = Object.values(ingredients).reduce(\r\n      (total, curr) => total + curr,\r\n      0\r\n    );\r\n    return sum > 0;\r\n  };\r\n\r\n  render() {\r\n    const errorStyle = {\r\n      textAlign: \"center\",\r\n      marginTop: 90,\r\n      color: \"red\",\r\n      fontWeight: \"bold\",\r\n    };\r\n    let addClasses = [],\r\n      orderSummary = null;\r\n    let burger = this.props.error ? (\r\n      <p style={errorStyle}>Ingredients can&apos;t be loaded.</p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n    if (this.props.ingredients) {\r\n      burger = (\r\n        <Auxil>\r\n          <Burger ingredients={this.props.ingredients} />\r\n          <BuildControls\r\n            addIngredients={this.props.addIngredientHandler}\r\n            removeIngredients={this.props.removeIngredientHandler}\r\n            ingredients={this.props.ingredients}\r\n            totalPrice={this.props.totalPrice}\r\n            purchasable={this.updatePurchaseState(this.props.ingredients)}\r\n            buy={this.buyHandler}\r\n          />\r\n        </Auxil>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ingredients}\r\n          buyCancel={this.buyCancelHandler}\r\n          buyContinue={this.buyContinueHandler}\r\n          totalPrice={this.props.totalPrice}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Auxil>\r\n        <Modal\r\n          addedClasses={addClasses}\r\n          show={this.state.buying}\r\n          modalClosed={this.buyCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Auxil>\r\n    );\r\n  }\r\n}\r\nBurgerBuilder.propTypes = {\r\n  history: PropTypes.any,\r\n  ingredients: PropTypes.object,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  addIngredientHandler: PropTypes.func.isRequired,\r\n  removeIngredientHandler: PropTypes.func.isRequired,\r\n  initIngredientsHandler: PropTypes.func.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.ingredients,\r\n    totalPrice: state.totalPrice,\r\n    error: state.error,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addIngredientHandler: (ingName) =>\r\n      dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n    removeIngredientHandler: (ingName) =>\r\n      dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n    initIngredientsHandler: () =>\r\n      dispatch(burgerBuilderActions.initIngredients()),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-orders\";\r\n\r\nexport const addIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.ADD_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const removeIngredient = (name) => {\r\n  return {\r\n    type: actionTypes.REMOVE_INGREDIENT,\r\n    ingredientName: name,\r\n  };\r\n};\r\nexport const setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\nexport const fetchIngredientsError = () => {\r\n  return {\r\n    type: actionTypes.FETCH_INGREDIENTS_ERROR,\r\n  };\r\n};\r\nexport const initIngredients = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://burger-order-react.firebaseio.com/ingredients.json\")\r\n      .then((resp) => {\r\n        dispatch(setIngredients(resp.data));\r\n      })\r\n      .catch(() => dispatch(fetchIngredientsError()));\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_ERROR = \"FETCH_INGREDIENTS_ERROR\";\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well!</h1>\r\n      <div>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <p>\r\n        <strong>Total price: {props.totalPrice.toFixed(2)}&nbsp;$</strong>\r\n      </p>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancel}>\r\n        CANCEL\r\n      </Button>\r\n      {props.activeContactInfo ? null : (\r\n        <Button btnType=\"Success\" clicked={props.checkoutContinue}>\r\n          CONTINUE\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckoutSummary.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  checkoutCancel: PropTypes.func.isRequired,\r\n  checkoutContinue: PropTypes.func.isRequired,\r\n  activeContactInfo: PropTypes.bool,\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n  props.touched && props.invalid ? inputClasses.push(classes.Invalid) : null;\r\n  switch (props.elementType) { \r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map((opt) => (\r\n            <option key={opt.value} value={opt.value}>\r\n              {opt.displayVal}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label} htmlFor=\"\">\r\n        {props.label}\r\n      </label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\nInput.propTypes = {\r\n  label: PropTypes.string,\r\n  elementType: PropTypes.string.isRequired,\r\n  elementConfig: PropTypes.object.isRequired,\r\n  value: PropTypes.any,\r\n  changed: PropTypes.func.isRequired,\r\n  invalid: PropTypes.bool,\r\n  touched: PropTypes.bool,\r\n};\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./ContactInfo.css\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\n\r\nclass ContactInfo extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"name\",\r\n          type: \"text\",\r\n          placeholder: \"Your name\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 2,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"street\",\r\n          type: \"text\",\r\n          placeholder: \"Your street/app\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"zipCode\",\r\n          type: \"text\",\r\n          placeholder: \"Your zip code\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      city: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"city\",\r\n          type: \"text\",\r\n          placeholder: \"Your city\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"email\",\r\n          type: \"email\",\r\n          placeholder: \"Your email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true,\r\n          valid: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", displayVal: \"Fastest\" },\r\n            { value: \"cheapest\", displayVal: \"Cheapest\" },\r\n          ],\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          valid: true,\r\n        },\r\n      },\r\n    },\r\n    loading: false,\r\n    formIsValid: false,\r\n  };\r\n  orderHandler = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    const formData = {};\r\n    for (const formElementId in this.state.orderForm) {\r\n      formData[formElementId] = this.state.orderForm[formElementId].value;\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n      orderData: formData,\r\n    };\r\n    axios\r\n      .post(\"/orders.json\", order)\r\n      .then(() => {\r\n        this.setState({ loading: false });\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n  checkValidation(value, rules) {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    if (rules.isEmail) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  inputChangedHandler = (event, elementId) => {\r\n    const updatedForm = { ...this.state.orderForm };\r\n    const updatedFormElement = { ...updatedForm[elementId] };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.touched = true;\r\n    updatedFormElement.validation.valid = this.checkValidation(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedForm[elementId] = updatedFormElement;\r\n    let formIsValid = true;\r\n    for (const elementId in updatedForm) {\r\n      if (updatedForm[elementId].validation) {\r\n        formIsValid = updatedForm[elementId].validation.valid && formIsValid;\r\n      }\r\n    }\r\n    this.setState({ orderForm: updatedForm, formIsValid: formIsValid });\r\n  };\r\n  render() {\r\n    const formElementsArray = Object.entries(this.state.orderForm);\r\n    let form = (\r\n      <form action=\"\" onSubmit={this.orderHandler}>\r\n        {formElementsArray.map((element) => (\r\n          <Input\r\n            key={element[0]}\r\n            elementType={element[1].elementType}\r\n            elementConfig={element[1].elementConfig}\r\n            value={element[1].value}\r\n            changed={(event) => this.inputChangedHandler(event, element[0])}\r\n            invalid={!element[1].validation.valid}\r\n            touched={element[1].touched}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.state.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactInfo}>\r\n        <h4>Enter your Contact Info</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nContactInfo.propTypes = {\r\n  ingredients: PropTypes.object.isRequired,\r\n  totalPrice: PropTypes.number,\r\n  history: PropTypes.any,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.ingredients,\r\n    totalPrice: state.totalPrice,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ContactInfo);\r\n","import React, { Component } from \"react\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport { Route } from \"react-router-dom\";\r\nimport ContactInfo from \"./ContactInfo/ContactInfo\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    activeContactInfo: false,\r\n  };\r\n\r\n  checkoutCancelHandler = () => {\r\n    this.setState({ activeContactInfo: false });\r\n    this.props.history.goBack();\r\n  };\r\n  checkoutContinueHandler = () => {\r\n    this.setState({ activeContactInfo: true });\r\n    this.props.history.replace(\"/checkout/contact-info\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <CheckoutSummary\r\n          ingredients={this.props.ingredients}\r\n          checkoutCancel={this.checkoutCancelHandler}\r\n          checkoutContinue={this.checkoutContinueHandler}\r\n          totalPrice={this.props.totalPrice}\r\n          activeContactInfo={this.state.activeContactInfo}\r\n        />\r\n        <Route\r\n          path={this.props.match.path + \"/contact-info\"}\r\n          component={ContactInfo}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nCheckout.propTypes = {\r\n  match: PropTypes.any,\r\n  history: PropTypes.any,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  ingredients: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingredients: state.ingredients,\r\n    totalPrice: state.totalPrice,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\nimport classes from \"./Order.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Order = (props) => (\r\n  <div className={classes.Order}>\r\n    <p>\r\n      Ingredients:{\" \"}\r\n      {Object.entries(props.order.ingredients).map((ingredient, i) => (\r\n        <span\r\n          key={i}\r\n          style={{\r\n            textTransform: \"capitalize\",\r\n            display: \"inline-block\",\r\n            margin: \"0 8px\",\r\n            border: \"1px solid #ccc\",\r\n            padding: \"5px\",\r\n          }}\r\n        >{`${ingredient[0]} (${ingredient[1]})`}</span>\r\n      ))}\r\n    </p>\r\n    <p>\r\n      Price: <strong>{props.order.price.toFixed(2)}&nbsp;$</strong>\r\n    </p>\r\n  </div>\r\n);\r\nOrder.propTypes = {\r\n  order: PropTypes.object.isRequired,\r\n};\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    orders: [],\r\n    loading: true,\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"/orders.json\")\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        for (const [id, value] of Object.entries(res.data)) {\r\n          fetchedOrders.push({ ...value, id: id });\r\n        }\r\n        this.setState({ loading: false, orders: fetchedOrders });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.orders.length\r\n          ? this.state.orders.map((order) => (\r\n              <Order key={order.id} order={order} />\r\n            ))\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4.0,\r\n  error: false,\r\n};\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  meat: 1.3,\r\n  cheese: 0.4,\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENT: {\r\n      const newPrice =\r\n        (state.totalPrice + INGREDIENT_PRICES[action.ingredientName]).toFixed(\r\n          2\r\n        ) * 1;\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n        },\r\n        totalPrice: newPrice,\r\n      };\r\n    }\r\n    case actionTypes.REMOVE_INGREDIENT: {\r\n      let updatedCount = state.ingredients[action.ingredientName] - 1;\r\n      updatedCount = updatedCount < 0 ? 0 : updatedCount;\r\n      const newPrice =\r\n        updatedCount > 0\r\n          ? (\r\n              state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            ).toFixed(2) * 1\r\n          : state.totalPrice;\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: updatedCount,\r\n        },\r\n        totalPrice: newPrice,\r\n      };\r\n    }\r\n    case actionTypes.SET_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        ingredients: action.ingredients,\r\n        error: false,\r\n      };\r\n    }\r\n    case actionTypes.FETCH_INGREDIENTS_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nimport Checkout from \"./containers/Checkout/Checkout\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Orders from \"./containers/Orders/Orders\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  burgerBuilderReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter basename=\"/burger-order-react\">\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout} />\r\n            <Route path=\"/orders\" component={Orders} />\r\n            <Route path=\"/\" exact component={BurgerBuilder} />\r\n          </Switch>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}