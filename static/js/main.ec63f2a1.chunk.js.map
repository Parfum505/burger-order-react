{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Layout/Layout.css","components/Burger/Burger.css","components/Burger/BuildControls/BuildControls.css","hoc/Auxiliary.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","auxil","props","children","layout","className","classes","Content","burgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","ingredients","addedIngredient","Object","keys","map","ingKey","Array","_","i","key","reduce","arr","item","concat","length","BuildControl","Label","label","Less","onClick","remove","disabled","More","add","controls","BuildControls","totalPrice","toFixed","addIngredients","removeIngredients","INGREDIENT_PRICES","salad","bacon","meat","cheese","BurgerBuilder","state","addIngredientHandler","updatedCount","updatedIngredients","newPrice","Math","round","setState","removeIngredientHandler","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec63f2a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\"};","const auxil = (props) => props.children;\r\n\r\nexport default auxil;","import React from \"react\";\r\nimport Auxil from \"../../hoc/Auxiliary\";\r\nimport classes from \"./Layout.css\";\r\n\r\nconst layout = (props) => (\r\n    <Auxil>\r\n        <div>Toolbar</div>\r\n        <main className={classes.Content}>{props.children}</main>\r\n    </Auxil>\r\n)\r\n\r\nexport default layout;","import React from \"react\";\r\nimport classes from \"./BurgerIngredient.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst burgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case \"bread-bottom\":\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n        case \"bread-top\":\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>);\r\n            break;\r\n        case \"meat\":\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case \"cheese\":\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case \"bacon\":\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case \"salad\":\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n};\r\n\r\nburgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default burgerIngredient;","import React from \"react\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\nimport classes from \"./Burger.css\";\r\n\r\nconst Burger = ({ingredients}) => {\r\n    let addedIngredient = Object.keys(ingredients).map(ingKey => {\r\n        return [...Array(ingredients[ingKey])].map((_, i) => {\r\n            return <BurgerIngredient key={ingKey + i} type={ingKey}/>\r\n        });\r\n    }).reduce((arr, item) => {\r\n        return arr.concat(item);\r\n    }, []);\r\n    if(!addedIngredient.length) {\r\n        addedIngredient = <p>Please add some ingredients!</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {addedIngredient}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;","import React from \"react\";\r\nimport classes from \"./BuildControl.css\";\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}\r\n                onClick={props.remove}\r\n                disabled={props.disabled}\r\n        >Less</button>\r\n        <button className={classes.More} onClick={props.add}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default BuildControl;","import React from \"react\";\r\nimport classes from \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: 'Salad', type: 'salad'},\r\n  { label: 'Cheese', type: 'cheese'},\r\n  { label: 'Bacon', type: 'bacon'},\r\n  { label: 'Meat', type: 'meat'}\r\n];\r\nconst BuildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>Current price: <strong>{(props.totalPrice).toFixed(2)}</strong>$</p>\r\n    { controls.map((item, i) => (\r\n            <BuildControl\r\n                key={`ctrl-${item.label}`}\r\n                label={item.label}\r\n                add={() => props.addIngredients(item.type)}\r\n                remove={() => props.removeIngredients(item.type)}\r\n                disabled={props.ingredients[item.type] <= 0}\r\n            />\r\n        ))\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default BuildControls;\r\n","import React, {Component} from \"react\";\r\nimport Auxil from \"./../../hoc/Auxiliary\";\r\nimport Burger from \"./../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5 ,\r\n    bacon: 0.7 ,\r\n    meat: 1.3 ,\r\n    cheese: 0.4\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 4\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const updatedCount = this.state.ingredients[type] + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const newPrice = Math.round((this.state.totalPrice + INGREDIENT_PRICES[type]) * 100) / 100;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        const updatedCount = this.state.ingredients[type] - 1;\r\n        if (updatedCount < 0) {\r\n            return;\r\n        }\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        }\r\n        updatedIngredients[type] = updatedCount;\r\n        const newPrice = Math.round((this.state.totalPrice - INGREDIENT_PRICES[type]) * 100) / 100;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    }\r\n    render() {\r\n        return (\r\n            <Auxil>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls addIngredients={this.addIngredientHandler}\r\n                               removeIngredients={this.removeIngredientHandler}\r\n                               ingredients={this.state.ingredients}\r\n                               totalPrice={this.state.totalPrice}\r\n                />\r\n            </Auxil>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React from 'react';\r\nimport Layout from './components/Layout/Layout'\r\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n        <BurgerBuilder />\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}